{"version":3,"sources":["components/Weather/Forecast.module.css","components/YouTube/youtube.module.css","components/MyDayHeader/mydayheader.module.css","components/Weather/Conditions.module.css","components/Bottom/bottom.module.css","components/MyDayHeader/logo_resize_500.png","TextEditor/textEditor.module.css","components/Quotes/QuoteFetcher.js","components/MyDayHeader/MyDayHeader.js","TextEditor/TextEditor.js","components/Calendar/Calendar.js","components/Weather/Conditions.js","components/Weather/Forecast.js","components/YouTube/YouTube.js","components/Bottom/Bottom.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","QuoteFetcher","useState","quote","setQuote","author","setAuthor","imgSrc","setImgSrc","getQuote","fetch","then","res","json","data","console","log","contents","quotes","background","useEffect","intervalID","setInterval","clearInterval","src","alt","MyDayHeader","Container","fluid","className","classes","myDay","Row","Col","xs","centerLogo","width","height","logo","quoteEl","TextEditor","state","postitText","sizeValues","fontValues","enabled","valueChanged","bind","handleSave","handleDelete","axios","post","text","this","response","e","setState","value","postitApp","Fragment","onValueChanged","formatName","formatValues","Button","variant","onClick","React","Component","dataSource","CustomStore","load","options","_","requestOptions","dataUrl","join","items","getData","showDeleted","currentDate","Date","views","Calendar","defaultCurrentView","defaultCurrentDate","startDayHour","editing","showAllDayPanel","startDateExpr","endDateExpr","textExpr","timeZone","conditions","props","Wrapper","error","Small","loading","Loader","responseObj","cod","name","Math","round","main","temp","weather","description","Forecast","city","setCity","unit","setUnit","setResponseObj","setError","setLoading","uriEncodedCity","encodeURIComponent","forecastApp","Card","responsive","Body","Title","onSubmit","preventDefault","length","method","headers","Error","catch","err","message","forecastForm","type","placeholder","maxLength","forecastTextInput","onChange","target","Radio","checked","forecastButton","Conditions","q","a","process","body","filter","item","App","query","setQuery","list","setList","youtubeApp","searchYouTube","youtubeForm","youtubeInput","autoFocus","youtubeButton","map","key","id","href","link","title","ref","duration","uploaded_at","thumbnail","Bottom","Navbar","sticky","navbar","YouTube","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85d729a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastApp\":\"Forecast_forecastApp__ZZm3x\",\"forecastForm\":\"Forecast_forecastForm__H8bT4\",\"forecastTextInput\":\"Forecast_forecastTextInput__KB-5q\",\"Radio\":\"Forecast_Radio__3hTaM\",\"forecastButton\":\"Forecast_forecastButton__2yLP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"youtubeApp\":\"youtube_youtubeApp__3ULwG\",\"youtubeForm\":\"youtube_youtubeForm__3-w4e\",\"youtubeButton\":\"youtube_youtubeButton__3QRPN\",\"youtubeInput\":\"youtube_youtubeInput__26Y5S\",\"items\":\"youtube_items__wU-5O\",\"item\":\"youtube_item__2sVgY\",\"meta\":\"youtube_meta__HNSJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centerLogo\":\"mydayheader_centerLogo__2J4DP\",\"quoteEl\":\"mydayheader_quoteEl__1uvvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Conditions_Wrapper__2LsX_\",\"Small\":\"Conditions_Small__2OchJ\",\"Loader\":\"Conditions_Loader__2wbnQ\",\"spin\":\"Conditions_spin__CKtkN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"bottom_navbar__PNFrH\"};","module.exports = __webpack_public_path__ + \"static/media/logo_resize_500.ce612949.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postitApp\":\"textEditor_postitApp__3rI3u\"};","import React, { useState, useEffect } from \"react\";\n\nfunction QuoteFetcher() {\n  const [quote, setQuote] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [author, setAuthor] = useState(\"\");\n  const [imgSrc, setImgSrc] = useState(\"\");\n\n  useEffect(() => {\n    getQuote();\n    const intervalID = setInterval(() => {\n      getQuote();\n    }, 24 * 60 * 60 * 1000);\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n  function getQuote() {\n    fetch(\"http://quotes.rest/qod.json?category=inspire\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setQuote(data.contents.quotes[0].quote);\n        setAuthor(data.contents.quotes[0].author);\n        setImgSrc(data.contents.quotes[0].background);\n      });\n  }\n  return (\n    <div>\n      <h5>{quote}</h5>\n      <p>- {author}</p>\n      <img src={imgSrc} alt=\"inspirational img\" />\n    </div>\n  );\n}\n\nexport default QuoteFetcher;\n","import React from \"react\";\nimport logo from \"./logo_resize_500.png\";\nimport classes from \"./mydayheader.module.css\";\nimport QuoteFetcher from \"../Quotes/QuoteFetcher\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst MyDayHeader = () => {\n  return (\n    <div>\n      <Container fluid=\"md\" className={classes.myDay}>\n        <Row>\n          <Col></Col>\n          <Col xs={5} className={classes.centerLogo}>\n            <img width={250} height={250} alt=\"myDay_logo\" src={logo} />\n          </Col>\n          <Col className={classes.quoteEl}>\n            <QuoteFetcher />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default MyDayHeader;\n","import React from \"react\";\nimport classes from \"./textEditor.module.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"devextreme/dist/css/dx.common.css\";\nimport \"../themes/generated/theme.base.css\";\nimport \"../themes/generated/theme.additional.css\";\nimport \"../dx-styles.scss\";\n\nimport HtmlEditor, {\n  Toolbar,\n  MediaResizing,\n  Item,\n} from \"devextreme-react/html-editor\";\n\nclass TextEditor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      postitText: \"\",\n    };\n    this.sizeValues = [\"8pt\", \"10pt\", \"12pt\", \"14pt\"];\n    this.fontValues = [\n      \"Arial\",\n      \"Courier New\",\n      \"Lucida Console\",\n      \"Tahoma\",\n      \"Times New Roman\",\n      \"Verdana\",\n    ];\n    // this.headerValues = [false, 1, 2, 3, 4, 5];\n    this.enabled = {\n      enabled: true,\n    };\n    this.valueChanged = this.valueChanged.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async handleSave() {\n    const response = await axios.post(\"http://localhost:5000/postit\", {\n      text: this.state.postitText,\n    });\n    console.log(response);\n  }\n  valueChanged(e) {\n    this.setState({\n      postitText: e.value,\n    });\n  }\n  async handleDelete() {\n    this.setState({ postitText: \"\" });\n  }\n\n  render() {\n    let { postitText } = this.state;\n    return (\n      <div className={classes.postitApp}>\n        <React.Fragment>\n          <div className=\"widget-container\">\n            <h5>Post-It</h5>\n            <HtmlEditor\n              height=\"380px\"\n              value={postitText}\n              onValueChanged={this.valueChanged}\n            >\n              <MediaResizing enabled={true} />\n              <Toolbar>\n                <Item formatName=\"separator\" />\n                <Item formatName=\"size\" formatValues={this.sizeValues} />\n                <Item formatName=\"font\" formatValues={this.fontValues} />\n                <Item formatName=\"separator\" />\n                <Item formatName=\"bold\" />\n                <Item formatName=\"italic\" />\n                <Item formatName=\"strike\" />\n                <Item formatName=\"underline\" />\n                <Item formatName=\"separator\" />\n                <Item formatName=\"alignLeft\" />\n                <Item formatName=\"alignCenter\" />\n                <Item formatName=\"alignRight\" />\n                <Item formatName=\"alignJustify\" />\n                <Item formatName=\"separator\" />\n                <Item formatName=\"orderedList\" />\n                <Item formatName=\"bulletList\" />\n                <Item formatName=\"separator\" />\n                <Item formatName=\"color\" />\n                <Item formatName=\"background\" />\n                <Item formatName=\"separator\" />\n                <Item formatName=\"link\" />\n                <Item formatName=\"image\" />\n                <Item formatName=\"separator\" />\n              </Toolbar>\n            </HtmlEditor>\n            <Button variant=\"secondary\" onClick={this.handleSave}>\n              SAVE\n            </Button>{\" \"}\n            <Button variant=\"danger\" onClick={this.handleDelete}>\n              DELETE\n            </Button>\n          </div>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import \"whatwg-fetch\";\nimport React from \"react\";\n\nimport Scheduler from \"devextreme-react/scheduler\";\n\nimport CustomStore from \"devextreme/data/custom_store\";\n\nfunction getData(_, requestOptions) {\n  const PUBLIC_KEY = \"AIzaSyBnNAISIUKe6xdhq1_rjor2rxoI3UlMY7k\",\n    CALENDAR_ID = \"f7jnetm22dsjc3npc2lu3buvu4@group.calendar.google.com\";\n  const dataUrl = [\n    \"https://www.googleapis.com/calendar/v3/calendars/\",\n    CALENDAR_ID,\n    \"/events?key=\",\n    PUBLIC_KEY,\n  ].join(\"\");\n\n  return fetch(dataUrl, requestOptions)\n    .then((response) => response.json())\n    .then((data) => data.items);\n}\n\nconst dataSource = new CustomStore({\n  load: (options) => getData(options, { showDeleted: false }),\n});\n\nconst currentDate = new Date(2020, 9, 19);\nconst views = [\"day\", \"workWeek\", \"month\"];\n\nclass Calendar extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"short-title\">\n          <h5>Calendar</h5>\n\n          <Scheduler\n            className=\"card\"\n            dataSource={dataSource}\n            views={views}\n            defaultCurrentView=\"workWeek\"\n            defaultCurrentDate={currentDate}\n            height={500}\n            startDayHour={7}\n            editing={false}\n            showAllDayPanel={false}\n            startDateExpr=\"start.dateTime\"\n            endDateExpr=\"end.dateTime\"\n            textExpr=\"summary\"\n            timeZone=\"America/Los_Angeles\"\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Calendar;\n","import React from \"react\";\nimport classes from \"./Conditions.module.css\";\n\nconst conditions = (props) => {\n  return (\n    <div className={classes.Wrapper}>\n      {props.error && (\n        <small className={classes.Small}>Please enter a valid city.</small>\n      )}\n      {props.loading && <div className={classes.Loader}>Loading...</div>}\n\n      {props.responseObj.cod === 200 ? (\n        <div>\n          <p>\n            <strong>{props.responseObj.name}</strong>\n          </p>\n          <p>\n            It is currently {Math.round(props.responseObj.main.temp)} degrees\n            out with {props.responseObj.weather[0].description}.\n          </p>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default conditions;\n","import React, { useState } from \"react\";\nimport Conditions from \"./Conditions\";\nimport classes from \"./Forecast.module.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card } from \"react-bootstrap\";\n\nconst Forecast = () => {\n  let [city, setCity] = useState(\"\");\n  let [unit, setUnit] = useState(\"imperial\");\n  let [responseObj, setResponseObj] = useState({});\n  let [error, setError] = useState(false);\n  let [loading, setLoading] = useState(false);\n\n  const uriEncodedCity = encodeURIComponent(city);\n\n  function getForecast(e) {\n    e.preventDefault();\n\n    if (city.length === 0) {\n      return setError(true);\n    }\n\n    // Clear state in preparation for new data\n    setError(false);\n    setResponseObj({});\n    setLoading(true);\n\n    fetch(\n      // Current Forecast\n      `https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`,\n      // `https://community-open-weather-map.p.rapidapi.com/forecast?q=${uriEncodedCity}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n          //   \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n          \"x-rapidapi-key\":\n            \"b54663a5e6msh64cb43d3524bb21p186d22jsnb6eb1989079a\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response);\n        if (response.cod !== 200) {\n          throw new Error();\n        }\n        setResponseObj(response);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(true);\n        setLoading(false);\n        console.log(err.message);\n      });\n  }\n\n  return (\n    <div className={classes.forecastApp}>\n      <Card responsive>\n        <Card.Body>\n          <Card.Title>Find Current Weather</Card.Title>\n\n          <form onSubmit={getForecast} className={classes.forecastForm}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter City\"\n              maxLength=\"50\"\n              className={classes.forecastTextInput}\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n            />\n            <label className={classes.Radio}>\n              <input\n                type=\"radio\"\n                name=\"units\"\n                checked={unit === \"imperial\"}\n                value=\"imperial\"\n                onChange={(e) => setUnit(e.target.value)}\n              />\n              Fahrenheit\n            </label>\n            <label className={classes.Radio}>\n              <input\n                type=\"radio\"\n                name=\"units\"\n                checked={unit === \"metric\"}\n                value=\"metric\"\n                onChange={(e) => setUnit(e.target.value)}\n              />\n              Celcius\n            </label>\n\n            <button className={classes.forecastButton} type=\"submit\">\n              Get Forecast\n            </button>\n          </form>\n\n          <Conditions\n            responseObj={responseObj}\n            error={error}\n            loading={loading}\n          />\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import React from \"react\";\n\nimport \"./youtube.module.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card } from \"react-bootstrap\";\nimport classes from \"./youtube.module.css\";\n\nasync function searchYouTube(q) {\n  q = encodeURIComponent(q);\n  const response = await fetch(\n    \"https://youtube-search-results.p.rapidapi.com/youtube-search/?q=\" + q,\n    {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"youtube-search-results.p.rapidapi.com\",\n        \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n      },\n    }\n  );\n  const body = await response.json();\n  console.log(body);\n  return body.items.filter((item) => item.type === \"video\");\n}\n\nfunction App() {\n  const [query, setQuery] = React.useState(\"React tutorial\");\n  const [list, setList] = React.useState(null);\n\n  const search = (e) => {\n    e.preventDefault();\n    searchYouTube(query).then(setList);\n  };\n\n  return (\n    <div className={classes.youtubeApp}>\n      <Card responsive>\n        <Card.Body>\n          <Card.Title>YouTube</Card.Title>\n\n          <form onSubmit={search} className={classes.youtubeForm}>\n            <input\n              className={classes.youtubeInput}\n              autoFocus\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n            />\n            <button className={classes.youtubeButton}>Search YouTube</button>\n          </form>\n          {list &&\n            (list.length === 0 ? (\n              <p>No results</p>\n            ) : (\n              <ul className=\"items\">\n                {list.map((item) => (\n                  <li className=\"item\" key={item.id}>\n                    <div>\n                      <b>\n                        <a href={item.link}>{item.title}</a>\n                      </b>\n                      <p>{item.description}</p>\n                    </div>\n                    <ul className=\"meta\">\n                      <li>\n                        By: <a href={item.author.ref}>{item.author.name}</a>\n                      </li>\n                      <li>Views: {item.views}</li>\n                      <li>Duration: {item.duration}</li>\n                      <li>Uploaded: {item.uploaded_at}</li>\n                    </ul>\n                    <img alt=\"\" src={item.thumbnail} />\n                  </li>\n                ))}\n              </ul>\n            ))}\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./bottom.module.css\";\n\nimport classes from \"./bottom.module.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nconst Bottom = () => {\n  return (\n    <div>\n      <Navbar sticky=\"bottom\" className={classes.navbar}>\n        I immensely enjoyed this bootcamp with all of you! <br />\n        Cheers, your fellow GitHub-er @TracyVy\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Bottom;\n","import React from \"react\";\nimport \"./app.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport MyDayHeader from \"./components/MyDayHeader/MyDayHeader\";\nimport TextEditor from \"./TextEditor/TextEditor\";\n// import Postit from \"./components/Postit/Postit\";\nimport Calendar from \"./components/Calendar/Calendar\";\nimport Forecast from \"./components/Weather/Forecast\";\nimport YouTube from \"./components/YouTube/YouTube\";\nimport Bottom from \"./components/Bottom/Bottom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <MyDayHeader />\n        <Calendar />\n\n        <Container>\n          <Row>\n            <Col>\n              <Forecast />\n            </Col>\n            <Col>\n              <TextEditor />\n            </Col>\n          </Row>\n        </Container>\n\n        <Container>\n          <Row>\n            <Col>\n              <YouTube />\n            </Col>\n            <Col></Col>\n          </Row>\n        </Container>\n\n        <Bottom />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}