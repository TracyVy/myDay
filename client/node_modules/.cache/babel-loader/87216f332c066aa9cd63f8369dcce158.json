{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/calendar/client/src/contexts/navigation.js\";\nimport React, { useState, createContext, useContext, useEffect } from 'react';\nconst NavigationContext = createContext({});\n\nconst useNavigation = () => useContext(NavigationContext);\n\nfunction NavigationProvider(props) {\n  const [navigationData, setNavigationData] = useState({});\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, Object.assign({\n    value: {\n      navigationData,\n      setNavigationData\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction withNavigationWatcher(Component) {\n  return function (props) {\n    const {\n      path\n    } = props.match;\n    const {\n      setNavigationData\n    } = useNavigation();\n    useEffect(() => {\n      setNavigationData({\n        currentPath: path\n      });\n    }, [path, setNavigationData]);\n    return React.createElement(Component, props);\n  };\n}\n\nexport { NavigationProvider, useNavigation, withNavigationWatcher };","map":{"version":3,"sources":["/Users/tracyvy/Desktop/calendar/client/src/contexts/navigation.js"],"names":["React","useState","createContext","useContext","useEffect","NavigationContext","useNavigation","NavigationProvider","props","navigationData","setNavigationData","withNavigationWatcher","Component","path","match","currentPath","createElement"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,EAAqDC,SAArD,QAAsE,OAAtE;AAEA,MAAMC,iBAAiB,GAAGH,aAAa,CAAC,EAAD,CAAvC;;AACA,MAAMI,aAAa,GAAG,MAAMH,UAAU,CAACE,iBAAD,CAAtC;;AAEA,SAASE,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AAEA,sBACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB;AADT,KAEMF,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD;;AAED,SAASG,qBAAT,CAA+BC,SAA/B,EAA0C;AACxC,SAAO,UAAUJ,KAAV,EAAiB;AACtB,UAAM;AAAEK,MAAAA;AAAF,QAAWL,KAAK,CAACM,KAAvB;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAwBJ,aAAa,EAA3C;AAEAF,IAAAA,SAAS,CAAC,MAAM;AACdM,MAAAA,iBAAiB,CAAC;AAAEK,QAAAA,WAAW,EAAEF;AAAf,OAAD,CAAjB;AACD,KAFQ,EAEN,CAACA,IAAD,EAAOH,iBAAP,CAFM,CAAT;AAIA,WAAOV,KAAK,CAACgB,aAAN,CAAoBJ,SAApB,EAA+BJ,KAA/B,CAAP;AACD,GATD;AAUD;;AAED,SACED,kBADF,EAEED,aAFF,EAGEK,qBAHF","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from 'react';\n\nconst NavigationContext = createContext({});\nconst useNavigation = () => useContext(NavigationContext);\n\nfunction NavigationProvider(props) {\n  const [navigationData, setNavigationData] = useState({});\n\n  return (\n    <NavigationContext.Provider\n      value={{ navigationData, setNavigationData }}\n      {...props}\n    />\n  );\n}\n\nfunction withNavigationWatcher(Component) {\n  return function (props) {\n    const { path } = props.match;\n    const { setNavigationData } = useNavigation();\n\n    useEffect(() => {\n      setNavigationData({ currentPath: path });\n    }, [path, setNavigationData]);\n\n    return React.createElement(Component, props);\n  }\n}\n\nexport {\n  NavigationProvider,\n  useNavigation,\n  withNavigationWatcher\n}\n"]},"metadata":{},"sourceType":"module"}