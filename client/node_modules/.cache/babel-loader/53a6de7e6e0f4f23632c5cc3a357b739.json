{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/calendar/client/src/layouts/side-nav-inner-toolbar/side-nav-inner-toolbar.js\";\nimport Button from 'devextreme-react/button';\nimport Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-inner-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\nexport default function ({\n  title,\n  children\n}) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const {\n    isXSmall,\n    isLarge\n  } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(isLarge ? MenuStatus.Opened : MenuStatus.Closed);\n  const toggleMenu = useCallback(({\n    event\n  }) => {\n    setMenuStatus(prevMenuStatus => prevMenuStatus === MenuStatus.Closed ? MenuStatus.Opened : MenuStatus.Closed);\n    event.stopPropagation();\n  }, []);\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(prevMenuStatus => prevMenuStatus === MenuStatus.Closed ? MenuStatus.TemporaryOpened : prevMenuStatus);\n  }, []);\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge ? MenuStatus.Closed : prevMenuStatus);\n  }, [isLarge]);\n  const onNavigationChanged = useCallback(({\n    itemData: {\n      path\n    },\n    event,\n    node\n  }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: 'side-nav-inner-toolbar',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    className: ['drawer', patchCssClass].join(' '),\n    position: 'before',\n    closeOnOutsideClick: onOutsideClick,\n    openedStateMode: isLarge ? 'shrink' : 'overlap',\n    revealMode: isXSmall ? 'slide' : 'expand',\n    minSize: isXSmall ? 0 : 60,\n    maxSize: 250,\n    shading: isLarge ? false : true,\n    opened: menuStatus === MenuStatus.Closed ? false : true,\n    template: 'menu',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    menuToggleEnabled: isXSmall,\n    toggleMenu: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ScrollView, {\n    ref: scrollViewRef,\n    className: 'layout-body with-footer',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'content',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.Children.map(children, item => {\n    return item.type !== Footer && item;\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: 'content-block',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, React.Children.map(children, item => {\n    return item.type === Footer && item;\n  })))), /*#__PURE__*/React.createElement(Template, {\n    name: 'menu',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SideNavigationMenu, {\n    compactMode: menuStatus === MenuStatus.Closed,\n    selectedItemChanged: onNavigationChanged,\n    openMenu: temporaryOpenMenu,\n    onMenuReady: onMenuReady,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    id: 'navigation-header',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, !isXSmall && /*#__PURE__*/React.createElement(Item, {\n    location: 'before',\n    cssClass: 'menu-button',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: \"menu\",\n    stylingMode: \"text\",\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Item, {\n    location: 'before',\n    cssClass: 'header-title',\n    text: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }))))));\n}\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};","map":{"version":3,"sources":["/Users/tracyvy/Desktop/calendar/client/src/layouts/side-nav-inner-toolbar/side-nav-inner-toolbar.js"],"names":["Button","Drawer","ScrollView","Toolbar","Item","React","useState","useCallback","useRef","useHistory","Header","SideNavigationMenu","Footer","useScreenSize","Template","useMenuPatch","title","children","scrollViewRef","history","isXSmall","isLarge","patchCssClass","onMenuReady","menuStatus","setMenuStatus","MenuStatus","Opened","Closed","toggleMenu","event","prevMenuStatus","stopPropagation","temporaryOpenMenu","TemporaryOpened","onOutsideClick","onNavigationChanged","itemData","path","node","selected","preventDefault","push","current","instance","scrollTo","join","Children","map","item","type"],"mappings":"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","sourcesContent":["import Button from 'devextreme-react/button';\nimport Drawer from 'devextreme-react/drawer';\nimport ScrollView from 'devextreme-react/scroll-view';\nimport Toolbar, { Item } from 'devextreme-react/toolbar';\nimport React, { useState, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport { Header, SideNavigationMenu, Footer } from '../../components';\nimport './side-nav-inner-toolbar.scss';\nimport { useScreenSize } from '../../utils/media-query';\nimport { Template } from 'devextreme-react/core/template';\nimport { useMenuPatch } from '../../utils/patches';\n\nexport default function ({ title, children }) {\n  const scrollViewRef = useRef();\n  const history = useHistory();\n  const { isXSmall, isLarge } = useScreenSize();\n  const [patchCssClass, onMenuReady] = useMenuPatch();\n  const [menuStatus, setMenuStatus] = useState(\n    isLarge ? MenuStatus.Opened : MenuStatus.Closed\n  );\n\n  const toggleMenu = useCallback(({ event }) => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.Opened\n        : MenuStatus.Closed\n    );\n    event.stopPropagation();\n  }, []);\n\n  const temporaryOpenMenu = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus === MenuStatus.Closed\n        ? MenuStatus.TemporaryOpened\n        : prevMenuStatus\n    );\n  }, []);\n\n  const onOutsideClick = useCallback(() => {\n    setMenuStatus(\n      prevMenuStatus => prevMenuStatus !== MenuStatus.Closed && !isLarge\n        ? MenuStatus.Closed\n        : prevMenuStatus\n    );\n  }, [isLarge]);\n\n  const onNavigationChanged = useCallback(({ itemData: { path }, event, node }) => {\n    if (menuStatus === MenuStatus.Closed || !path || node.selected) {\n      event.preventDefault();\n      return;\n    }\n\n    history.push(path);\n    scrollViewRef.current.instance.scrollTo(0);\n\n    if (!isLarge || menuStatus === MenuStatus.TemporaryOpened) {\n      setMenuStatus(MenuStatus.Closed);\n      event.stopPropagation();\n    }\n  }, [history, menuStatus, isLarge]);\n\n  return (\n    <div className={'side-nav-inner-toolbar'}>\n      <Drawer\n        className={['drawer', patchCssClass].join(' ')}\n        position={'before'}\n        closeOnOutsideClick={onOutsideClick}\n        openedStateMode={isLarge ? 'shrink' : 'overlap'}\n        revealMode={isXSmall ? 'slide' : 'expand'}\n        minSize={isXSmall ? 0 : 60}\n        maxSize={250}\n        shading={isLarge ? false : true}\n        opened={menuStatus === MenuStatus.Closed ? false : true}\n        template={'menu'}\n      >\n        <div className={'container'}>\n          <Header\n            menuToggleEnabled={isXSmall}\n            toggleMenu={toggleMenu}\n          />\n          <ScrollView ref={scrollViewRef} className={'layout-body with-footer'}>\n            <div className={'content'}>\n              {React.Children.map(children, item => {\n                return item.type !== Footer && item;\n              })}\n            </div>\n            <div className={'content-block'}>\n              {React.Children.map(children, item => {\n                return item.type === Footer && item;\n              })}\n            </div>\n          </ScrollView>\n        </div>\n        <Template name={'menu'}>\n          <SideNavigationMenu\n            compactMode={menuStatus === MenuStatus.Closed}\n            selectedItemChanged={onNavigationChanged}\n            openMenu={temporaryOpenMenu}\n            onMenuReady={onMenuReady}\n          >\n            <Toolbar id={'navigation-header'}>\n              {\n                !isXSmall &&\n                <Item\n                  location={'before'}\n                  cssClass={'menu-button'}\n                >\n                  <Button icon=\"menu\" stylingMode=\"text\" onClick={toggleMenu} />\n                </Item>\n              }\n              <Item location={'before'} cssClass={'header-title'} text={title} />\n            </Toolbar>\n          </SideNavigationMenu>\n        </Template>\n      </Drawer>\n    </div>\n  );\n}\n\nconst MenuStatus = {\n  Closed: 1,\n  Opened: 2,\n  TemporaryOpened: 3\n};\n"]},"metadata":{},"sourceType":"module"}