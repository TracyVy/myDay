{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Quotes/QuoteFetcher.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst QuoteOTD = () => {\n  function QuoteFetcher() {\n    const [quote, setQuote] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [author, setAuthor] = useState(\"\");\n    const [imgSrc, setImgSrc] = useState(\"\");\n    useEffect(() => {\n      getQuote();\n      const intervalID = setInterval(() => {\n        getQuote();\n      }, 24 * 60 * 60 * 1000);\n      return () => {\n        clearInterval(intervalID);\n      };\n    }, []);\n\n    function getQuote() {\n      fetch(\"http://quotes.rest/qod.json?category=inspire\").then(res => res.json()).then(data => {\n        console.log(data);\n        setQuote(data.contents.quotes[0].quote);\n        setAuthor(data.contents.quotes[0].author);\n        setImgSrc(data.contents.quotes[0].background);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, quote), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"- \", author), /*#__PURE__*/React.createElement(\"img\", {\n      src: imgSrc,\n      alt: \"inspirational img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default QuoteOTD;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Quotes/QuoteFetcher.js"],"names":["React","useState","useEffect","QuoteOTD","QuoteFetcher","quote","setQuote","loading","setLoading","author","setAuthor","imgSrc","setImgSrc","getQuote","intervalID","setInterval","clearInterval","fetch","then","res","json","data","console","log","contents","quotes","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,WAASC,YAAT,GAAwB;AACtB,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,UAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,UAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,UAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACdW,MAAAA,QAAQ;AACR,YAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCF,QAAAA,QAAQ;AACT,OAF6B,EAE3B,KAAK,EAAL,GAAU,EAAV,GAAe,IAFY,CAA9B;AAGA,aAAO,MAAM;AACXG,QAAAA,aAAa,CAACF,UAAD,CAAb;AACD,OAFD;AAGD,KARQ,EAQN,EARM,CAAT;;AASA,aAASD,QAAT,GAAoB;AAClBI,MAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAf,QAAAA,QAAQ,CAACe,IAAI,CAACG,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBpB,KAAzB,CAAR;AACAK,QAAAA,SAAS,CAACW,IAAI,CAACG,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBhB,MAAzB,CAAT;AACAG,QAAAA,SAAS,CAACS,IAAI,CAACG,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBC,UAAzB,CAAT;AACD,OAPH;AAQD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKrB,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAMI,MAAN,CAFF,eAGE;AAAK,MAAA,GAAG,EAAEE,MAAV;AAAkB,MAAA,GAAG,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;AACF,CAlCD;;AAmCA,eAAeR,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst QuoteOTD = () => {\n  function QuoteFetcher() {\n    const [quote, setQuote] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [author, setAuthor] = useState(\"\");\n    const [imgSrc, setImgSrc] = useState(\"\");\n\n    useEffect(() => {\n      getQuote();\n      const intervalID = setInterval(() => {\n        getQuote();\n      }, 24 * 60 * 60 * 1000);\n      return () => {\n        clearInterval(intervalID);\n      };\n    }, []);\n    function getQuote() {\n      fetch(\"http://quotes.rest/qod.json?category=inspire\")\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data);\n          setQuote(data.contents.quotes[0].quote);\n          setAuthor(data.contents.quotes[0].author);\n          setImgSrc(data.contents.quotes[0].background);\n        });\n    }\n    return (\n      <div>\n        <h1>{quote}</h1>\n        <p>- {author}</p>\n        <img src={imgSrc} alt=\"inspirational img\" />\n      </div>\n    );\n  }\n};\nexport default QuoteOTD;\n"]},"metadata":{},"sourceType":"module"}