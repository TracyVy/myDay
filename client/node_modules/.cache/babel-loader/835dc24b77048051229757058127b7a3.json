{"ast":null,"code":"import _slicedToArray from\"/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Conditions from\"./Conditions\";import classes from\"./Forecast.module.css\";import\"bootstrap/dist/css/bootstrap.min.css\";import{Card}from\"react-bootstrap\";var Forecast=function Forecast(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var _useState3=useState(\"imperial\"),_useState4=_slicedToArray(_useState3,2),unit=_useState4[0],setUnit=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),responseObj=_useState6[0],setResponseObj=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var uriEncodedCity=encodeURIComponent(city);function getForecast(e){e.preventDefault();if(city.length===0){return setError(true);}// Clear state in preparation for new data\nsetError(false);setResponseObj({});setLoading(true);fetch(// Current Forecast\n\"https://community-open-weather-map.p.rapidapi.com/weather?units=\".concat(unit,\"&q=\").concat(uriEncodedCity),// `https://community-open-weather-map.p.rapidapi.com/forecast?q=${uriEncodedCity}`,\n{method:\"GET\",headers:{\"x-rapidapi-host\":\"community-open-weather-map.p.rapidapi.com\",//   \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n\"x-rapidapi-key\":\"b54663a5e6msh64cb43d3524bb21p186d22jsnb6eb1989079a\"}}).then(function(response){return response.json();}).then(function(response){console.log(response);if(response.cod!==200){throw new Error();}setResponseObj(response);setLoading(false);}).catch(function(err){setError(true);setLoading(false);console.log(err.message);});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.forecastApp},/*#__PURE__*/React.createElement(Card,{responsive:true},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Find Current Weather\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:getForecast,className:classes.forecastForm},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:\"Enter City\",maxLength:\"50\",className:classes.forecastTextInput,value:city,onChange:function onChange(e){return setCity(e.target.value);}}),/*#__PURE__*/React.createElement(\"label\",{className:classes.Radio},/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"imperial\",value:\"imperial\",onChange:function onChange(e){return setUnit(e.target.value);}}),\"Fahrenheit\"),/*#__PURE__*/React.createElement(\"label\",{className:classes.Radio},/*#__PURE__*/React.createElement(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"metric\",value:\"metric\",onChange:function onChange(e){return setUnit(e.target.value);}}),\"Celcius\"),/*#__PURE__*/React.createElement(\"button\",{className:classes.forecastButton,type:\"submit\"},\"Get Forecast\")),/*#__PURE__*/React.createElement(Conditions,{responseObj:responseObj,error:error,loading:loading}))));};export default Forecast;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Weather/Forecast.js"],"names":["React","useState","Conditions","classes","Card","Forecast","city","setCity","unit","setUnit","responseObj","setResponseObj","error","setError","loading","setLoading","uriEncodedCity","encodeURIComponent","getForecast","e","preventDefault","length","fetch","method","headers","then","response","json","console","log","cod","Error","catch","err","message","forecastApp","forecastForm","forecastTextInput","target","value","Radio","forecastButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Conditions from \"./Conditions\";\nimport classes from \"./Forecast.module.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card } from \"react-bootstrap\";\n\nconst Forecast = () => {\n  let [city, setCity] = useState(\"\");\n  let [unit, setUnit] = useState(\"imperial\");\n  let [responseObj, setResponseObj] = useState({});\n  let [error, setError] = useState(false);\n  let [loading, setLoading] = useState(false);\n\n  const uriEncodedCity = encodeURIComponent(city);\n\n  function getForecast(e) {\n    e.preventDefault();\n\n    if (city.length === 0) {\n      return setError(true);\n    }\n\n    // Clear state in preparation for new data\n    setError(false);\n    setResponseObj({});\n    setLoading(true);\n\n    fetch(\n      // Current Forecast\n      `https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`,\n      // `https://community-open-weather-map.p.rapidapi.com/forecast?q=${uriEncodedCity}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n          //   \"x-rapidapi-key\": process.env.REACT_APP_API_KEY,\n          \"x-rapidapi-key\":\n            \"b54663a5e6msh64cb43d3524bb21p186d22jsnb6eb1989079a\",\n        },\n      }\n    )\n      .then((response) => response.json())\n      .then((response) => {\n        console.log(response);\n        if (response.cod !== 200) {\n          throw new Error();\n        }\n        setResponseObj(response);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setError(true);\n        setLoading(false);\n        console.log(err.message);\n      });\n  }\n\n  return (\n    <div className={classes.forecastApp}>\n      <Card responsive>\n        <Card.Body>\n          <Card.Title>Find Current Weather</Card.Title>\n\n          <form onSubmit={getForecast} className={classes.forecastForm}>\n            <input\n              type=\"text\"\n              placeholder=\"Enter City\"\n              maxLength=\"50\"\n              className={classes.forecastTextInput}\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n            />\n            <label className={classes.Radio}>\n              <input\n                type=\"radio\"\n                name=\"units\"\n                checked={unit === \"imperial\"}\n                value=\"imperial\"\n                onChange={(e) => setUnit(e.target.value)}\n              />\n              Fahrenheit\n            </label>\n            <label className={classes.Radio}>\n              <input\n                type=\"radio\"\n                name=\"units\"\n                checked={unit === \"metric\"}\n                value=\"metric\"\n                onChange={(e) => setUnit(e.target.value)}\n              />\n              Celcius\n            </label>\n\n            <button className={classes.forecastButton} type=\"submit\">\n              Get Forecast\n            </button>\n          </form>\n\n          <Conditions\n            responseObj={responseObj}\n            error={error}\n            loading={loading}\n          />\n        </Card.Body>\n      </Card>\n    </div>\n  );\n};\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}