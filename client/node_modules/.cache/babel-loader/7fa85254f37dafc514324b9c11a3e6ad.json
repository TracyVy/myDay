{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js\";\nimport React, { useState } from \"react\";\nimport \"./google.module.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport GoogleButton from \"react-google-button\";\nconst CLIENT_ID = \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\"; // Array of API discovery doc URLs for APIs used by the quickstart\n\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.events\"; // Sign in the user upon button click.\n\nfunction handleAuthClick(event) {\n  window.gapi.auth2.getAuthInstance().signIn();\n} // Sign out the user upon button click.\n\n\nfunction handleSignoutClick(event) {\n  window.gapi.auth2.getAuthInstance().signOut();\n}\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\n\n\nfunction appendPre(message) {\n  var pre = document.getElementById(\"content\");\n  var textContent = document.createTextNode(message + \"\\n\");\n  pre.appendChild(textContent);\n}\n\nconst GoogleOAuth = () => {\n  const [signIn, setSignIn] = useState(false);\n  const [emailID, setEmailID] = useState(\"example@gmail.com\");\n  React.useEffect(() => {\n    console.log(\"XXXX - useEffect\");\n    window.gapi.load(\"client:auth2\", initClient);\n  }, [window.gapi]);\n\n  function listUpcomingEvents() {\n    window.gapi.client.calendar.calendars.get({\n      calendarId: \"primary\"\n    }).then(e => {\n      console.log(e.result.id);\n      setEmailID(e.result.id);\n    });\n  }\n\n  function initClient() {\n    // console.log(window.gapi.auth2.BasicProfile());\n    window.gapi.client.init({\n      apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function (e) {\n      console.log(\"XX - Client is connected\", e); // Listen for sign-in state changes.\n\n      window.gapi.auth2.getAuthInstance().isSignedIn.listen(e => {\n        setSignIn(e); // shortcircuiting if Statement\n\n        e && listUpcomingEvents();\n      });\n    }, function (error) {\n      appendPre(JSON.stringify(error, null, 2));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleButton, {\n    onClick: handleAuthClick,\n    id: \"authorize_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSignoutClick,\n    id: \"signout_button\",\n    className: classes.signOutBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Sign Out\"))), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: `https://calendar.google.com/calendar/embed?src=${emailID}&ctz=America%2FLos_Angeles`,\n    style: {\n      border: \"0\"\n    },\n    frameborder: \"0\",\n    scrolling: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GoogleOAuth;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js"],"names":["React","useState","Row","Col","GoogleButton","CLIENT_ID","DISCOVERY_DOCS","SCOPES","handleAuthClick","event","window","gapi","auth2","getAuthInstance","signIn","handleSignoutClick","signOut","appendPre","message","pre","document","getElementById","textContent","createTextNode","appendChild","GoogleOAuth","setSignIn","emailID","setEmailID","useEffect","console","log","load","initClient","listUpcomingEvents","client","calendar","calendars","get","calendarId","then","e","result","id","init","apiKey","clientId","discoveryDocs","scope","isSignedIn","listen","error","JSON","stringify","classes","signOutBtn","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./google.module.css\";\n\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport GoogleButton from \"react-google-button\";\n\nconst CLIENT_ID =\n  \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\";\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\n  \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\n\n// Sign in the user upon button click.\nfunction handleAuthClick(event) {\n  window.gapi.auth2.getAuthInstance().signIn();\n}\n\n// Sign out the user upon button click.\nfunction handleSignoutClick(event) {\n  window.gapi.auth2.getAuthInstance().signOut();\n}\n\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\nfunction appendPre(message) {\n  var pre = document.getElementById(\"content\");\n  var textContent = document.createTextNode(message + \"\\n\");\n  pre.appendChild(textContent);\n}\n\nconst GoogleOAuth = () => {\n  const [signIn, setSignIn] = useState(false);\n  const [emailID, setEmailID] = useState(\"example@gmail.com\");\n  React.useEffect(() => {\n    console.log(\"XXXX - useEffect\");\n    window.gapi.load(\"client:auth2\", initClient);\n  }, [window.gapi]);\n\n  function listUpcomingEvents() {\n    window.gapi.client.calendar.calendars\n      .get({\n        calendarId: \"primary\",\n      })\n      .then((e) => {\n        console.log(e.result.id);\n        setEmailID(e.result.id);\n      });\n  }\n\n  function initClient() {\n    // console.log(window.gapi.auth2.BasicProfile());\n    window.gapi.client\n      .init({\n        apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n      .then(\n        function (e) {\n          console.log(\"XX - Client is connected\", e);\n          // Listen for sign-in state changes.\n          window.gapi.auth2.getAuthInstance().isSignedIn.listen((e) => {\n            setSignIn(e);\n            // shortcircuiting if Statement\n            e && listUpcomingEvents();\n          });\n        },\n        function (error) {\n          appendPre(JSON.stringify(error, null, 2));\n        }\n      );\n  }\n\n  return (\n    <div>\n      <Row>\n        <Col>\n          <GoogleButton onClick={handleAuthClick} id=\"authorize_button\" />\n        </Col>\n        <Col>\n          <button\n            onClick={handleSignoutClick}\n            id=\"signout_button\"\n            className={classes.signOutBtn}\n          >\n            Sign Out\n          </button>\n        </Col>\n      </Row>\n\n      <iframe\n        src={`https://calendar.google.com/calendar/embed?src=${emailID}&ctz=America%2FLos_Angeles`}\n        style={{ border: \"0\" }}\n        frameborder=\"0\"\n        scrolling=\"no\"\n      ></iframe>\n    </div>\n  );\n};\n\nexport default GoogleOAuth;\n"]},"metadata":{},"sourceType":"module"}