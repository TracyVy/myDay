{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js\";\nimport React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nconst CLIENT_ID = \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\"; // Array of API discovery doc URLs for APIs used by the quickstart\n\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n/**\n *  Sign in the user upon button click.\n */\n\nfunction handleAuthClick(event) {\n  window.gapi.auth2.getAuthInstance().signIn();\n}\n/**\n *  Sign out the user upon button click.\n */\n\n\nfunction handleSignoutClick(event) {\n  window.gapi.auth2.getAuthInstance().signOut();\n}\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\n\n\nfunction appendPre(message) {\n  var pre = document.getElementById(\"content\");\n  var textContent = document.createTextNode(message + \"\\n\");\n  pre.appendChild(textContent);\n}\n/**\n * Print the summary and start datetime/date of the next ten events in\n * the authorized user's calendar. If no events are found an\n * appropriate message is printed.\n */\n\n\nfunction listUpcomingEvents() {\n  window.gapi.client.calendar.events.list({\n    calendarId: \"primary\",\n    timeMin: new Date().toISOString(),\n    showDeleted: false,\n    singleEvents: true,\n    maxResults: 10,\n    orderBy: \"startTime\"\n  }).then(function (response) {\n    var events = response.result.items;\n    appendPre(\"Upcoming events:\");\n\n    if (events.length > 0) {\n      for (let i = 0; i < events.length; i++) {\n        var event = events[i];\n        var when = event.start.dateTime;\n\n        if (!when) {\n          when = event.start.date;\n        }\n\n        appendPre(event.summary + \" (\" + when + \")\");\n      }\n    } else {\n      appendPre(\"No upcoming events found.\");\n    }\n  });\n}\n\nfunction initClient() {\n  console.log(window.gapi);\n  window.gapi.client.init({\n    apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n    clientId: CLIENT_ID,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n  }).then(function () {\n    console.log(\"Client is connected\"); // Listen for sign-in state changes.\n\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(() => {\n      listUpcomingEvents();\n    });\n  }, function (error) {\n    appendPre(JSON.stringify(error, null, 2));\n  });\n}\n\nclass GoogleOAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.responseGoogle = response => {\n      // const imageURL = response.profileObj.imageUrl;\n      const email = response.profileObj.email;\n      console.log(email); // const name = response.profileObj.givenName;\n\n      const accessToken = response.accessToken;\n      console.log(accessToken);\n      const tokenObj = response.tokenObj;\n      console.log(tokenObj);\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"XXXX - mounting\");\n    window.gapi.load(\"client:auth2\", initClient);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"GoogleOAuth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleAuthClick,\n      id: \"authorize_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"Authorize\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleSignoutClick,\n      id: \"signout_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Sign Out\"), /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: CLIENT_ID,\n      buttonText: \"Login\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle // cookiePolicy={\"single_host_origin\"}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default GoogleOAuth;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js"],"names":["React","Component","GoogleLogin","CLIENT_ID","DISCOVERY_DOCS","SCOPES","handleAuthClick","event","window","gapi","auth2","getAuthInstance","signIn","handleSignoutClick","signOut","appendPre","message","pre","document","getElementById","textContent","createTextNode","appendChild","listUpcomingEvents","client","calendar","events","list","calendarId","timeMin","Date","toISOString","showDeleted","singleEvents","maxResults","orderBy","then","response","result","items","length","i","when","start","dateTime","date","summary","initClient","console","log","init","apiKey","clientId","discoveryDocs","scope","isSignedIn","listen","error","JSON","stringify","GoogleOAuth","responseGoogle","email","profileObj","accessToken","tokenObj","componentDidMount","load","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\n\nconst CLIENT_ID =\n  \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\";\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\n  \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n\n/**\n *  Sign in the user upon button click.\n */\nfunction handleAuthClick(event) {\n  window.gapi.auth2.getAuthInstance().signIn();\n}\n\n/**\n *  Sign out the user upon button click.\n */\nfunction handleSignoutClick(event) {\n  window.gapi.auth2.getAuthInstance().signOut();\n}\n\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\nfunction appendPre(message) {\n  var pre = document.getElementById(\"content\");\n  var textContent = document.createTextNode(message + \"\\n\");\n  pre.appendChild(textContent);\n}\n\n/**\n * Print the summary and start datetime/date of the next ten events in\n * the authorized user's calendar. If no events are found an\n * appropriate message is printed.\n */\nfunction listUpcomingEvents() {\n  window.gapi.client.calendar.events\n    .list({\n      calendarId: \"primary\",\n      timeMin: new Date().toISOString(),\n      showDeleted: false,\n      singleEvents: true,\n      maxResults: 10,\n      orderBy: \"startTime\",\n    })\n    .then(function (response) {\n      var events = response.result.items;\n      appendPre(\"Upcoming events:\");\n\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          var event = events[i];\n          var when = event.start.dateTime;\n          if (!when) {\n            when = event.start.date;\n          }\n          appendPre(event.summary + \" (\" + when + \")\");\n        }\n      } else {\n        appendPre(\"No upcoming events found.\");\n      }\n    });\n}\n\nfunction initClient() {\n  console.log(window.gapi);\n  window.gapi.client\n    .init({\n      apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES,\n    })\n    .then(\n      function () {\n        console.log(\"Client is connected\");\n        // Listen for sign-in state changes.\n        window.gapi.auth2.getAuthInstance().isSignedIn.listen(() => {\n          listUpcomingEvents();\n        });\n      },\n      function (error) {\n        appendPre(JSON.stringify(error, null, 2));\n      }\n    );\n}\n\nclass GoogleOAuth extends Component {\n  componentDidMount() {\n    console.log(\"XXXX - mounting\");\n    window.gapi.load(\"client:auth2\", initClient);\n  }\n\n  responseGoogle = (response) => {\n    // const imageURL = response.profileObj.imageUrl;\n    const email = response.profileObj.email;\n    console.log(email);\n    // const name = response.profileObj.givenName;\n    const accessToken = response.accessToken;\n    console.log(accessToken);\n    const tokenObj = response.tokenObj;\n    console.log(tokenObj);\n  };\n\n  render() {\n    return (\n      <div className=\"GoogleOAuth\">\n        <button onClick={handleAuthClick} id=\"authorize_button\">\n          Authorize\n        </button>\n        <button onClick={handleSignoutClick} id=\"signout_button\">\n          Sign Out\n        </button>\n        <GoogleLogin\n          clientId={CLIENT_ID}\n          buttonText=\"Login\"\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n          // cookiePolicy={\"single_host_origin\"}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GoogleOAuth;\n"]},"metadata":{},"sourceType":"module"}