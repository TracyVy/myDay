{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar registerComponent = require(\"../../../core/component_registrator\");\n\nvar SchedulerTimelineWeek = require(\"./ui.scheduler.timeline_week\");\n\nvar dateUtils = require(\"../../../core/utils/date\");\n\nvar workWeekUtils = require(\"./utils.work_week\");\n\nvar toMs = dateUtils.dateToMilliseconds;\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-work-week\";\nvar LAST_DAY_WEEK_INDEX = 5;\nvar SchedulerTimelineWorkWeek = SchedulerTimelineWeek.inherit({\n  _getElementClass: function () {\n    return TIMELINE_CLASS;\n  },\n  _getWeekDuration: function () {\n    return 5;\n  },\n  _firstDayOfWeek: function () {\n    return workWeekUtils.getFirstDayOfWeek(this.option(\"firstDayOfWeek\"));\n  },\n  _isSkippedData: workWeekUtils.isDataOnWeekend,\n  _incrementDate: function (date) {\n    var day = date.getDay();\n\n    if (day === LAST_DAY_WEEK_INDEX) {\n      date.setDate(date.getDate() + 2);\n    }\n\n    this.callBase(date);\n  },\n  _getOffsetByCount: function (cellIndex) {\n    var weekendCount = Math.floor(cellIndex / (5 * this._getCellCountInDay()));\n    return toMs(\"day\") * weekendCount * 2;\n  },\n  _getWeekendsCount: workWeekUtils.getWeekendsCount,\n  _setFirstViewDate: function () {\n    this._firstViewDate = workWeekUtils.getFirstViewDate(this.option(\"currentDate\"), this._firstDayOfWeek());\n\n    this._setStartDayHour(this._firstViewDate);\n  }\n});\nregisterComponent(\"dxSchedulerTimelineWorkWeek\", SchedulerTimelineWorkWeek);\nmodule.exports = SchedulerTimelineWorkWeek;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js"],"names":["registerComponent","require","SchedulerTimelineWeek","dateUtils","workWeekUtils","toMs","dateToMilliseconds","TIMELINE_CLASS","LAST_DAY_WEEK_INDEX","SchedulerTimelineWorkWeek","inherit","_getElementClass","_getWeekDuration","_firstDayOfWeek","getFirstDayOfWeek","option","_isSkippedData","isDataOnWeekend","_incrementDate","date","day","getDay","setDate","getDate","callBase","_getOffsetByCount","cellIndex","weekendCount","Math","floor","_getCellCountInDay","_getWeekendsCount","getWeekendsCount","_setFirstViewDate","_firstViewDate","getFirstViewDate","_setStartDayHour","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,qCAAD,CAA/B;;AACA,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,8BAAD,CAAnC;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,0BAAD,CAAvB;;AACA,IAAIG,aAAa,GAAGH,OAAO,CAAC,mBAAD,CAA3B;;AACA,IAAII,IAAI,GAAGF,SAAS,CAACG,kBAArB;AACA,IAAIC,cAAc,GAAG,iCAArB;AACA,IAAIC,mBAAmB,GAAG,CAA1B;AACA,IAAIC,yBAAyB,GAAGP,qBAAqB,CAACQ,OAAtB,CAA8B;AAC1DC,EAAAA,gBAAgB,EAAE,YAAW;AACzB,WAAOJ,cAAP;AACH,GAHyD;AAI1DK,EAAAA,gBAAgB,EAAE,YAAW;AACzB,WAAO,CAAP;AACH,GANyD;AAO1DC,EAAAA,eAAe,EAAE,YAAW;AACxB,WAAOT,aAAa,CAACU,iBAAd,CAAgC,KAAKC,MAAL,CAAY,gBAAZ,CAAhC,CAAP;AACH,GATyD;AAU1DC,EAAAA,cAAc,EAAEZ,aAAa,CAACa,eAV4B;AAW1DC,EAAAA,cAAc,EAAE,UAASC,IAAT,EAAe;AAC3B,QAAIC,GAAG,GAAGD,IAAI,CAACE,MAAL,EAAV;;AACA,QAAID,GAAG,KAAKZ,mBAAZ,EAAiC;AAC7BW,MAAAA,IAAI,CAACG,OAAL,CAAaH,IAAI,CAACI,OAAL,KAAiB,CAA9B;AACH;;AACD,SAAKC,QAAL,CAAcL,IAAd;AACH,GAjByD;AAkB1DM,EAAAA,iBAAiB,EAAE,UAASC,SAAT,EAAoB;AACnC,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,SAAS,IAAI,IAAI,KAAKI,kBAAL,EAAR,CAApB,CAAnB;AACA,WAAOzB,IAAI,CAAC,KAAD,CAAJ,GAAcsB,YAAd,GAA6B,CAApC;AACH,GArByD;AAsB1DI,EAAAA,iBAAiB,EAAE3B,aAAa,CAAC4B,gBAtByB;AAuB1DC,EAAAA,iBAAiB,EAAE,YAAW;AAC1B,SAAKC,cAAL,GAAsB9B,aAAa,CAAC+B,gBAAd,CAA+B,KAAKpB,MAAL,CAAY,aAAZ,CAA/B,EAA2D,KAAKF,eAAL,EAA3D,CAAtB;;AACA,SAAKuB,gBAAL,CAAsB,KAAKF,cAA3B;AACH;AA1ByD,CAA9B,CAAhC;AA4BAlC,iBAAiB,CAAC,6BAAD,EAAgCS,yBAAhC,CAAjB;AACA4B,MAAM,CAACC,OAAP,GAAiB7B,yBAAjB","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.timeline_work_week.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar registerComponent = require(\"../../../core/component_registrator\");\r\nvar SchedulerTimelineWeek = require(\"./ui.scheduler.timeline_week\");\r\nvar dateUtils = require(\"../../../core/utils/date\");\r\nvar workWeekUtils = require(\"./utils.work_week\");\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar TIMELINE_CLASS = \"dx-scheduler-timeline-work-week\";\r\nvar LAST_DAY_WEEK_INDEX = 5;\r\nvar SchedulerTimelineWorkWeek = SchedulerTimelineWeek.inherit({\r\n    _getElementClass: function() {\r\n        return TIMELINE_CLASS\r\n    },\r\n    _getWeekDuration: function() {\r\n        return 5\r\n    },\r\n    _firstDayOfWeek: function() {\r\n        return workWeekUtils.getFirstDayOfWeek(this.option(\"firstDayOfWeek\"))\r\n    },\r\n    _isSkippedData: workWeekUtils.isDataOnWeekend,\r\n    _incrementDate: function(date) {\r\n        var day = date.getDay();\r\n        if (day === LAST_DAY_WEEK_INDEX) {\r\n            date.setDate(date.getDate() + 2)\r\n        }\r\n        this.callBase(date)\r\n    },\r\n    _getOffsetByCount: function(cellIndex) {\r\n        var weekendCount = Math.floor(cellIndex / (5 * this._getCellCountInDay()));\r\n        return toMs(\"day\") * weekendCount * 2\r\n    },\r\n    _getWeekendsCount: workWeekUtils.getWeekendsCount,\r\n    _setFirstViewDate: function() {\r\n        this._firstViewDate = workWeekUtils.getFirstViewDate(this.option(\"currentDate\"), this._firstDayOfWeek());\r\n        this._setStartDayHour(this._firstViewDate)\r\n    }\r\n});\r\nregisterComponent(\"dxSchedulerTimelineWorkWeek\", SchedulerTimelineWorkWeek);\r\nmodule.exports = SchedulerTimelineWorkWeek;\r\n"]},"metadata":{},"sourceType":"script"}