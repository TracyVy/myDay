{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Quotes/QuoteFetcher.js\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction QuoteFetcher() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [imgSrc, setImgSrc] = useState(\"\");\n  useEffect(() => {\n    getQuote();\n    const intervalID = setInterval(() => {\n      getQuote();\n    }, 24 * 60 * 60 * 1000);\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n\n  function getQuote() {\n    fetch(\"http://quotes.rest/qod.json?category=inspire\").then(res => res.json()).then(data => {\n      console.log(data);\n      setQuote(data.contents.quotes[0].quote);\n      setAuthor(data.contents.quotes[0].author);\n      setImgSrc(data.contents.quotes[0].background);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, quote), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"- \", author), /*#__PURE__*/React.createElement(\"img\", {\n    src: imgSrc,\n    alt: \"inspirational img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default QuoteFetcher;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Quotes/QuoteFetcher.js"],"names":["React","useState","useEffect","QuoteFetcher","quote","setQuote","author","setAuthor","imgSrc","setImgSrc","getQuote","intervalID","setInterval","clearInterval","fetch","then","res","json","data","console","log","contents","quotes","background"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,SAASC,YAAT,GAAwB;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ;AACR,UAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCF,MAAAA,QAAQ;AACT,KAF6B,EAE3B,KAAK,EAAL,GAAU,EAAV,GAAe,IAFY,CAA9B;AAGA,WAAO,MAAM;AACXG,MAAAA,aAAa,CAACF,UAAD,CAAb;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;;AASA,WAASD,QAAT,GAAoB;AAClBI,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAb,MAAAA,QAAQ,CAACa,IAAI,CAACG,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBlB,KAAzB,CAAR;AACAG,MAAAA,SAAS,CAACW,IAAI,CAACG,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBhB,MAAzB,CAAT;AACAG,MAAAA,SAAS,CAACS,IAAI,CAACG,QAAL,CAAcC,MAAd,CAAqB,CAArB,EAAwBC,UAAzB,CAAT;AACD,KAPH;AAQD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKnB,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAME,MAAN,CAFF,eAGE;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAkB,IAAA,GAAG,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD;;AAED,eAAeL,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction QuoteFetcher() {\n  const [quote, setQuote] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [imgSrc, setImgSrc] = useState(\"\");\n\n  useEffect(() => {\n    getQuote();\n    const intervalID = setInterval(() => {\n      getQuote();\n    }, 24 * 60 * 60 * 1000);\n    return () => {\n      clearInterval(intervalID);\n    };\n  }, []);\n  function getQuote() {\n    fetch(\"http://quotes.rest/qod.json?category=inspire\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setQuote(data.contents.quotes[0].quote);\n        setAuthor(data.contents.quotes[0].author);\n        setImgSrc(data.contents.quotes[0].background);\n      });\n  }\n  return (\n    <div>\n      <h5>{quote}</h5>\n      <p>- {author}</p>\n      <img src={imgSrc} alt=\"inspirational img\" />\n    </div>\n  );\n}\n\nexport default QuoteFetcher;\n"]},"metadata":{},"sourceType":"module"}