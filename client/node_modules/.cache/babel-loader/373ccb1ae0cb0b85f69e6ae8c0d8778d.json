{"ast":null,"code":"/**\r\n * DevExtreme (ui/html_editor/converters/delta.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _converterController = require(\"../converterController\");\n\nvar _converterController2 = _interopRequireDefault(_converterController);\n\nvar _quill_importer = require(\"../quill_importer\");\n\nvar _type = require(\"../../../core/utils/type\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    return _arrayLikeToArray(arr);\n  }\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _iterableToArray(iter) {\n  if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\n    return Array.from(iter);\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (\"undefined\" === typeof Symbol || !(Symbol.iterator in Object(arr))) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _e = void 0;\n\n  try {\n    for (var _s, _i = arr[Symbol.iterator](); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) {\n        break;\n      }\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && null != _i.return) {\n        _i.return();\n      }\n    } finally {\n      if (_d) {\n        throw _e;\n      }\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) {\n    return arr;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar ESCAPING_MAP = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&#39;\"\n};\nvar LIST_BLOT_NAME = \"list\";\nvar LIST_ITEM_BLOT_NAME = \"list-item\";\n\nvar DeltaConverter = function () {\n  function DeltaConverter() {\n    _classCallCheck(this, DeltaConverter);\n\n    this.TextBlot = (0, _quill_importer.getQuill)().import(\"blots/text\");\n    this.BreakBlot = (0, _quill_importer.getQuill)().import(\"blots/break\");\n  }\n\n  _createClass(DeltaConverter, [{\n    key: \"setQuillInstance\",\n    value: function value(quillInstance) {\n      this.quillInstance = quillInstance;\n    }\n  }, {\n    key: \"toHtml\",\n    value: function value() {\n      if (!this.quillInstance) {\n        return;\n      }\n\n      return this._isQuillEmpty() ? \"\" : this._convertHTML(this.quillInstance.scroll, 0, this.quillInstance.getLength(), true);\n    }\n  }, {\n    key: \"_isQuillEmpty\",\n    value: function value() {\n      var delta = this.quillInstance.getContents();\n      return 1 === delta.length() && this._isDeltaEmpty(delta);\n    }\n  }, {\n    key: \"_isDeltaEmpty\",\n    value: function value(delta) {\n      return delta.reduce(function (__, _ref) {\n        var insert = _ref.insert;\n        return insert.indexOf(\"\\n\") !== -1;\n      });\n    }\n  }, {\n    key: \"_convertHTML\",\n    value: function value(blot, index, length) {\n      var _this = this;\n\n      var isRoot = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\n\n      if ((0, _type.isFunction)(blot.html)) {\n        return blot.html(index, length);\n      }\n\n      if (blot instanceof this.TextBlot) {\n        return this._escapeText(blot.value().slice(index, index + length));\n      }\n\n      if (blot.children) {\n        if (blot.statics.blotName === LIST_BLOT_NAME) {\n          return this._convertList(blot, index, length);\n        }\n\n        var parts = [];\n        blot.children.forEachAt(index, length, function (child, offset, childLength) {\n          parts.push(_this._convertHTML(child, offset, childLength));\n        });\n\n        this._handleBreakLine(blot.children, parts);\n\n        if (isRoot || blot.statics.blotName === LIST_ITEM_BLOT_NAME) {\n          return parts.join(\"\");\n        }\n\n        var _blot$domNode = blot.domNode,\n            outerHTML = _blot$domNode.outerHTML,\n            innerHTML = _blot$domNode.innerHTML;\n\n        var _outerHTML$split = outerHTML.split(\">\".concat(innerHTML, \"<\")),\n            _outerHTML$split2 = _slicedToArray(_outerHTML$split, 2),\n            start = _outerHTML$split2[0],\n            end = _outerHTML$split2[1];\n\n        return \"\".concat(start, \">\").concat(parts.join(\"\"), \"<\").concat(end);\n      }\n\n      return blot.domNode.outerHTML;\n    }\n  }, {\n    key: \"_handleBreakLine\",\n    value: function value(linkedList, parts) {\n      if (1 === linkedList.length && linkedList.head instanceof this.BreakBlot) {\n        parts.push(\"<br>\");\n      }\n    }\n  }, {\n    key: \"_convertList\",\n    value: function value(blot, index, length) {\n      var items = [];\n      var parentFormats = blot.formats();\n      blot.children.forEachAt(index, length, function (child, offset, childLength) {\n        var childFormats = child.formats();\n        items.push({\n          child: child,\n          offset: offset,\n          length: childLength,\n          indent: childFormats.indent || 0,\n          type: parentFormats.list\n        });\n      });\n      return this._getListMarkup(items, -1, [], blot);\n    }\n  }, {\n    key: \"_getListMarkup\",\n    value: function value(items, lastIndent, listTypes, listBlot) {\n      if (0 === items.length) {\n        var _endTag = this._getListType(listTypes.pop());\n\n        if (lastIndent <= 0) {\n          return \"</li></\".concat(_endTag, \">\");\n        }\n\n        return this._processListMarkup([[], lastIndent - 1, listTypes], _endTag);\n      }\n\n      var _items = _toArray(items),\n          _items$ = _items[0],\n          child = _items$.child,\n          offset = _items$.offset,\n          length = _items$.length,\n          indent = _items$.indent,\n          type = _items$.type,\n          rest = _items.slice(1);\n\n      var tag = this._getListType(type);\n\n      var childItemArgs = [child, offset, length];\n      var restItemsArgs = [rest, indent, listTypes];\n\n      if (indent > lastIndent) {\n        listTypes.push(type);\n\n        var multiLevelTags = this._correctListMultiIndent(listTypes, type, tag, indent - lastIndent - 1);\n\n        return multiLevelTags + this._processIndentListMarkup(childItemArgs, restItemsArgs, tag, listBlot);\n      }\n\n      if (indent === lastIndent) {\n        return this._processIndentListMarkup(childItemArgs, restItemsArgs);\n      }\n\n      var endTag = this._getListType(listTypes.pop());\n\n      return this._processListMarkup([items, lastIndent - 1, listTypes], endTag);\n    }\n  }, {\n    key: \"_correctListMultiIndent\",\n    value: function value(listTypes, type, tag, indent) {\n      var markup = \"\";\n\n      while (indent) {\n        markup += \"<\".concat(tag, \">\");\n        listTypes.push(type);\n        indent--;\n      }\n\n      return markup;\n    }\n  }, {\n    key: \"_processListMarkup\",\n    value: function value(childItemArgs, tag) {\n      return \"</li></\".concat(tag, \">\").concat(this._getListMarkup.apply(this, _toConsumableArray(childItemArgs)));\n    }\n  }, {\n    key: \"_processIndentListMarkup\",\n    value: function value(childItemArgs, restItemsArgs) {\n      var tag = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"/li\";\n      var listBlot = arguments.length > 3 ? arguments[3] : void 0;\n      var listAttrs = listBlot && this._getBlotNodeAttributes(listBlot) || \"\";\n\n      var itemAttrs = this._getBlotNodeAttributes(childItemArgs[0]);\n\n      return \"<\".concat(tag).concat(listAttrs, \"><li\").concat(itemAttrs, \">\").concat(this._convertHTML.apply(this, _toConsumableArray(childItemArgs))).concat(this._getListMarkup.apply(this, _toConsumableArray(restItemsArgs).concat([listBlot])));\n    }\n  }, {\n    key: \"_getBlotNodeAttributes\",\n    value: function value(_ref2) {\n      var domNode = _ref2.domNode;\n\n      if (!domNode.hasAttributes()) {\n        return \"\";\n      }\n\n      var attributes = domNode.attributes;\n      var attributesString = \" \";\n\n      for (var i = 0; i < attributes.length; i++) {\n        var name = attributes[i].name;\n        var value = attributes[i].value;\n\n        if (\"class\" === name) {\n          value = this._removeIndentClass(value);\n        }\n\n        if (value.length) {\n          attributesString += \"\".concat(name, '=\"').concat(value, '\"');\n        }\n      }\n\n      return attributesString.length > 1 ? attributesString : \"\";\n    }\n  }, {\n    key: \"_getListType\",\n    value: function value(type) {\n      return \"ordered\" === type ? \"ol\" : \"ul\";\n    }\n  }, {\n    key: \"_removeIndentClass\",\n    value: function value(classString) {\n      return classString.replace(/ql-indent-\\d/g, \"\").trim();\n    }\n  }, {\n    key: \"_escapeText\",\n    value: function value(text) {\n      return text.replace(/[&<>\"']/g, function (char) {\n        return ESCAPING_MAP[char];\n      });\n    }\n  }]);\n\n  return DeltaConverter;\n}();\n\n_converterController2.default.addConverter(\"delta\", DeltaConverter);\n\nexports.default = DeltaConverter;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/node_modules/devextreme/ui/html_editor/converters/delta.js"],"names":["Object","defineProperty","exports","value","_converterController","require","_converterController2","_interopRequireDefault","_quill_importer","_type","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","Array","isArray","_arrayLikeToArray","_toArray","_arrayWithHoles","_nonIterableRest","iter","Symbol","iterator","from","_slicedToArray","i","_iterableToArrayLimit","o","minLen","n","prototype","toString","call","slice","constructor","name","test","len","length","arr2","_arr","_n","_d","_e","_s","_i","next","done","push","err","return","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","ESCAPING_MAP","LIST_BLOT_NAME","LIST_ITEM_BLOT_NAME","DeltaConverter","TextBlot","getQuill","import","BreakBlot","quillInstance","_isQuillEmpty","_convertHTML","scroll","getLength","delta","getContents","_isDeltaEmpty","reduce","__","_ref","insert","indexOf","blot","index","_this","isRoot","arguments","isFunction","html","_escapeText","children","statics","blotName","_convertList","parts","forEachAt","child","offset","childLength","_handleBreakLine","join","_blot$domNode","domNode","outerHTML","innerHTML","_outerHTML$split","split","concat","_outerHTML$split2","start","end","linkedList","head","items","parentFormats","formats","childFormats","indent","type","list","_getListMarkup","lastIndent","listTypes","listBlot","_endTag","_getListType","pop","_processListMarkup","_items","_items$","rest","tag","childItemArgs","restItemsArgs","multiLevelTags","_correctListMultiIndent","_processIndentListMarkup","endTag","markup","apply","listAttrs","_getBlotNodeAttributes","itemAttrs","_ref2","hasAttributes","attributes","attributesString","_removeIndentClass","classString","replace","trim","text","char","default","addConverter"],"mappings":"AAAA;;;;;;;;AAQA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AACzCC,EAAAA,KAAK,EAAE;AADkC,CAA7C;;AAGA,IAAIC,oBAAoB,GAAGC,OAAO,CAAC,wBAAD,CAAlC;;AACA,IAAIC,qBAAqB,GAAGC,sBAAsB,CAACH,oBAAD,CAAlD;;AACA,IAAII,eAAe,GAAGH,OAAO,CAAC,mBAAD,CAA7B;;AACA,IAAII,KAAK,GAAGJ,OAAO,CAAC,0BAAD,CAAnB;;AAEA,SAASE,sBAAT,CAAgCG,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AAED,SAASE,kBAAT,CAA4BC,GAA5B,EAAiC;AAC7B,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,2BAA2B,CAACH,GAAD,CAA/E,IAAwFI,kBAAkB,EAAjH;AACH;;AAED,SAASA,kBAAT,GAA8B;AAC1B,QAAM,IAAIC,SAAJ,CAAc,sIAAd,CAAN;AACH;;AAED,SAASJ,kBAAT,CAA4BD,GAA5B,EAAiC;AAC7B,MAAIM,KAAK,CAACC,OAAN,CAAcP,GAAd,CAAJ,EAAwB;AACpB,WAAOQ,iBAAiB,CAACR,GAAD,CAAxB;AACH;AACJ;;AAED,SAASS,QAAT,CAAkBT,GAAlB,EAAuB;AACnB,SAAOU,eAAe,CAACV,GAAD,CAAf,IAAwBE,gBAAgB,CAACF,GAAD,CAAxC,IAAiDG,2BAA2B,CAACH,GAAD,CAA5E,IAAqFW,gBAAgB,EAA5G;AACH;;AAED,SAAST,gBAAT,CAA0BU,IAA1B,EAAgC;AAC5B,MAAI,gBAAgB,OAAOC,MAAvB,IAAiCA,MAAM,CAACC,QAAP,IAAmB3B,MAAM,CAACyB,IAAD,CAA9D,EAAsE;AAClE,WAAON,KAAK,CAACS,IAAN,CAAWH,IAAX,CAAP;AACH;AACJ;;AAED,SAASI,cAAT,CAAwBhB,GAAxB,EAA6BiB,CAA7B,EAAgC;AAC5B,SAAOP,eAAe,CAACV,GAAD,CAAf,IAAwBkB,qBAAqB,CAAClB,GAAD,EAAMiB,CAAN,CAA7C,IAAyDd,2BAA2B,CAACH,GAAD,EAAMiB,CAAN,CAApF,IAAgGN,gBAAgB,EAAvH;AACH;;AAED,SAASA,gBAAT,GAA4B;AACxB,QAAM,IAAIN,SAAJ,CAAc,2IAAd,CAAN;AACH;;AAED,SAASF,2BAAT,CAAqCgB,CAArC,EAAwCC,MAAxC,EAAgD;AAC5C,MAAI,CAACD,CAAL,EAAQ;AACJ;AACH;;AACD,MAAI,aAAa,OAAOA,CAAxB,EAA2B;AACvB,WAAOX,iBAAiB,CAACW,CAAD,EAAIC,MAAJ,CAAxB;AACH;;AACD,MAAIC,CAAC,GAAGlC,MAAM,CAACmC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,CAA/B,EAAkCM,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAR;;AACA,MAAI,aAAaJ,CAAb,IAAkBF,CAAC,CAACO,WAAxB,EAAqC;AACjCL,IAAAA,CAAC,GAAGF,CAAC,CAACO,WAAF,CAAcC,IAAlB;AACH;;AACD,MAAI,UAAUN,CAAV,IAAe,UAAUA,CAA7B,EAAgC;AAC5B,WAAOf,KAAK,CAACS,IAAN,CAAWI,CAAX,CAAP;AACH;;AACD,MAAI,gBAAgBE,CAAhB,IAAqB,2CAA2CO,IAA3C,CAAgDP,CAAhD,CAAzB,EAA6E;AACzE,WAAOb,iBAAiB,CAACW,CAAD,EAAIC,MAAJ,CAAxB;AACH;AACJ;;AAED,SAASZ,iBAAT,CAA2BR,GAA3B,EAAgC6B,GAAhC,EAAqC;AACjC,MAAI,QAAQA,GAAR,IAAeA,GAAG,GAAG7B,GAAG,CAAC8B,MAA7B,EAAqC;AACjCD,IAAAA,GAAG,GAAG7B,GAAG,CAAC8B,MAAV;AACH;;AACD,OAAK,IAAIb,CAAC,GAAG,CAAR,EAAWc,IAAI,GAAG,IAAIzB,KAAJ,CAAUuB,GAAV,CAAvB,EAAuCZ,CAAC,GAAGY,GAA3C,EAAgDZ,CAAC,EAAjD,EAAqD;AACjDc,IAAAA,IAAI,CAACd,CAAD,CAAJ,GAAUjB,GAAG,CAACiB,CAAD,CAAb;AACH;;AACD,SAAOc,IAAP;AACH;;AAED,SAASb,qBAAT,CAA+BlB,GAA/B,EAAoCiB,CAApC,EAAuC;AACnC,MAAI,gBAAgB,OAAOJ,MAAvB,IAAiC,EAAEA,MAAM,CAACC,QAAP,IAAmB3B,MAAM,CAACa,GAAD,CAA3B,CAArC,EAAwE;AACpE;AACH;;AACD,MAAIgC,IAAI,GAAG,EAAX;AACA,MAAIC,EAAE,GAAG,IAAT;AACA,MAAIC,EAAE,GAAG,KAAT;;AACA,MAAIC,EAAE,GAAG,KAAK,CAAd;;AACA,MAAI;AACA,SAAK,IAAIC,EAAJ,EAAQC,EAAE,GAAGrC,GAAG,CAACa,MAAM,CAACC,QAAR,CAAH,EAAlB,EAA0C,EAAEmB,EAAE,GAAG,CAACG,EAAE,GAAGC,EAAE,CAACC,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyEN,EAAE,GAAG,IAA9E,EAAoF;AAChFD,MAAAA,IAAI,CAACQ,IAAL,CAAUJ,EAAE,CAAC9C,KAAb;;AACA,UAAI2B,CAAC,IAAIe,IAAI,CAACF,MAAL,KAAgBb,CAAzB,EAA4B;AACxB;AACH;AACJ;AACJ,GAPD,CAOE,OAAOwB,GAAP,EAAY;AACVP,IAAAA,EAAE,GAAG,IAAL;AACAC,IAAAA,EAAE,GAAGM,GAAL;AACH,GAVD,SAUU;AACN,QAAI;AACA,UAAI,CAACR,EAAD,IAAO,QAAQI,EAAE,CAACK,MAAtB,EAA8B;AAC1BL,QAAAA,EAAE,CAACK,MAAH;AACH;AACJ,KAJD,SAIU;AACN,UAAIR,EAAJ,EAAQ;AACJ,cAAMC,EAAN;AACH;AACJ;AACJ;;AACD,SAAOH,IAAP;AACH;;AAED,SAAStB,eAAT,CAAyBV,GAAzB,EAA8B;AAC1B,MAAIM,KAAK,CAACC,OAAN,CAAcP,GAAd,CAAJ,EAAwB;AACpB,WAAOA,GAAP;AACH;AACJ;;AAED,SAAS2C,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC5C,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACpC,UAAM,IAAIxC,SAAJ,CAAc,mCAAd,CAAN;AACH;AACJ;;AAED,SAASyC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AACtC,OAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+B,KAAK,CAAClB,MAA1B,EAAkCb,CAAC,EAAnC,EAAuC;AACnC,QAAIgC,UAAU,GAAGD,KAAK,CAAC/B,CAAD,CAAtB;AACAgC,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AACAD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;;AACA,QAAI,WAAWF,UAAf,EAA2B;AACvBA,MAAAA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AACH;;AACDjE,IAAAA,MAAM,CAACC,cAAP,CAAsB2D,MAAtB,EAA8BE,UAAU,CAACI,GAAzC,EAA8CJ,UAA9C;AACH;AACJ;;AAED,SAASK,YAAT,CAAsBT,WAAtB,EAAmCU,UAAnC,EAA+CC,WAA/C,EAA4D;AACxD,MAAID,UAAJ,EAAgB;AACZT,IAAAA,iBAAiB,CAACD,WAAW,CAACvB,SAAb,EAAwBiC,UAAxB,CAAjB;AACH;;AACD,MAAIC,WAAJ,EAAiB;AACbV,IAAAA,iBAAiB,CAACD,WAAD,EAAcW,WAAd,CAAjB;AACH;;AACD,SAAOX,WAAP;AACH;;AACD,IAAIY,YAAY,GAAG;AACf,OAAK,OADU;AAEf,OAAK,MAFU;AAGf,OAAK,MAHU;AAIf,OAAK,QAJU;AAKf,OAAK;AALU,CAAnB;AAOA,IAAIC,cAAc,GAAG,MAArB;AACA,IAAIC,mBAAmB,GAAG,WAA1B;;AACA,IAAIC,cAAc,GAAG,YAAW;AAC5B,WAASA,cAAT,GAA0B;AACtBjB,IAAAA,eAAe,CAAC,IAAD,EAAOiB,cAAP,CAAf;;AACA,SAAKC,QAAL,GAAgB,CAAC,GAAGlE,eAAe,CAACmE,QAApB,IAAgCC,MAAhC,CAAuC,YAAvC,CAAhB;AACA,SAAKC,SAAL,GAAiB,CAAC,GAAGrE,eAAe,CAACmE,QAApB,IAAgCC,MAAhC,CAAuC,aAAvC,CAAjB;AACH;;AACDT,EAAAA,YAAY,CAACM,cAAD,EAAiB,CAAC;AAC1BP,IAAAA,GAAG,EAAE,kBADqB;AAE1B/D,IAAAA,KAAK,EAAE,eAAS2E,aAAT,EAAwB;AAC3B,WAAKA,aAAL,GAAqBA,aAArB;AACH;AAJyB,GAAD,EAK1B;AACCZ,IAAAA,GAAG,EAAE,QADN;AAEC/D,IAAAA,KAAK,EAAE,iBAAW;AACd,UAAI,CAAC,KAAK2E,aAAV,EAAyB;AACrB;AACH;;AACD,aAAO,KAAKC,aAAL,KAAuB,EAAvB,GAA4B,KAAKC,YAAL,CAAkB,KAAKF,aAAL,CAAmBG,MAArC,EAA6C,CAA7C,EAAgD,KAAKH,aAAL,CAAmBI,SAAnB,EAAhD,EAAgF,IAAhF,CAAnC;AACH;AAPF,GAL0B,EAa1B;AACChB,IAAAA,GAAG,EAAE,eADN;AAEC/D,IAAAA,KAAK,EAAE,iBAAW;AACd,UAAIgF,KAAK,GAAG,KAAKL,aAAL,CAAmBM,WAAnB,EAAZ;AACA,aAAO,MAAMD,KAAK,CAACxC,MAAN,EAAN,IAAwB,KAAK0C,aAAL,CAAmBF,KAAnB,CAA/B;AACH;AALF,GAb0B,EAmB1B;AACCjB,IAAAA,GAAG,EAAE,eADN;AAEC/D,IAAAA,KAAK,EAAE,eAASgF,KAAT,EAAgB;AACnB,aAAOA,KAAK,CAACG,MAAN,CAAa,UAASC,EAAT,EAAaC,IAAb,EAAmB;AACnC,YAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AACA,eAAOA,MAAM,CAACC,OAAP,CAAe,IAAf,MAAyB,CAAC,CAAjC;AACH,OAHM,CAAP;AAIH;AAPF,GAnB0B,EA2B1B;AACCxB,IAAAA,GAAG,EAAE,cADN;AAEC/D,IAAAA,KAAK,EAAE,eAASwF,IAAT,EAAeC,KAAf,EAAsBjD,MAAtB,EAA8B;AACjC,UAAIkD,KAAK,GAAG,IAAZ;;AACA,UAAIC,MAAM,GAAGC,SAAS,CAACpD,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWoD,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,KAA9E;;AACA,UAAI,CAAC,GAAGtF,KAAK,CAACuF,UAAV,EAAsBL,IAAI,CAACM,IAA3B,CAAJ,EAAsC;AAClC,eAAON,IAAI,CAACM,IAAL,CAAUL,KAAV,EAAiBjD,MAAjB,CAAP;AACH;;AACD,UAAIgD,IAAI,YAAY,KAAKjB,QAAzB,EAAmC;AAC/B,eAAO,KAAKwB,WAAL,CAAiBP,IAAI,CAACxF,KAAL,GAAamC,KAAb,CAAmBsD,KAAnB,EAA0BA,KAAK,GAAGjD,MAAlC,CAAjB,CAAP;AACH;;AACD,UAAIgD,IAAI,CAACQ,QAAT,EAAmB;AACf,YAAIR,IAAI,CAACS,OAAL,CAAaC,QAAb,KAA0B9B,cAA9B,EAA8C;AAC1C,iBAAO,KAAK+B,YAAL,CAAkBX,IAAlB,EAAwBC,KAAxB,EAA+BjD,MAA/B,CAAP;AACH;;AACD,YAAI4D,KAAK,GAAG,EAAZ;AACAZ,QAAAA,IAAI,CAACQ,QAAL,CAAcK,SAAd,CAAwBZ,KAAxB,EAA+BjD,MAA/B,EAAuC,UAAS8D,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqC;AACxEJ,UAAAA,KAAK,CAAClD,IAAN,CAAWwC,KAAK,CAACb,YAAN,CAAmByB,KAAnB,EAA0BC,MAA1B,EAAkCC,WAAlC,CAAX;AACH,SAFD;;AAGA,aAAKC,gBAAL,CAAsBjB,IAAI,CAACQ,QAA3B,EAAqCI,KAArC;;AACA,YAAIT,MAAM,IAAIH,IAAI,CAACS,OAAL,CAAaC,QAAb,KAA0B7B,mBAAxC,EAA6D;AACzD,iBAAO+B,KAAK,CAACM,IAAN,CAAW,EAAX,CAAP;AACH;;AACD,YAAIC,aAAa,GAAGnB,IAAI,CAACoB,OAAzB;AAAA,YACIC,SAAS,GAAGF,aAAa,CAACE,SAD9B;AAAA,YAEIC,SAAS,GAAGH,aAAa,CAACG,SAF9B;;AAGA,YAAIC,gBAAgB,GAAGF,SAAS,CAACG,KAAV,CAAgB,IAAIC,MAAJ,CAAWH,SAAX,EAAsB,GAAtB,CAAhB,CAAvB;AAAA,YACII,iBAAiB,GAAGxF,cAAc,CAACqF,gBAAD,EAAmB,CAAnB,CADtC;AAAA,YAEII,KAAK,GAAGD,iBAAiB,CAAC,CAAD,CAF7B;AAAA,YAGIE,GAAG,GAAGF,iBAAiB,CAAC,CAAD,CAH3B;;AAIA,eAAO,GAAGD,MAAH,CAAUE,KAAV,EAAiB,GAAjB,EAAsBF,MAAtB,CAA6Bb,KAAK,CAACM,IAAN,CAAW,EAAX,CAA7B,EAA6C,GAA7C,EAAkDO,MAAlD,CAAyDG,GAAzD,CAAP;AACH;;AACD,aAAO5B,IAAI,CAACoB,OAAL,CAAaC,SAApB;AACH;AAjCF,GA3B0B,EA6D1B;AACC9C,IAAAA,GAAG,EAAE,kBADN;AAEC/D,IAAAA,KAAK,EAAE,eAASqH,UAAT,EAAqBjB,KAArB,EAA4B;AAC/B,UAAI,MAAMiB,UAAU,CAAC7E,MAAjB,IAA2B6E,UAAU,CAACC,IAAX,YAA2B,KAAK5C,SAA/D,EAA0E;AACtE0B,QAAAA,KAAK,CAAClD,IAAN,CAAW,MAAX;AACH;AACJ;AANF,GA7D0B,EAoE1B;AACCa,IAAAA,GAAG,EAAE,cADN;AAEC/D,IAAAA,KAAK,EAAE,eAASwF,IAAT,EAAeC,KAAf,EAAsBjD,MAAtB,EAA8B;AACjC,UAAI+E,KAAK,GAAG,EAAZ;AACA,UAAIC,aAAa,GAAGhC,IAAI,CAACiC,OAAL,EAApB;AACAjC,MAAAA,IAAI,CAACQ,QAAL,CAAcK,SAAd,CAAwBZ,KAAxB,EAA+BjD,MAA/B,EAAuC,UAAS8D,KAAT,EAAgBC,MAAhB,EAAwBC,WAAxB,EAAqC;AACxE,YAAIkB,YAAY,GAAGpB,KAAK,CAACmB,OAAN,EAAnB;AACAF,QAAAA,KAAK,CAACrE,IAAN,CAAW;AACPoD,UAAAA,KAAK,EAAEA,KADA;AAEPC,UAAAA,MAAM,EAAEA,MAFD;AAGP/D,UAAAA,MAAM,EAAEgE,WAHD;AAIPmB,UAAAA,MAAM,EAAED,YAAY,CAACC,MAAb,IAAuB,CAJxB;AAKPC,UAAAA,IAAI,EAAEJ,aAAa,CAACK;AALb,SAAX;AAOH,OATD;AAUA,aAAO,KAAKC,cAAL,CAAoBP,KAApB,EAA2B,CAAC,CAA5B,EAA+B,EAA/B,EAAmC/B,IAAnC,CAAP;AACH;AAhBF,GApE0B,EAqF1B;AACCzB,IAAAA,GAAG,EAAE,gBADN;AAEC/D,IAAAA,KAAK,EAAE,eAASuH,KAAT,EAAgBQ,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiD;AACpD,UAAI,MAAMV,KAAK,CAAC/E,MAAhB,EAAwB;AACpB,YAAI0F,OAAO,GAAG,KAAKC,YAAL,CAAkBH,SAAS,CAACI,GAAV,EAAlB,CAAd;;AACA,YAAIL,UAAU,IAAI,CAAlB,EAAqB;AACjB,iBAAO,UAAUd,MAAV,CAAiBiB,OAAjB,EAA0B,GAA1B,CAAP;AACH;;AACD,eAAO,KAAKG,kBAAL,CAAwB,CAC3B,EAD2B,EACvBN,UAAU,GAAG,CADU,EACPC,SADO,CAAxB,EAEJE,OAFI,CAAP;AAGH;;AACD,UAAII,MAAM,GAAGnH,QAAQ,CAACoG,KAAD,CAArB;AAAA,UACIgB,OAAO,GAAGD,MAAM,CAAC,CAAD,CADpB;AAAA,UAEIhC,KAAK,GAAGiC,OAAO,CAACjC,KAFpB;AAAA,UAGIC,MAAM,GAAGgC,OAAO,CAAChC,MAHrB;AAAA,UAII/D,MAAM,GAAG+F,OAAO,CAAC/F,MAJrB;AAAA,UAKImF,MAAM,GAAGY,OAAO,CAACZ,MALrB;AAAA,UAMIC,IAAI,GAAGW,OAAO,CAACX,IANnB;AAAA,UAOIY,IAAI,GAAGF,MAAM,CAACnG,KAAP,CAAa,CAAb,CAPX;;AAQA,UAAIsG,GAAG,GAAG,KAAKN,YAAL,CAAkBP,IAAlB,CAAV;;AACA,UAAIc,aAAa,GAAG,CAACpC,KAAD,EAAQC,MAAR,EAAgB/D,MAAhB,CAApB;AACA,UAAImG,aAAa,GAAG,CAACH,IAAD,EAAOb,MAAP,EAAeK,SAAf,CAApB;;AACA,UAAIL,MAAM,GAAGI,UAAb,EAAyB;AACrBC,QAAAA,SAAS,CAAC9E,IAAV,CAAe0E,IAAf;;AACA,YAAIgB,cAAc,GAAG,KAAKC,uBAAL,CAA6Bb,SAA7B,EAAwCJ,IAAxC,EAA8Ca,GAA9C,EAAmDd,MAAM,GAAGI,UAAT,GAAsB,CAAzE,CAArB;;AACA,eAAOa,cAAc,GAAG,KAAKE,wBAAL,CAA8BJ,aAA9B,EAA6CC,aAA7C,EAA4DF,GAA5D,EAAiER,QAAjE,CAAxB;AACH;;AACD,UAAIN,MAAM,KAAKI,UAAf,EAA2B;AACvB,eAAO,KAAKe,wBAAL,CAA8BJ,aAA9B,EAA6CC,aAA7C,CAAP;AACH;;AACD,UAAII,MAAM,GAAG,KAAKZ,YAAL,CAAkBH,SAAS,CAACI,GAAV,EAAlB,CAAb;;AACA,aAAO,KAAKC,kBAAL,CAAwB,CAACd,KAAD,EAAQQ,UAAU,GAAG,CAArB,EAAwBC,SAAxB,CAAxB,EAA4De,MAA5D,CAAP;AACH;AAjCF,GArF0B,EAuH1B;AACChF,IAAAA,GAAG,EAAE,yBADN;AAEC/D,IAAAA,KAAK,EAAE,eAASgI,SAAT,EAAoBJ,IAApB,EAA0Ba,GAA1B,EAA+Bd,MAA/B,EAAuC;AAC1C,UAAIqB,MAAM,GAAG,EAAb;;AACA,aAAOrB,MAAP,EAAe;AACXqB,QAAAA,MAAM,IAAI,IAAI/B,MAAJ,CAAWwB,GAAX,EAAgB,GAAhB,CAAV;AACAT,QAAAA,SAAS,CAAC9E,IAAV,CAAe0E,IAAf;AACAD,QAAAA,MAAM;AACT;;AACD,aAAOqB,MAAP;AACH;AAVF,GAvH0B,EAkI1B;AACCjF,IAAAA,GAAG,EAAE,oBADN;AAEC/D,IAAAA,KAAK,EAAE,eAAS0I,aAAT,EAAwBD,GAAxB,EAA6B;AAChC,aAAO,UAAUxB,MAAV,CAAiBwB,GAAjB,EAAsB,GAAtB,EAA2BxB,MAA3B,CAAkC,KAAKa,cAAL,CAAoBmB,KAApB,CAA0B,IAA1B,EAAgCxI,kBAAkB,CAACiI,aAAD,CAAlD,CAAlC,CAAP;AACH;AAJF,GAlI0B,EAuI1B;AACC3E,IAAAA,GAAG,EAAE,0BADN;AAEC/D,IAAAA,KAAK,EAAE,eAAS0I,aAAT,EAAwBC,aAAxB,EAAuC;AAC1C,UAAIF,GAAG,GAAG7C,SAAS,CAACpD,MAAV,GAAmB,CAAnB,IAAwB,KAAK,CAAL,KAAWoD,SAAS,CAAC,CAAD,CAA5C,GAAkDA,SAAS,CAAC,CAAD,CAA3D,GAAiE,KAA3E;AACA,UAAIqC,QAAQ,GAAGrC,SAAS,CAACpD,MAAV,GAAmB,CAAnB,GAAuBoD,SAAS,CAAC,CAAD,CAAhC,GAAsC,KAAK,CAA1D;AACA,UAAIsD,SAAS,GAAGjB,QAAQ,IAAI,KAAKkB,sBAAL,CAA4BlB,QAA5B,CAAZ,IAAqD,EAArE;;AACA,UAAImB,SAAS,GAAG,KAAKD,sBAAL,CAA4BT,aAAa,CAAC,CAAD,CAAzC,CAAhB;;AACA,aAAO,IAAIzB,MAAJ,CAAWwB,GAAX,EAAgBxB,MAAhB,CAAuBiC,SAAvB,EAAkC,MAAlC,EAA0CjC,MAA1C,CAAiDmC,SAAjD,EAA4D,GAA5D,EAAiEnC,MAAjE,CAAwE,KAAKpC,YAAL,CAAkBoE,KAAlB,CAAwB,IAAxB,EAA8BxI,kBAAkB,CAACiI,aAAD,CAAhD,CAAxE,EAA0IzB,MAA1I,CAAiJ,KAAKa,cAAL,CAAoBmB,KAApB,CAA0B,IAA1B,EAAgCxI,kBAAkB,CAACkI,aAAD,CAAlB,CAAkC1B,MAAlC,CAAyC,CAACgB,QAAD,CAAzC,CAAhC,CAAjJ,CAAP;AACH;AARF,GAvI0B,EAgJ1B;AACClE,IAAAA,GAAG,EAAE,wBADN;AAEC/D,IAAAA,KAAK,EAAE,eAASqJ,KAAT,EAAgB;AACnB,UAAIzC,OAAO,GAAGyC,KAAK,CAACzC,OAApB;;AACA,UAAI,CAACA,OAAO,CAAC0C,aAAR,EAAL,EAA8B;AAC1B,eAAO,EAAP;AACH;;AACD,UAAIC,UAAU,GAAG3C,OAAO,CAAC2C,UAAzB;AACA,UAAIC,gBAAgB,GAAG,GAAvB;;AACA,WAAK,IAAI7H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4H,UAAU,CAAC/G,MAA/B,EAAuCb,CAAC,EAAxC,EAA4C;AACxC,YAAIU,IAAI,GAAGkH,UAAU,CAAC5H,CAAD,CAAV,CAAcU,IAAzB;AACA,YAAIrC,KAAK,GAAGuJ,UAAU,CAAC5H,CAAD,CAAV,CAAc3B,KAA1B;;AACA,YAAI,YAAYqC,IAAhB,EAAsB;AAClBrC,UAAAA,KAAK,GAAG,KAAKyJ,kBAAL,CAAwBzJ,KAAxB,CAAR;AACH;;AACD,YAAIA,KAAK,CAACwC,MAAV,EAAkB;AACdgH,UAAAA,gBAAgB,IAAI,GAAGvC,MAAH,CAAU5E,IAAV,EAAgB,IAAhB,EAAsB4E,MAAtB,CAA6BjH,KAA7B,EAAoC,GAApC,CAApB;AACH;AACJ;;AACD,aAAOwJ,gBAAgB,CAAChH,MAAjB,GAA0B,CAA1B,GAA8BgH,gBAA9B,GAAiD,EAAxD;AACH;AApBF,GAhJ0B,EAqK1B;AACCzF,IAAAA,GAAG,EAAE,cADN;AAEC/D,IAAAA,KAAK,EAAE,eAAS4H,IAAT,EAAe;AAClB,aAAO,cAAcA,IAAd,GAAqB,IAArB,GAA4B,IAAnC;AACH;AAJF,GArK0B,EA0K1B;AACC7D,IAAAA,GAAG,EAAE,oBADN;AAEC/D,IAAAA,KAAK,EAAE,eAAS0J,WAAT,EAAsB;AACzB,aAAOA,WAAW,CAACC,OAAZ,CAAoB,eAApB,EAAqC,EAArC,EAAyCC,IAAzC,EAAP;AACH;AAJF,GA1K0B,EA+K1B;AACC7F,IAAAA,GAAG,EAAE,aADN;AAEC/D,IAAAA,KAAK,EAAE,eAAS6J,IAAT,EAAe;AAClB,aAAOA,IAAI,CAACF,OAAL,CAAa,UAAb,EAAyB,UAASG,IAAT,EAAe;AAC3C,eAAO3F,YAAY,CAAC2F,IAAD,CAAnB;AACH,OAFM,CAAP;AAGH;AANF,GA/K0B,CAAjB,CAAZ;;AAuLA,SAAOxF,cAAP;AACH,CA9LoB,EAArB;;AA+LAnE,qBAAqB,CAAC4J,OAAtB,CAA8BC,YAA9B,CAA2C,OAA3C,EAAoD1F,cAApD;;AACAvE,OAAO,CAACgK,OAAR,GAAkBzF,cAAlB","sourcesContent":["/**\r\n * DevExtreme (ui/html_editor/converters/delta.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nvar _converterController = require(\"../converterController\");\r\nvar _converterController2 = _interopRequireDefault(_converterController);\r\nvar _quill_importer = require(\"../quill_importer\");\r\nvar _type = require(\"../../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _toArray(arr) {\r\n    return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest()\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _slicedToArray(arr, i) {\r\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest()\r\n}\r\n\r\nfunction _nonIterableRest() {\r\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _iterableToArrayLimit(arr, i) {\r\n    if (\"undefined\" === typeof Symbol || !(Symbol.iterator in Object(arr))) {\r\n        return\r\n    }\r\n    var _arr = [];\r\n    var _n = true;\r\n    var _d = false;\r\n    var _e = void 0;\r\n    try {\r\n        for (var _s, _i = arr[Symbol.iterator](); !(_n = (_s = _i.next()).done); _n = true) {\r\n            _arr.push(_s.value);\r\n            if (i && _arr.length === i) {\r\n                break\r\n            }\r\n        }\r\n    } catch (err) {\r\n        _d = true;\r\n        _e = err\r\n    } finally {\r\n        try {\r\n            if (!_n && null != _i.return) {\r\n                _i.return()\r\n            }\r\n        } finally {\r\n            if (_d) {\r\n                throw _e\r\n            }\r\n        }\r\n    }\r\n    return _arr\r\n}\r\n\r\nfunction _arrayWithHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return arr\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar ESCAPING_MAP = {\r\n    \"&\": \"&amp;\",\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#39;\"\r\n};\r\nvar LIST_BLOT_NAME = \"list\";\r\nvar LIST_ITEM_BLOT_NAME = \"list-item\";\r\nvar DeltaConverter = function() {\r\n    function DeltaConverter() {\r\n        _classCallCheck(this, DeltaConverter);\r\n        this.TextBlot = (0, _quill_importer.getQuill)().import(\"blots/text\");\r\n        this.BreakBlot = (0, _quill_importer.getQuill)().import(\"blots/break\")\r\n    }\r\n    _createClass(DeltaConverter, [{\r\n        key: \"setQuillInstance\",\r\n        value: function(quillInstance) {\r\n            this.quillInstance = quillInstance\r\n        }\r\n    }, {\r\n        key: \"toHtml\",\r\n        value: function() {\r\n            if (!this.quillInstance) {\r\n                return\r\n            }\r\n            return this._isQuillEmpty() ? \"\" : this._convertHTML(this.quillInstance.scroll, 0, this.quillInstance.getLength(), true)\r\n        }\r\n    }, {\r\n        key: \"_isQuillEmpty\",\r\n        value: function() {\r\n            var delta = this.quillInstance.getContents();\r\n            return 1 === delta.length() && this._isDeltaEmpty(delta)\r\n        }\r\n    }, {\r\n        key: \"_isDeltaEmpty\",\r\n        value: function(delta) {\r\n            return delta.reduce(function(__, _ref) {\r\n                var insert = _ref.insert;\r\n                return insert.indexOf(\"\\n\") !== -1\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_convertHTML\",\r\n        value: function(blot, index, length) {\r\n            var _this = this;\r\n            var isRoot = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\r\n            if ((0, _type.isFunction)(blot.html)) {\r\n                return blot.html(index, length)\r\n            }\r\n            if (blot instanceof this.TextBlot) {\r\n                return this._escapeText(blot.value().slice(index, index + length))\r\n            }\r\n            if (blot.children) {\r\n                if (blot.statics.blotName === LIST_BLOT_NAME) {\r\n                    return this._convertList(blot, index, length)\r\n                }\r\n                var parts = [];\r\n                blot.children.forEachAt(index, length, function(child, offset, childLength) {\r\n                    parts.push(_this._convertHTML(child, offset, childLength))\r\n                });\r\n                this._handleBreakLine(blot.children, parts);\r\n                if (isRoot || blot.statics.blotName === LIST_ITEM_BLOT_NAME) {\r\n                    return parts.join(\"\")\r\n                }\r\n                var _blot$domNode = blot.domNode,\r\n                    outerHTML = _blot$domNode.outerHTML,\r\n                    innerHTML = _blot$domNode.innerHTML;\r\n                var _outerHTML$split = outerHTML.split(\">\".concat(innerHTML, \"<\")),\r\n                    _outerHTML$split2 = _slicedToArray(_outerHTML$split, 2),\r\n                    start = _outerHTML$split2[0],\r\n                    end = _outerHTML$split2[1];\r\n                return \"\".concat(start, \">\").concat(parts.join(\"\"), \"<\").concat(end)\r\n            }\r\n            return blot.domNode.outerHTML\r\n        }\r\n    }, {\r\n        key: \"_handleBreakLine\",\r\n        value: function(linkedList, parts) {\r\n            if (1 === linkedList.length && linkedList.head instanceof this.BreakBlot) {\r\n                parts.push(\"<br>\")\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_convertList\",\r\n        value: function(blot, index, length) {\r\n            var items = [];\r\n            var parentFormats = blot.formats();\r\n            blot.children.forEachAt(index, length, function(child, offset, childLength) {\r\n                var childFormats = child.formats();\r\n                items.push({\r\n                    child: child,\r\n                    offset: offset,\r\n                    length: childLength,\r\n                    indent: childFormats.indent || 0,\r\n                    type: parentFormats.list\r\n                })\r\n            });\r\n            return this._getListMarkup(items, -1, [], blot)\r\n        }\r\n    }, {\r\n        key: \"_getListMarkup\",\r\n        value: function(items, lastIndent, listTypes, listBlot) {\r\n            if (0 === items.length) {\r\n                var _endTag = this._getListType(listTypes.pop());\r\n                if (lastIndent <= 0) {\r\n                    return \"</li></\".concat(_endTag, \">\")\r\n                }\r\n                return this._processListMarkup([\r\n                    [], lastIndent - 1, listTypes\r\n                ], _endTag)\r\n            }\r\n            var _items = _toArray(items),\r\n                _items$ = _items[0],\r\n                child = _items$.child,\r\n                offset = _items$.offset,\r\n                length = _items$.length,\r\n                indent = _items$.indent,\r\n                type = _items$.type,\r\n                rest = _items.slice(1);\r\n            var tag = this._getListType(type);\r\n            var childItemArgs = [child, offset, length];\r\n            var restItemsArgs = [rest, indent, listTypes];\r\n            if (indent > lastIndent) {\r\n                listTypes.push(type);\r\n                var multiLevelTags = this._correctListMultiIndent(listTypes, type, tag, indent - lastIndent - 1);\r\n                return multiLevelTags + this._processIndentListMarkup(childItemArgs, restItemsArgs, tag, listBlot)\r\n            }\r\n            if (indent === lastIndent) {\r\n                return this._processIndentListMarkup(childItemArgs, restItemsArgs)\r\n            }\r\n            var endTag = this._getListType(listTypes.pop());\r\n            return this._processListMarkup([items, lastIndent - 1, listTypes], endTag)\r\n        }\r\n    }, {\r\n        key: \"_correctListMultiIndent\",\r\n        value: function(listTypes, type, tag, indent) {\r\n            var markup = \"\";\r\n            while (indent) {\r\n                markup += \"<\".concat(tag, \">\");\r\n                listTypes.push(type);\r\n                indent--\r\n            }\r\n            return markup\r\n        }\r\n    }, {\r\n        key: \"_processListMarkup\",\r\n        value: function(childItemArgs, tag) {\r\n            return \"</li></\".concat(tag, \">\").concat(this._getListMarkup.apply(this, _toConsumableArray(childItemArgs)))\r\n        }\r\n    }, {\r\n        key: \"_processIndentListMarkup\",\r\n        value: function(childItemArgs, restItemsArgs) {\r\n            var tag = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"/li\";\r\n            var listBlot = arguments.length > 3 ? arguments[3] : void 0;\r\n            var listAttrs = listBlot && this._getBlotNodeAttributes(listBlot) || \"\";\r\n            var itemAttrs = this._getBlotNodeAttributes(childItemArgs[0]);\r\n            return \"<\".concat(tag).concat(listAttrs, \"><li\").concat(itemAttrs, \">\").concat(this._convertHTML.apply(this, _toConsumableArray(childItemArgs))).concat(this._getListMarkup.apply(this, _toConsumableArray(restItemsArgs).concat([listBlot])))\r\n        }\r\n    }, {\r\n        key: \"_getBlotNodeAttributes\",\r\n        value: function(_ref2) {\r\n            var domNode = _ref2.domNode;\r\n            if (!domNode.hasAttributes()) {\r\n                return \"\"\r\n            }\r\n            var attributes = domNode.attributes;\r\n            var attributesString = \" \";\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                var name = attributes[i].name;\r\n                var value = attributes[i].value;\r\n                if (\"class\" === name) {\r\n                    value = this._removeIndentClass(value)\r\n                }\r\n                if (value.length) {\r\n                    attributesString += \"\".concat(name, '=\"').concat(value, '\"')\r\n                }\r\n            }\r\n            return attributesString.length > 1 ? attributesString : \"\"\r\n        }\r\n    }, {\r\n        key: \"_getListType\",\r\n        value: function(type) {\r\n            return \"ordered\" === type ? \"ol\" : \"ul\"\r\n        }\r\n    }, {\r\n        key: \"_removeIndentClass\",\r\n        value: function(classString) {\r\n            return classString.replace(/ql-indent-\\d/g, \"\").trim()\r\n        }\r\n    }, {\r\n        key: \"_escapeText\",\r\n        value: function(text) {\r\n            return text.replace(/[&<>\"']/g, function(char) {\r\n                return ESCAPING_MAP[char]\r\n            })\r\n        }\r\n    }]);\r\n    return DeltaConverter\r\n}();\r\n_converterController2.default.addConverter(\"delta\", DeltaConverter);\r\nexports.default = DeltaConverter;\r\n"]},"metadata":{},"sourceType":"script"}