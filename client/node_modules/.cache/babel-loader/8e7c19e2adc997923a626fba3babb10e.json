{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/calendar/client/src/components/create-account-form/create-account-form.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Form, { Item, Label, ButtonItem, ButtonOptions, RequiredRule, CustomRule, EmailRule } from 'devextreme-react/form';\nimport notify from 'devextreme/ui/notify';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport { createAccount } from '../../api/auth';\nimport './create-account-form.scss';\nexport default function (props) {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({});\n  const onSubmit = useCallback(async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = formData.current;\n    setLoading(true);\n    const result = await createAccount(email, password);\n    setLoading(false);\n\n    if (result.isOk) {\n      history.push('/login');\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [history]);\n  const confirmPassword = useCallback(({\n    value\n  }) => value === formData.current.password, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: 'create-account-form',\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    formData: formData.current,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    dataField: 'email',\n    editorType: 'dxTextBox',\n    editorOptions: emailEditorOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RequiredRule, {\n    message: \"Email is required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EmailRule, {\n    message: \"Email is invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    visible: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Item, {\n    dataField: 'password',\n    editorType: 'dxTextBox',\n    editorOptions: passwordEditorOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RequiredRule, {\n    message: \"Password is required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    visible: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Item, {\n    dataField: 'confirmedPassword',\n    editorType: 'dxTextBox',\n    editorOptions: confirmedPasswordEditorOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RequiredRule, {\n    message: \"Password is required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CustomRule, {\n    message: 'Passwords do not match',\n    validationCallback: confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    visible: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"policy-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"By creating an account, you agree to the \", /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 54\n    }\n  }, \"Terms of Service\"), \" and \", /*#__PURE__*/React.createElement(Link, {\n    to: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 95\n    }\n  }, \"Privacy Policy\"))), /*#__PURE__*/React.createElement(ButtonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOptions, {\n    width: '100%',\n    type: 'default',\n    useSubmitBehavior: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"dx-button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadIndicator, {\n    width: '24px',\n    height: '24px',\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }) : 'Create a new account'))), /*#__PURE__*/React.createElement(Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'login-link',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: '/login',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 30\n    }\n  }, \"Sign In\")))));\n}\nconst emailEditorOptions = {\n  stylingMode: 'filled',\n  placeholder: 'Email',\n  mode: 'email'\n};\nconst passwordEditorOptions = {\n  stylingMode: 'filled',\n  placeholder: 'Password',\n  mode: 'password'\n};\nconst confirmedPasswordEditorOptions = {\n  stylingMode: 'filled',\n  placeholder: 'Confirm Password',\n  mode: 'password'\n};","map":{"version":3,"sources":["/Users/tracyvy/Desktop/calendar/client/src/components/create-account-form/create-account-form.js"],"names":["React","useState","useRef","useCallback","Link","useHistory","Form","Item","Label","ButtonItem","ButtonOptions","RequiredRule","CustomRule","EmailRule","notify","LoadIndicator","createAccount","props","history","loading","setLoading","formData","onSubmit","e","preventDefault","email","password","current","result","isOk","push","message","confirmPassword","value","emailEditorOptions","passwordEditorOptions","confirmedPasswordEditorOptions","stylingMode","placeholder","mode"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport Form, {\n  Item,\n  Label,\n  ButtonItem,\n  ButtonOptions,\n  RequiredRule,\n  CustomRule,\n  EmailRule\n} from 'devextreme-react/form';\nimport notify from 'devextreme/ui/notify';\nimport LoadIndicator from 'devextreme-react/load-indicator';\nimport { createAccount } from '../../api/auth';\nimport './create-account-form.scss';\n\nexport default function (props) {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const formData = useRef({});\n\n  const onSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    const { email, password } = formData.current;\n    setLoading(true);\n\n    const result = await createAccount(email, password);\n    setLoading(false);\n\n    if (result.isOk) {\n      history.push('/login');\n    } else {\n      notify(result.message, 'error', 2000);\n    }\n  }, [history]);\n\n  const confirmPassword = useCallback(\n    ({ value }) => value === formData.current.password,\n    []\n  );\n\n  return (\n    <form className={'create-account-form'} onSubmit={onSubmit}>\n      <Form formData={formData.current} disabled={loading}>\n        <Item\n          dataField={'email'}\n          editorType={'dxTextBox'}\n          editorOptions={emailEditorOptions}\n        >\n          <RequiredRule message=\"Email is required\" />\n          <EmailRule message=\"Email is invalid\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'password'}\n          editorType={'dxTextBox'}\n          editorOptions={passwordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <Label visible={false} />\n        </Item>\n        <Item\n          dataField={'confirmedPassword'}\n          editorType={'dxTextBox'}\n          editorOptions={confirmedPasswordEditorOptions}\n        >\n          <RequiredRule message=\"Password is required\" />\n          <CustomRule\n            message={'Passwords do not match'}\n            validationCallback={confirmPassword}\n          />\n          <Label visible={false} />\n        </Item>\n        <Item>\n          <div className='policy-info'>\n            By creating an account, you agree to the <Link to=\"#\">Terms of Service</Link> and <Link to=\"#\">Privacy Policy</Link>\n          </div>\n        </Item>\n        <ButtonItem>\n          <ButtonOptions\n            width={'100%'}\n            type={'default'}\n            useSubmitBehavior={true}\n          >\n            <span className=\"dx-button-text\">\n              {\n                loading\n                  ? <LoadIndicator width={'24px'} height={'24px'} visible={true} />\n                  : 'Create a new account'\n              }\n            </span>\n          </ButtonOptions>\n        </ButtonItem>\n        <Item>\n          <div className={'login-link'}>\n            Have an account? <Link to={'/login'}>Sign In</Link>\n          </div>\n        </Item>\n      </Form>\n    </form>\n  );\n}\n\nconst emailEditorOptions = { stylingMode: 'filled', placeholder: 'Email', mode: 'email' };\nconst passwordEditorOptions = { stylingMode: 'filled', placeholder: 'Password', mode: 'password' };\nconst confirmedPasswordEditorOptions = { stylingMode: 'filled', placeholder: 'Confirm Password', mode: 'password' };\n"]},"metadata":{},"sourceType":"module"}