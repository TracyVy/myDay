{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _uiSchedulerAppointmentsPositioningStrategy = require(\"./ui.scheduler.appointmentsPositioning.strategy.base\");\n\nvar _uiSchedulerAppointmentsPositioningStrategy2 = _interopRequireDefault(_uiSchedulerAppointmentsPositioningStrategy);\n\nvar _uiSchedulerAppointmentsPositioningStrategy3 = require(\"./ui.scheduler.appointmentsPositioning.strategy.adaptive\");\n\nvar _uiSchedulerAppointmentsPositioningStrategy4 = _interopRequireDefault(_uiSchedulerAppointmentsPositioningStrategy3);\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _ui = require(\"../../widget/ui.errors\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _date = require(\"../../../core/utils/date\");\n\nvar _date2 = _interopRequireDefault(_date);\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _type2 = _interopRequireDefault(_type);\n\nvar _themes = require(\"../../themes\");\n\nvar _themes2 = _interopRequireDefault(_themes);\n\nvar _utils = require(\"../utils.timeZone\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar toMs = _date2.default.dateToMilliseconds;\nvar APPOINTMENT_MIN_SIZE = 2;\nvar APPOINTMENT_DEFAULT_HEIGHT = 20;\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;\nvar DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;\n\nvar BaseRenderingStrategy = function () {\n  function BaseRenderingStrategy(instance) {\n    _classCallCheck(this, BaseRenderingStrategy);\n\n    this.instance = instance;\n\n    this._initPositioningStrategy();\n  }\n\n  _createClass(BaseRenderingStrategy, [{\n    key: \"_isAdaptive\",\n    value: function () {\n      return this.instance.fire(\"isAdaptive\");\n    }\n  }, {\n    key: \"_correctCollectorCoordinatesInAdaptive\",\n    value: function (coordinates, isAllDay) {\n      coordinates.top = coordinates.top + this.getCollectorTopOffset(isAllDay);\n      coordinates.left = coordinates.left + this.getCollectorLeftOffset();\n    }\n  }, {\n    key: \"_initPositioningStrategy\",\n    value: function () {\n      this._positioningStrategy = this._isAdaptive() ? new _uiSchedulerAppointmentsPositioningStrategy4.default(this) : new _uiSchedulerAppointmentsPositioningStrategy2.default(this);\n    }\n  }, {\n    key: \"getPositioningStrategy\",\n    value: function () {\n      return this._positioningStrategy;\n    }\n  }, {\n    key: \"getAppointmentMinSize\",\n    value: function () {\n      return APPOINTMENT_MIN_SIZE;\n    }\n  }, {\n    key: \"keepAppointmentSettings\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"getDeltaTime\",\n    value: function () {}\n  }, {\n    key: \"getAppointmentGeometry\",\n    value: function (coordinates) {\n      return coordinates;\n    }\n  }, {\n    key: \"needCorrectAppointmentDates\",\n    value: function () {\n      return true;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function () {\n      return \"horizontal\";\n    }\n  }, {\n    key: \"createTaskPositionMap\",\n    value: function (items) {\n      delete this._maxAppointmentCountPerCell;\n      var length = items && items.length;\n\n      if (!length) {\n        return;\n      }\n\n      this._defaultWidth = this.instance._cellWidth;\n      this._defaultHeight = this.instance._cellHeight;\n      this._allDayHeight = this.instance._allDayCellHeight;\n      var map = [];\n\n      for (var i = 0; i < length; i++) {\n        var coordinates = this._getItemPosition(items[i]);\n\n        if (this._isRtl()) {\n          coordinates = this._correctRtlCoordinates(coordinates);\n        }\n\n        map.push(coordinates);\n      }\n\n      var positionArray = this._getSortedPositions(map);\n\n      var resultPositions = this._getResultPositions(positionArray);\n\n      return this._getExtendedPositionMap(map, resultPositions);\n    }\n  }, {\n    key: \"_getDeltaWidth\",\n    value: function (args, initialSize) {\n      var intervalWidth = this.instance.fire(\"getResizableStep\") || this.getAppointmentMinSize();\n      var initialWidth = initialSize.width;\n      return Math.round((args.width - initialWidth) / intervalWidth);\n    }\n  }, {\n    key: \"_correctRtlCoordinates\",\n    value: function (coordinates) {\n      var width = coordinates[0].width || this._getAppointmentMaxWidth();\n\n      coordinates.forEach(function (coordinate) {\n        if (!coordinate.appointmentReduced) {\n          coordinate.left -= width;\n        }\n      });\n      return coordinates;\n    }\n  }, {\n    key: \"_getAppointmentMaxWidth\",\n    value: function () {\n      return this.getDefaultCellWidth();\n    }\n  }, {\n    key: \"_getItemPosition\",\n    value: function (item) {\n      var position = this._getAppointmentCoordinates(item);\n\n      var allDay = this.isAllDay(item);\n      var result = [];\n      var startDate = new Date(this.instance.fire(\"getField\", \"startDate\", item));\n      var isRecurring = !!this.instance.fire(\"getField\", \"recurrenceRule\", item);\n\n      for (var j = 0; j < position.length; j++) {\n        var height = this.calculateAppointmentHeight(item, position[j], isRecurring);\n        var width = this.calculateAppointmentWidth(item, position[j], isRecurring);\n        var resultWidth = width;\n        var appointmentReduced = null;\n        var multiWeekAppointmentParts = [];\n        var initialRowIndex = position[j].rowIndex;\n        var initialCellIndex = position[j].cellIndex;\n\n        if (this._needVerifyItemSize() || allDay) {\n          var currentMaxAllowedPosition = position[j].hMax;\n\n          if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {\n            left: position[j].left,\n            width: width\n          })) {\n            appointmentReduced = \"head\";\n            initialRowIndex = position[j].rowIndex;\n            initialCellIndex = position[j].cellIndex;\n            resultWidth = this._reduceMultiWeekAppointment(width, {\n              left: position[j].left,\n              right: currentMaxAllowedPosition\n            });\n            multiWeekAppointmentParts = this._getAppointmentParts({\n              sourceAppointmentWidth: width,\n              reducedWidth: resultWidth,\n              height: height\n            }, position[j], startDate);\n\n            if (this._isRtl()) {\n              position[j].left = currentMaxAllowedPosition;\n            }\n          }\n        }\n\n        (0, _extend.extend)(position[j], {\n          height: height,\n          width: resultWidth,\n          allDay: allDay,\n          rowIndex: initialRowIndex,\n          cellIndex: initialCellIndex,\n          appointmentReduced: appointmentReduced,\n          originalAppointmentStartDate: this.startDate(item, true),\n          originalAppointmentEndDate: this.endDate(item),\n          endDate: this.endDate(item, position[j], isRecurring)\n        });\n        result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getAppointmentPartsPosition\",\n    value: function (appointmentParts, position, result) {\n      if (appointmentParts.length) {\n        appointmentParts.unshift(position);\n        result = result.concat(appointmentParts);\n      } else {\n        result.push(position);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getAppointmentCoordinates\",\n    value: function (itemData) {\n      return this.instance.fire(\"needCoordinates\", {\n        startDate: this.startDate(itemData),\n        originalStartDate: this.startDate(itemData, true),\n        appointmentData: itemData\n      });\n    }\n  }, {\n    key: \"_isRtl\",\n    value: function () {\n      return this.instance.option(\"rtlEnabled\");\n    }\n  }, {\n    key: \"_getAppointmentParts\",\n    value: function () {\n      return [];\n    }\n  }, {\n    key: \"_getCompactAppointmentParts\",\n    value: function (appointmentWidth) {\n      var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\n      return Math.round(appointmentWidth / cellWidth);\n    }\n  }, {\n    key: \"_reduceMultiWeekAppointment\",\n    value: function (sourceAppointmentWidth, bound) {\n      if (this._isRtl()) {\n        sourceAppointmentWidth = Math.floor(bound.left - bound.right);\n      } else {\n        sourceAppointmentWidth = bound.right - Math.floor(bound.left);\n      }\n\n      return sourceAppointmentWidth;\n    }\n  }, {\n    key: \"calculateAppointmentHeight\",\n    value: function () {\n      return 0;\n    }\n  }, {\n    key: \"calculateAppointmentWidth\",\n    value: function () {\n      return 0;\n    }\n  }, {\n    key: \"isAppointmentGreaterThan\",\n    value: function (etalon, comparisonParameters) {\n      var result = comparisonParameters.left + comparisonParameters.width - etalon;\n\n      if (this._isRtl()) {\n        result = etalon + comparisonParameters.width - comparisonParameters.left;\n      }\n\n      return result > this.getDefaultCellWidth() / 2;\n    }\n  }, {\n    key: \"isAllDay\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"cropAppointmentWidth\",\n    value: function (width, cellWidth) {\n      if (this.instance.fire(\"isGroupedByDate\")) {\n        width = cellWidth;\n      }\n\n      return width;\n    }\n  }, {\n    key: \"_getSortedPositions\",\n    value: function (positionList) {\n      var _this = this;\n\n      var result = [];\n\n      var round = function (value) {\n        return Math.round(100 * value) / 100;\n      };\n\n      var createItem = function (rowIndex, cellIndex, top, left, bottom, right, position, allDay) {\n        return {\n          i: rowIndex,\n          j: cellIndex,\n          top: round(top),\n          left: round(left),\n          bottom: round(bottom),\n          right: round(right),\n          cellPosition: position,\n          allDay: allDay\n        };\n      };\n\n      for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {\n        for (var cellIndex = 0, cellCount = positionList[rowIndex].length; cellIndex < cellCount; cellIndex++) {\n          var _positionList$rowInde = positionList[rowIndex][cellIndex],\n              top = _positionList$rowInde.top,\n              left = _positionList$rowInde.left,\n              height = _positionList$rowInde.height,\n              width = _positionList$rowInde.width,\n              cellPosition = _positionList$rowInde.cellPosition,\n              allDay = _positionList$rowInde.allDay;\n          result.push(createItem(rowIndex, cellIndex, top, left, top + height, left + width, cellPosition, allDay));\n        }\n      }\n\n      return result.sort(function (a, b) {\n        return _this._sortCondition(a, b);\n      });\n    }\n  }, {\n    key: \"_sortCondition\",\n    value: function () {}\n  }, {\n    key: \"_getConditions\",\n    value: function (a, b) {\n      var isSomeEdge = this._isSomeEdge(a, b);\n\n      return {\n        columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),\n        rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),\n        cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)\n      };\n    }\n  }, {\n    key: \"_rowCondition\",\n    value: function (a, b) {\n      var conditions = this._getConditions(a, b);\n\n      return conditions.columnCondition || conditions.rowCondition;\n    }\n  }, {\n    key: \"_columnCondition\",\n    value: function (a, b) {\n      var conditions = this._getConditions(a, b);\n\n      return conditions.rowCondition || conditions.columnCondition;\n    }\n  }, {\n    key: \"_isSomeEdge\",\n    value: function (a, b) {\n      return a.i === b.i && a.j === b.j;\n    }\n  }, {\n    key: \"_normalizeCondition\",\n    value: function (first, second) {\n      var result = first - second;\n      return Math.abs(result) > 1 ? result : 0;\n    }\n  }, {\n    key: \"_isItemsCross\",\n    value: function (firstItem, secondItem) {\n      var areItemsInTheSameTable = !!firstItem.allDay === !!secondItem.allDay;\n      var areItemsAllDay = firstItem.allDay && secondItem.allDay;\n\n      if (areItemsInTheSameTable) {\n        var orientation = this._getOrientation(areItemsAllDay);\n\n        return this._checkItemsCrossing(firstItem, secondItem, orientation);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"_checkItemsCrossing\",\n    value: function (firstItem, secondItem, orientation) {\n      var firstItemSide_1 = Math.floor(firstItem[orientation[0]]);\n      var firstItemSide_2 = Math.floor(firstItem[orientation[1]]);\n      var secondItemSide_1 = Math.ceil(secondItem[orientation[0]]);\n      var secondItemSide_2 = Math.ceil(secondItem[orientation[1]]);\n      var isItemCross = Math.abs(firstItem[orientation[2]] - secondItem[orientation[2]]) <= 1;\n      return isItemCross && (firstItemSide_1 <= secondItemSide_1 && firstItemSide_2 > secondItemSide_1 || firstItemSide_1 < secondItemSide_2 && firstItemSide_2 >= secondItemSide_2 || firstItemSide_1 === secondItemSide_1 && firstItemSide_2 === secondItemSide_2);\n    }\n  }, {\n    key: \"_getOrientation\",\n    value: function (isAllDay) {\n      return isAllDay ? [\"left\", \"right\", \"top\"] : [\"top\", \"bottom\", \"left\"];\n    }\n  }, {\n    key: \"_getResultPositions\",\n    value: function (sortedArray) {\n      var _this2 = this;\n\n      var result = [];\n      var i;\n      var sortedIndex = 0;\n      var currentItem;\n      var indexes;\n      var itemIndex;\n      var maxIndexInStack = 0;\n      var stack = {};\n\n      var findFreeIndex = function findFreeIndex(indexes, index) {\n        var isFind = indexes.some(function (item) {\n          return item === index;\n        });\n\n        if (isFind) {\n          return findFreeIndex(indexes, ++index);\n        } else {\n          return index;\n        }\n      };\n\n      var createItem = function (currentItem, index) {\n        var currentIndex = index || 0;\n        return {\n          index: currentIndex,\n          i: currentItem.i,\n          j: currentItem.j,\n          left: currentItem.left,\n          right: currentItem.right,\n          top: currentItem.top,\n          bottom: currentItem.bottom,\n          allDay: currentItem.allDay,\n          sortedIndex: _this2._skipSortedIndex(currentIndex) ? null : sortedIndex++\n        };\n      };\n\n      var startNewStack = function (currentItem) {\n        stack.items = [createItem(currentItem)];\n        stack.left = currentItem.left;\n        stack.right = currentItem.right;\n        stack.top = currentItem.top;\n        stack.bottom = currentItem.bottom;\n        stack.allDay = currentItem.allDay;\n      };\n\n      var pushItemsInResult = function (items) {\n        items.forEach(function (item) {\n          result.push({\n            index: item.index,\n            count: maxIndexInStack + 1,\n            i: item.i,\n            j: item.j,\n            sortedIndex: item.sortedIndex\n          });\n        });\n      };\n\n      for (i = 0; i < sortedArray.length; i++) {\n        currentItem = sortedArray[i];\n        indexes = [];\n\n        if (!stack.items) {\n          startNewStack(currentItem);\n        } else {\n          if (this._isItemsCross(stack, currentItem)) {\n            stack.items.forEach(function (item, index) {\n              if (_this2._isItemsCross(item, currentItem)) {\n                indexes.push(item.index);\n              }\n            });\n            itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;\n            stack.items.push(createItem(currentItem, itemIndex));\n            maxIndexInStack = Math.max(itemIndex, maxIndexInStack);\n            stack.left = Math.min(stack.left, currentItem.left);\n            stack.right = Math.max(stack.right, currentItem.right);\n            stack.top = Math.min(stack.top, currentItem.top);\n            stack.bottom = Math.max(stack.bottom, currentItem.bottom);\n            stack.allDay = currentItem.allDay;\n          } else {\n            pushItemsInResult(stack.items);\n            stack = {};\n            startNewStack(currentItem);\n            maxIndexInStack = 0;\n          }\n        }\n      }\n\n      if (stack.items) {\n        pushItemsInResult(stack.items);\n      }\n\n      return result.sort(function (a, b) {\n        var columnCondition = a.j - b.j;\n        var rowCondition = a.i - b.i;\n        return rowCondition ? rowCondition : columnCondition;\n      });\n    }\n  }, {\n    key: \"_skipSortedIndex\",\n    value: function (index) {\n      return index > this._getMaxAppointmentCountPerCell() - 1;\n    }\n  }, {\n    key: \"_findIndexByKey\",\n    value: function (arr, iKey, jKey, iValue, jValue) {\n      var result = 0;\n\n      for (var i = 0, len = arr.length; i < len; i++) {\n        if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {\n          result = i;\n          break;\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_getExtendedPositionMap\",\n    value: function (map, positions) {\n      var positionCounter = 0;\n      var result = [];\n\n      for (var i = 0, mapLength = map.length; i < mapLength; i++) {\n        var resultString = [];\n\n        for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {\n          map[i][j].index = positions[positionCounter].index;\n          map[i][j].sortedIndex = positions[positionCounter].sortedIndex;\n          map[i][j].count = positions[positionCounter++].count;\n          resultString.push(map[i][j]);\n\n          this._checkLongCompactAppointment(map[i][j], resultString);\n        }\n\n        result.push(resultString);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_checkLongCompactAppointment\",\n    value: function (item, result) {\n      this._splitLongCompactAppointment(item, result);\n\n      return result;\n    }\n  }, {\n    key: \"_splitLongCompactAppointment\",\n    value: function (item, result) {\n      var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);\n\n      var compactCount = 0;\n\n      if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {\n        item.isCompact = true;\n        compactCount = this._getCompactAppointmentParts(item.width);\n\n        for (var k = 1; k < compactCount; k++) {\n          var compactPart = (0, _extend.extend)(true, {}, item);\n          compactPart.left = this._getCompactLeftCoordinate(item.left, k);\n          compactPart.cellIndex = compactPart.cellIndex + k;\n          compactPart.sortedIndex = null;\n          result.push(compactPart);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"startDate\",\n    value: function startDate(appointment, skipNormalize, position) {\n      var startDate = position && position.startDate;\n\n      var rangeStartDate = this.instance._getStartDate(appointment, skipNormalize);\n\n      var text = this.instance.fire(\"getField\", \"text\", appointment);\n\n      if (startDate && rangeStartDate > startDate || !startDate) {\n        startDate = rangeStartDate;\n      }\n\n      if (isNaN(startDate.getTime())) {\n        throw _ui2.default.Error(\"E1032\", text);\n      }\n\n      return startDate;\n    }\n  }, {\n    key: \"endDate\",\n    value: function endDate(appointment, position, isRecurring) {\n      var ignoreViewDates = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\n\n      var endDate = this.instance._getEndDate(appointment, ignoreViewDates);\n\n      var realStartDate = this.startDate(appointment, true);\n      var viewStartDate = this.startDate(appointment, false, position);\n\n      if (viewStartDate.getTime() > endDate.getTime() || isRecurring) {\n        var recurrencePartStartDate = position ? position.initialStartDate || position.startDate : realStartDate;\n        var recurrencePartCroppedByViewStartDate = position ? position.startDate : realStartDate;\n        var fullDuration = viewStartDate.getTime() > endDate.getTime() ? this.instance.fire(\"getField\", \"endDate\", appointment).getTime() - this.instance.fire(\"getField\", \"startDate\", appointment).getTime() : endDate.getTime() - realStartDate.getTime();\n        fullDuration = this._adjustDurationByDaylightDiff(fullDuration, realStartDate, endDate);\n        endDate = new Date(viewStartDate.getTime() >= recurrencePartStartDate.getTime() ? recurrencePartStartDate.getTime() : viewStartDate.getTime());\n\n        if (isRecurring) {\n          endDate = new Date(endDate.getTime() + fullDuration);\n        }\n\n        if (!_date2.default.sameDate(realStartDate, endDate) && recurrencePartCroppedByViewStartDate.getTime() < viewStartDate.getTime()) {\n          var headDuration = _date2.default.trimTime(endDate).getTime() - recurrencePartCroppedByViewStartDate.getTime();\n          var tailDuration = fullDuration - headDuration || fullDuration;\n          endDate = new Date(_date2.default.trimTime(viewStartDate).getTime() + tailDuration);\n        }\n      }\n\n      if (!this.isAllDay(appointment)) {\n        var viewEndDate = _date2.default.roundToHour(this.instance.fire(\"getEndViewDate\"));\n\n        if (endDate > viewEndDate) {\n          endDate = viewEndDate;\n        }\n      }\n\n      var currentViewEndTime = new Date(new Date(endDate).setHours(this.instance.option(\"endDayHour\"), 0, 0));\n\n      if (endDate.getTime() > currentViewEndTime.getTime()) {\n        endDate = currentViewEndTime;\n      }\n\n      return endDate;\n    }\n  }, {\n    key: \"_adjustDurationByDaylightDiff\",\n    value: function (duration, startDate, endDate) {\n      var daylightDiff = _utils2.default.getDaylightOffset(startDate, endDate);\n\n      return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration;\n    }\n  }, {\n    key: \"_needAdjustDuration\",\n    value: function (diff) {\n      return 0 !== diff;\n    }\n  }, {\n    key: \"_calculateDurationByDaylightDiff\",\n    value: function (duration, diff) {\n      return duration + diff * toMs(\"minute\");\n    }\n  }, {\n    key: \"_getAppointmentDurationInMs\",\n    value: function (startDate, endDate, allDay) {\n      return this.instance.fire(\"getAppointmentDurationInMs\", {\n        startDate: startDate,\n        endDate: endDate,\n        allDay: allDay\n      });\n    }\n  }, {\n    key: \"_markAppointmentAsVirtual\",\n    value: function (coordinates, isAllDay) {\n      var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);\n\n      if (coordinates.count - countFullWidthAppointmentInCell > 0) {\n        coordinates.virtual = {\n          top: coordinates.top,\n          left: coordinates.left,\n          index: \"tail\" === coordinates.appointmentReduced ? coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex : coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex + \"-tail\",\n          isAllDay: isAllDay\n        };\n      }\n    }\n  }, {\n    key: \"_getMaxAppointmentCountPerCellByType\",\n    value: function (isAllDay) {\n      var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();\n\n      if (_type2.default.isObject(appointmentCountPerCell)) {\n        return isAllDay ? this._getMaxAppointmentCountPerCell().allDay : this._getMaxAppointmentCountPerCell().simple;\n      } else {\n        return appointmentCountPerCell;\n      }\n    }\n  }, {\n    key: \"getDropDownAppointmentWidth\",\n    value: function (intervalCount, isAllDay) {\n      return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay);\n    }\n  }, {\n    key: \"getDropDownAppointmentHeight\",\n    value: function () {\n      return this.getPositioningStrategy().getDropDownAppointmentHeight();\n    }\n  }, {\n    key: \"getDropDownButtonAdaptiveSize\",\n    value: function () {\n      return DROP_DOWN_BUTTON_ADAPTIVE_SIZE;\n    }\n  }, {\n    key: \"getDefaultCellWidth\",\n    value: function () {\n      return this._defaultWidth;\n    }\n  }, {\n    key: \"getDefaultCellHeight\",\n    value: function () {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"getDefaultAllDayCellHeight\",\n    value: function () {\n      return this._allDayHeight;\n    }\n  }, {\n    key: \"getCollectorTopOffset\",\n    value: function (allDay) {\n      return this.getPositioningStrategy().getCollectorTopOffset(allDay);\n    }\n  }, {\n    key: \"getCollectorLeftOffset\",\n    value: function () {\n      return this.getPositioningStrategy().getCollectorLeftOffset();\n    }\n  }, {\n    key: \"getAppointmentDataCalculator\",\n    value: function () {}\n  }, {\n    key: \"_customizeCoordinates\",\n    value: function (coordinates, height, appointmentCountPerCell, topOffset, isAllDay) {\n      var index = coordinates.index;\n      var appointmentHeight = height / appointmentCountPerCell;\n      var appointmentTop = coordinates.top + index * appointmentHeight;\n      var top = appointmentTop + topOffset;\n      var width = coordinates.width;\n      var left = coordinates.left;\n\n      if (coordinates.isCompact) {\n        this._isAdaptive() && this._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay);\n\n        this._markAppointmentAsVirtual(coordinates, isAllDay);\n      }\n\n      return {\n        height: appointmentHeight,\n        width: width,\n        top: top,\n        left: left,\n        empty: this._isAppointmentEmpty(height, width)\n      };\n    }\n  }, {\n    key: \"_isAppointmentEmpty\",\n    value: function (height, width) {\n      return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth();\n    }\n  }, {\n    key: \"_calculateGeometryConfig\",\n    value: function (coordinates) {\n      var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\n\n      var offsets = this._getOffsets();\n\n      var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\n\n      var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\n\n      var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\n\n      var maxHeight = this._getMaxHeight();\n\n      if (!(0, _type.isNumeric)(appointmentCountPerCell)) {\n        appointmentCountPerCell = coordinates.count;\n        ratio = (maxHeight - offsets.unlimited) / maxHeight;\n      }\n\n      var topOffset = (1 - ratio) * maxHeight;\n\n      if (\"auto\" === overlappingMode || (0, _type.isNumeric)(overlappingMode)) {\n        ratio = 1;\n        maxHeight -= appointmentDefaultOffset;\n        topOffset = appointmentDefaultOffset;\n      }\n\n      return {\n        height: ratio * maxHeight,\n        appointmentCountPerCell: appointmentCountPerCell,\n        offset: topOffset\n      };\n    }\n  }, {\n    key: \"_getAppointmentCount\",\n    value: function () {}\n  }, {\n    key: \"_getDefaultRatio\",\n    value: function () {}\n  }, {\n    key: \"_getOffsets\",\n    value: function () {}\n  }, {\n    key: \"_getMaxHeight\",\n    value: function () {}\n  }, {\n    key: \"_needVerifyItemSize\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"needSeparateAppointment\",\n    value: function (allDay) {\n      return this.instance.fire(\"isGroupedByDate\") && allDay;\n    }\n  }, {\n    key: \"_getMaxAppointmentCountPerCell\",\n    value: function () {\n      if (!this._maxAppointmentCountPerCell) {\n        var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\n        var appointmentCountPerCell;\n\n        if ((0, _type.isNumeric)(overlappingMode)) {\n          appointmentCountPerCell = overlappingMode;\n        }\n\n        if (\"auto\" === overlappingMode) {\n          appointmentCountPerCell = this._getDynamicAppointmentCountPerCell();\n        }\n\n        if (\"unlimited\" === overlappingMode) {\n          appointmentCountPerCell = void 0;\n        }\n\n        this._maxAppointmentCountPerCell = appointmentCountPerCell;\n      }\n\n      return this._maxAppointmentCountPerCell;\n    }\n  }, {\n    key: \"_getDynamicAppointmentCountPerCell\",\n    value: function () {\n      return this.getPositioningStrategy().getDynamicAppointmentCountPerCell();\n    }\n  }, {\n    key: \"hasAllDayAppointments\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"_isCompactTheme\",\n    value: function () {\n      return \"compact\" === (_themes2.default.current() || \"\").split(\".\").pop();\n    }\n  }, {\n    key: \"_getAppointmentDefaultOffset\",\n    value: function () {\n      return this.getPositioningStrategy().getAppointmentDefaultOffset();\n    }\n  }, {\n    key: \"_getAppointmentDefaultHeight\",\n    value: function () {\n      return this._getAppointmentHeightByTheme();\n    }\n  }, {\n    key: \"_getAppointmentMinHeight\",\n    value: function () {\n      return this._getAppointmentDefaultHeight();\n    }\n  }, {\n    key: \"_getAppointmentHeightByTheme\",\n    value: function () {\n      return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT;\n    }\n  }, {\n    key: \"_getAppointmentDefaultWidth\",\n    value: function () {\n      return this.getPositioningStrategy()._getAppointmentDefaultWidth();\n    }\n  }, {\n    key: \"_getAppointmentMinWidth\",\n    value: function () {\n      return this._getAppointmentDefaultWidth();\n    }\n  }, {\n    key: \"_needVerticalGroupBounds\",\n    value: function () {\n      return false;\n    }\n  }, {\n    key: \"_needHorizontalGroupBounds\",\n    value: function () {\n      return false;\n    }\n  }]);\n\n  return BaseRenderingStrategy;\n}();\n\nmodule.exports = BaseRenderingStrategy;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/calendar/client/node_modules/devextreme/ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js"],"names":["_uiSchedulerAppointmentsPositioningStrategy","require","_uiSchedulerAppointmentsPositioningStrategy2","_interopRequireDefault","_uiSchedulerAppointmentsPositioningStrategy3","_uiSchedulerAppointmentsPositioningStrategy4","_extend","_ui","_ui2","_date","_date2","_type","_type2","_themes","_themes2","_utils","_utils2","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","toMs","default","dateToMilliseconds","APPOINTMENT_MIN_SIZE","APPOINTMENT_DEFAULT_HEIGHT","COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT","DROP_DOWN_BUTTON_ADAPTIVE_SIZE","BaseRenderingStrategy","_initPositioningStrategy","value","fire","coordinates","isAllDay","top","getCollectorTopOffset","left","getCollectorLeftOffset","_positioningStrategy","_isAdaptive","items","_maxAppointmentCountPerCell","_defaultWidth","_cellWidth","_defaultHeight","_cellHeight","_allDayHeight","_allDayCellHeight","map","_getItemPosition","_isRtl","_correctRtlCoordinates","push","positionArray","_getSortedPositions","resultPositions","_getResultPositions","_getExtendedPositionMap","args","initialSize","intervalWidth","getAppointmentMinSize","initialWidth","width","Math","round","_getAppointmentMaxWidth","forEach","coordinate","appointmentReduced","getDefaultCellWidth","item","position","_getAppointmentCoordinates","allDay","result","startDate","Date","isRecurring","j","height","calculateAppointmentHeight","calculateAppointmentWidth","resultWidth","multiWeekAppointmentParts","initialRowIndex","rowIndex","initialCellIndex","cellIndex","_needVerifyItemSize","currentMaxAllowedPosition","hMax","isAppointmentGreaterThan","_reduceMultiWeekAppointment","right","_getAppointmentParts","sourceAppointmentWidth","reducedWidth","extend","originalAppointmentStartDate","originalAppointmentEndDate","endDate","_getAppointmentPartsPosition","appointmentParts","unshift","concat","itemData","originalStartDate","appointmentData","option","appointmentWidth","cellWidth","bound","floor","etalon","comparisonParameters","positionList","_this","createItem","bottom","cellPosition","rowCount","cellCount","_positionList$rowInde","sort","a","b","_sortCondition","isSomeEdge","_isSomeEdge","columnCondition","_normalizeCondition","rowCondition","cellPositionCondition","conditions","_getConditions","first","second","abs","firstItem","secondItem","areItemsInTheSameTable","areItemsAllDay","orientation","_getOrientation","_checkItemsCrossing","firstItemSide_1","firstItemSide_2","secondItemSide_1","ceil","secondItemSide_2","isItemCross","sortedArray","_this2","sortedIndex","currentItem","indexes","itemIndex","maxIndexInStack","stack","findFreeIndex","index","isFind","some","currentIndex","_skipSortedIndex","startNewStack","pushItemsInResult","count","_isItemsCross","max","min","_getMaxAppointmentCountPerCell","arr","iKey","jKey","iValue","jValue","len","positions","positionCounter","mapLength","resultString","itemLength","_checkLongCompactAppointment","_splitLongCompactAppointment","appointmentCountPerCell","_getMaxAppointmentCountPerCellByType","compactCount","isCompact","_getCompactAppointmentParts","k","compactPart","_getCompactLeftCoordinate","appointment","skipNormalize","rangeStartDate","_getStartDate","text","isNaN","getTime","Error","ignoreViewDates","arguments","_getEndDate","realStartDate","viewStartDate","recurrencePartStartDate","initialStartDate","recurrencePartCroppedByViewStartDate","fullDuration","_adjustDurationByDaylightDiff","sameDate","headDuration","trimTime","tailDuration","viewEndDate","roundToHour","currentViewEndTime","setHours","duration","daylightDiff","getDaylightOffset","_needAdjustDuration","_calculateDurationByDaylightDiff","diff","countFullWidthAppointmentInCell","virtual","groupIndex","isObject","simple","intervalCount","getPositioningStrategy","getDropDownAppointmentWidth","getDropDownAppointmentHeight","topOffset","appointmentHeight","appointmentTop","_correctCollectorCoordinatesInAdaptive","_markAppointmentAsVirtual","empty","_isAppointmentEmpty","_getAppointmentMinHeight","_getAppointmentMinWidth","overlappingMode","offsets","_getOffsets","appointmentDefaultOffset","_getAppointmentDefaultOffset","_getAppointmentCount","ratio","_getDefaultRatio","maxHeight","_getMaxHeight","isNumeric","unlimited","offset","_getDynamicAppointmentCountPerCell","getDynamicAppointmentCountPerCell","current","split","pop","getAppointmentDefaultOffset","_getAppointmentHeightByTheme","_getAppointmentDefaultHeight","_isCompactTheme","_getAppointmentDefaultWidth","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/rendering_strategies/ui.scheduler.appointments.strategy.base.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _uiSchedulerAppointmentsPositioningStrategy = require(\"./ui.scheduler.appointmentsPositioning.strategy.base\");\r\nvar _uiSchedulerAppointmentsPositioningStrategy2 = _interopRequireDefault(_uiSchedulerAppointmentsPositioningStrategy);\r\nvar _uiSchedulerAppointmentsPositioningStrategy3 = require(\"./ui.scheduler.appointmentsPositioning.strategy.adaptive\");\r\nvar _uiSchedulerAppointmentsPositioningStrategy4 = _interopRequireDefault(_uiSchedulerAppointmentsPositioningStrategy3);\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _ui = require(\"../../widget/ui.errors\");\r\nvar _ui2 = _interopRequireDefault(_ui);\r\nvar _date = require(\"../../../core/utils/date\");\r\nvar _date2 = _interopRequireDefault(_date);\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _type2 = _interopRequireDefault(_type);\r\nvar _themes = require(\"../../themes\");\r\nvar _themes2 = _interopRequireDefault(_themes);\r\nvar _utils = require(\"../utils.timeZone\");\r\nvar _utils2 = _interopRequireDefault(_utils);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar toMs = _date2.default.dateToMilliseconds;\r\nvar APPOINTMENT_MIN_SIZE = 2;\r\nvar APPOINTMENT_DEFAULT_HEIGHT = 20;\r\nvar COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT = 18;\r\nvar DROP_DOWN_BUTTON_ADAPTIVE_SIZE = 28;\r\nvar BaseRenderingStrategy = function() {\r\n    function BaseRenderingStrategy(instance) {\r\n        _classCallCheck(this, BaseRenderingStrategy);\r\n        this.instance = instance;\r\n        this._initPositioningStrategy()\r\n    }\r\n    _createClass(BaseRenderingStrategy, [{\r\n        key: \"_isAdaptive\",\r\n        value: function() {\r\n            return this.instance.fire(\"isAdaptive\")\r\n        }\r\n    }, {\r\n        key: \"_correctCollectorCoordinatesInAdaptive\",\r\n        value: function(coordinates, isAllDay) {\r\n            coordinates.top = coordinates.top + this.getCollectorTopOffset(isAllDay);\r\n            coordinates.left = coordinates.left + this.getCollectorLeftOffset()\r\n        }\r\n    }, {\r\n        key: \"_initPositioningStrategy\",\r\n        value: function() {\r\n            this._positioningStrategy = this._isAdaptive() ? new _uiSchedulerAppointmentsPositioningStrategy4.default(this) : new _uiSchedulerAppointmentsPositioningStrategy2.default(this)\r\n        }\r\n    }, {\r\n        key: \"getPositioningStrategy\",\r\n        value: function() {\r\n            return this._positioningStrategy\r\n        }\r\n    }, {\r\n        key: \"getAppointmentMinSize\",\r\n        value: function() {\r\n            return APPOINTMENT_MIN_SIZE\r\n        }\r\n    }, {\r\n        key: \"keepAppointmentSettings\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"getDeltaTime\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"getAppointmentGeometry\",\r\n        value: function(coordinates) {\r\n            return coordinates\r\n        }\r\n    }, {\r\n        key: \"needCorrectAppointmentDates\",\r\n        value: function() {\r\n            return true\r\n        }\r\n    }, {\r\n        key: \"getDirection\",\r\n        value: function() {\r\n            return \"horizontal\"\r\n        }\r\n    }, {\r\n        key: \"createTaskPositionMap\",\r\n        value: function(items) {\r\n            delete this._maxAppointmentCountPerCell;\r\n            var length = items && items.length;\r\n            if (!length) {\r\n                return\r\n            }\r\n            this._defaultWidth = this.instance._cellWidth;\r\n            this._defaultHeight = this.instance._cellHeight;\r\n            this._allDayHeight = this.instance._allDayCellHeight;\r\n            var map = [];\r\n            for (var i = 0; i < length; i++) {\r\n                var coordinates = this._getItemPosition(items[i]);\r\n                if (this._isRtl()) {\r\n                    coordinates = this._correctRtlCoordinates(coordinates)\r\n                }\r\n                map.push(coordinates)\r\n            }\r\n            var positionArray = this._getSortedPositions(map);\r\n            var resultPositions = this._getResultPositions(positionArray);\r\n            return this._getExtendedPositionMap(map, resultPositions)\r\n        }\r\n    }, {\r\n        key: \"_getDeltaWidth\",\r\n        value: function(args, initialSize) {\r\n            var intervalWidth = this.instance.fire(\"getResizableStep\") || this.getAppointmentMinSize();\r\n            var initialWidth = initialSize.width;\r\n            return Math.round((args.width - initialWidth) / intervalWidth)\r\n        }\r\n    }, {\r\n        key: \"_correctRtlCoordinates\",\r\n        value: function(coordinates) {\r\n            var width = coordinates[0].width || this._getAppointmentMaxWidth();\r\n            coordinates.forEach(function(coordinate) {\r\n                if (!coordinate.appointmentReduced) {\r\n                    coordinate.left -= width\r\n                }\r\n            });\r\n            return coordinates\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMaxWidth\",\r\n        value: function() {\r\n            return this.getDefaultCellWidth()\r\n        }\r\n    }, {\r\n        key: \"_getItemPosition\",\r\n        value: function(item) {\r\n            var position = this._getAppointmentCoordinates(item);\r\n            var allDay = this.isAllDay(item);\r\n            var result = [];\r\n            var startDate = new Date(this.instance.fire(\"getField\", \"startDate\", item));\r\n            var isRecurring = !!this.instance.fire(\"getField\", \"recurrenceRule\", item);\r\n            for (var j = 0; j < position.length; j++) {\r\n                var height = this.calculateAppointmentHeight(item, position[j], isRecurring);\r\n                var width = this.calculateAppointmentWidth(item, position[j], isRecurring);\r\n                var resultWidth = width;\r\n                var appointmentReduced = null;\r\n                var multiWeekAppointmentParts = [];\r\n                var initialRowIndex = position[j].rowIndex;\r\n                var initialCellIndex = position[j].cellIndex;\r\n                if (this._needVerifyItemSize() || allDay) {\r\n                    var currentMaxAllowedPosition = position[j].hMax;\r\n                    if (this.isAppointmentGreaterThan(currentMaxAllowedPosition, {\r\n                            left: position[j].left,\r\n                            width: width\r\n                        })) {\r\n                        appointmentReduced = \"head\";\r\n                        initialRowIndex = position[j].rowIndex;\r\n                        initialCellIndex = position[j].cellIndex;\r\n                        resultWidth = this._reduceMultiWeekAppointment(width, {\r\n                            left: position[j].left,\r\n                            right: currentMaxAllowedPosition\r\n                        });\r\n                        multiWeekAppointmentParts = this._getAppointmentParts({\r\n                            sourceAppointmentWidth: width,\r\n                            reducedWidth: resultWidth,\r\n                            height: height\r\n                        }, position[j], startDate);\r\n                        if (this._isRtl()) {\r\n                            position[j].left = currentMaxAllowedPosition\r\n                        }\r\n                    }\r\n                }(0, _extend.extend)(position[j], {\r\n                    height: height,\r\n                    width: resultWidth,\r\n                    allDay: allDay,\r\n                    rowIndex: initialRowIndex,\r\n                    cellIndex: initialCellIndex,\r\n                    appointmentReduced: appointmentReduced,\r\n                    originalAppointmentStartDate: this.startDate(item, true),\r\n                    originalAppointmentEndDate: this.endDate(item),\r\n                    endDate: this.endDate(item, position[j], isRecurring)\r\n                });\r\n                result = this._getAppointmentPartsPosition(multiWeekAppointmentParts, position[j], result)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentPartsPosition\",\r\n        value: function(appointmentParts, position, result) {\r\n            if (appointmentParts.length) {\r\n                appointmentParts.unshift(position);\r\n                result = result.concat(appointmentParts)\r\n            } else {\r\n                result.push(position)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentCoordinates\",\r\n        value: function(itemData) {\r\n            return this.instance.fire(\"needCoordinates\", {\r\n                startDate: this.startDate(itemData),\r\n                originalStartDate: this.startDate(itemData, true),\r\n                appointmentData: itemData\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_isRtl\",\r\n        value: function() {\r\n            return this.instance.option(\"rtlEnabled\")\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentParts\",\r\n        value: function() {\r\n            return []\r\n        }\r\n    }, {\r\n        key: \"_getCompactAppointmentParts\",\r\n        value: function(appointmentWidth) {\r\n            var cellWidth = this.getDefaultCellWidth() || this.getAppointmentMinSize();\r\n            return Math.round(appointmentWidth / cellWidth)\r\n        }\r\n    }, {\r\n        key: \"_reduceMultiWeekAppointment\",\r\n        value: function(sourceAppointmentWidth, bound) {\r\n            if (this._isRtl()) {\r\n                sourceAppointmentWidth = Math.floor(bound.left - bound.right)\r\n            } else {\r\n                sourceAppointmentWidth = bound.right - Math.floor(bound.left)\r\n            }\r\n            return sourceAppointmentWidth\r\n        }\r\n    }, {\r\n        key: \"calculateAppointmentHeight\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"calculateAppointmentWidth\",\r\n        value: function() {\r\n            return 0\r\n        }\r\n    }, {\r\n        key: \"isAppointmentGreaterThan\",\r\n        value: function(etalon, comparisonParameters) {\r\n            var result = comparisonParameters.left + comparisonParameters.width - etalon;\r\n            if (this._isRtl()) {\r\n                result = etalon + comparisonParameters.width - comparisonParameters.left\r\n            }\r\n            return result > this.getDefaultCellWidth() / 2\r\n        }\r\n    }, {\r\n        key: \"isAllDay\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"cropAppointmentWidth\",\r\n        value: function(width, cellWidth) {\r\n            if (this.instance.fire(\"isGroupedByDate\")) {\r\n                width = cellWidth\r\n            }\r\n            return width\r\n        }\r\n    }, {\r\n        key: \"_getSortedPositions\",\r\n        value: function(positionList) {\r\n            var _this = this;\r\n            var result = [];\r\n            var round = function(value) {\r\n                return Math.round(100 * value) / 100\r\n            };\r\n            var createItem = function(rowIndex, cellIndex, top, left, bottom, right, position, allDay) {\r\n                return {\r\n                    i: rowIndex,\r\n                    j: cellIndex,\r\n                    top: round(top),\r\n                    left: round(left),\r\n                    bottom: round(bottom),\r\n                    right: round(right),\r\n                    cellPosition: position,\r\n                    allDay: allDay\r\n                }\r\n            };\r\n            for (var rowIndex = 0, rowCount = positionList.length; rowIndex < rowCount; rowIndex++) {\r\n                for (var cellIndex = 0, cellCount = positionList[rowIndex].length; cellIndex < cellCount; cellIndex++) {\r\n                    var _positionList$rowInde = positionList[rowIndex][cellIndex],\r\n                        top = _positionList$rowInde.top,\r\n                        left = _positionList$rowInde.left,\r\n                        height = _positionList$rowInde.height,\r\n                        width = _positionList$rowInde.width,\r\n                        cellPosition = _positionList$rowInde.cellPosition,\r\n                        allDay = _positionList$rowInde.allDay;\r\n                    result.push(createItem(rowIndex, cellIndex, top, left, top + height, left + width, cellPosition, allDay))\r\n                }\r\n            }\r\n            return result.sort(function(a, b) {\r\n                return _this._sortCondition(a, b)\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_sortCondition\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getConditions\",\r\n        value: function(a, b) {\r\n            var isSomeEdge = this._isSomeEdge(a, b);\r\n            return {\r\n                columnCondition: isSomeEdge || this._normalizeCondition(a.left, b.left),\r\n                rowCondition: isSomeEdge || this._normalizeCondition(a.top, b.top),\r\n                cellPositionCondition: isSomeEdge || this._normalizeCondition(a.cellPosition, b.cellPosition)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_rowCondition\",\r\n        value: function(a, b) {\r\n            var conditions = this._getConditions(a, b);\r\n            return conditions.columnCondition || conditions.rowCondition\r\n        }\r\n    }, {\r\n        key: \"_columnCondition\",\r\n        value: function(a, b) {\r\n            var conditions = this._getConditions(a, b);\r\n            return conditions.rowCondition || conditions.columnCondition\r\n        }\r\n    }, {\r\n        key: \"_isSomeEdge\",\r\n        value: function(a, b) {\r\n            return a.i === b.i && a.j === b.j\r\n        }\r\n    }, {\r\n        key: \"_normalizeCondition\",\r\n        value: function(first, second) {\r\n            var result = first - second;\r\n            return Math.abs(result) > 1 ? result : 0\r\n        }\r\n    }, {\r\n        key: \"_isItemsCross\",\r\n        value: function(firstItem, secondItem) {\r\n            var areItemsInTheSameTable = !!firstItem.allDay === !!secondItem.allDay;\r\n            var areItemsAllDay = firstItem.allDay && secondItem.allDay;\r\n            if (areItemsInTheSameTable) {\r\n                var orientation = this._getOrientation(areItemsAllDay);\r\n                return this._checkItemsCrossing(firstItem, secondItem, orientation)\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_checkItemsCrossing\",\r\n        value: function(firstItem, secondItem, orientation) {\r\n            var firstItemSide_1 = Math.floor(firstItem[orientation[0]]);\r\n            var firstItemSide_2 = Math.floor(firstItem[orientation[1]]);\r\n            var secondItemSide_1 = Math.ceil(secondItem[orientation[0]]);\r\n            var secondItemSide_2 = Math.ceil(secondItem[orientation[1]]);\r\n            var isItemCross = Math.abs(firstItem[orientation[2]] - secondItem[orientation[2]]) <= 1;\r\n            return isItemCross && (firstItemSide_1 <= secondItemSide_1 && firstItemSide_2 > secondItemSide_1 || firstItemSide_1 < secondItemSide_2 && firstItemSide_2 >= secondItemSide_2 || firstItemSide_1 === secondItemSide_1 && firstItemSide_2 === secondItemSide_2)\r\n        }\r\n    }, {\r\n        key: \"_getOrientation\",\r\n        value: function(isAllDay) {\r\n            return isAllDay ? [\"left\", \"right\", \"top\"] : [\"top\", \"bottom\", \"left\"]\r\n        }\r\n    }, {\r\n        key: \"_getResultPositions\",\r\n        value: function(sortedArray) {\r\n            var _this2 = this;\r\n            var result = [];\r\n            var i;\r\n            var sortedIndex = 0;\r\n            var currentItem;\r\n            var indexes;\r\n            var itemIndex;\r\n            var maxIndexInStack = 0;\r\n            var stack = {};\r\n            var findFreeIndex = function findFreeIndex(indexes, index) {\r\n                var isFind = indexes.some(function(item) {\r\n                    return item === index\r\n                });\r\n                if (isFind) {\r\n                    return findFreeIndex(indexes, ++index)\r\n                } else {\r\n                    return index\r\n                }\r\n            };\r\n            var createItem = function(currentItem, index) {\r\n                var currentIndex = index || 0;\r\n                return {\r\n                    index: currentIndex,\r\n                    i: currentItem.i,\r\n                    j: currentItem.j,\r\n                    left: currentItem.left,\r\n                    right: currentItem.right,\r\n                    top: currentItem.top,\r\n                    bottom: currentItem.bottom,\r\n                    allDay: currentItem.allDay,\r\n                    sortedIndex: _this2._skipSortedIndex(currentIndex) ? null : sortedIndex++\r\n                }\r\n            };\r\n            var startNewStack = function(currentItem) {\r\n                stack.items = [createItem(currentItem)];\r\n                stack.left = currentItem.left;\r\n                stack.right = currentItem.right;\r\n                stack.top = currentItem.top;\r\n                stack.bottom = currentItem.bottom;\r\n                stack.allDay = currentItem.allDay\r\n            };\r\n            var pushItemsInResult = function(items) {\r\n                items.forEach(function(item) {\r\n                    result.push({\r\n                        index: item.index,\r\n                        count: maxIndexInStack + 1,\r\n                        i: item.i,\r\n                        j: item.j,\r\n                        sortedIndex: item.sortedIndex\r\n                    })\r\n                })\r\n            };\r\n            for (i = 0; i < sortedArray.length; i++) {\r\n                currentItem = sortedArray[i];\r\n                indexes = [];\r\n                if (!stack.items) {\r\n                    startNewStack(currentItem)\r\n                } else {\r\n                    if (this._isItemsCross(stack, currentItem)) {\r\n                        stack.items.forEach(function(item, index) {\r\n                            if (_this2._isItemsCross(item, currentItem)) {\r\n                                indexes.push(item.index)\r\n                            }\r\n                        });\r\n                        itemIndex = indexes.length ? findFreeIndex(indexes, 0) : 0;\r\n                        stack.items.push(createItem(currentItem, itemIndex));\r\n                        maxIndexInStack = Math.max(itemIndex, maxIndexInStack);\r\n                        stack.left = Math.min(stack.left, currentItem.left);\r\n                        stack.right = Math.max(stack.right, currentItem.right);\r\n                        stack.top = Math.min(stack.top, currentItem.top);\r\n                        stack.bottom = Math.max(stack.bottom, currentItem.bottom);\r\n                        stack.allDay = currentItem.allDay\r\n                    } else {\r\n                        pushItemsInResult(stack.items);\r\n                        stack = {};\r\n                        startNewStack(currentItem);\r\n                        maxIndexInStack = 0\r\n                    }\r\n                }\r\n            }\r\n            if (stack.items) {\r\n                pushItemsInResult(stack.items)\r\n            }\r\n            return result.sort(function(a, b) {\r\n                var columnCondition = a.j - b.j;\r\n                var rowCondition = a.i - b.i;\r\n                return rowCondition ? rowCondition : columnCondition\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_skipSortedIndex\",\r\n        value: function(index) {\r\n            return index > this._getMaxAppointmentCountPerCell() - 1\r\n        }\r\n    }, {\r\n        key: \"_findIndexByKey\",\r\n        value: function(arr, iKey, jKey, iValue, jValue) {\r\n            var result = 0;\r\n            for (var i = 0, len = arr.length; i < len; i++) {\r\n                if (arr[i][iKey] === iValue && arr[i][jKey] === jValue) {\r\n                    result = i;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_getExtendedPositionMap\",\r\n        value: function(map, positions) {\r\n            var positionCounter = 0;\r\n            var result = [];\r\n            for (var i = 0, mapLength = map.length; i < mapLength; i++) {\r\n                var resultString = [];\r\n                for (var j = 0, itemLength = map[i].length; j < itemLength; j++) {\r\n                    map[i][j].index = positions[positionCounter].index;\r\n                    map[i][j].sortedIndex = positions[positionCounter].sortedIndex;\r\n                    map[i][j].count = positions[positionCounter++].count;\r\n                    resultString.push(map[i][j]);\r\n                    this._checkLongCompactAppointment(map[i][j], resultString)\r\n                }\r\n                result.push(resultString)\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_checkLongCompactAppointment\",\r\n        value: function(item, result) {\r\n            this._splitLongCompactAppointment(item, result);\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"_splitLongCompactAppointment\",\r\n        value: function(item, result) {\r\n            var appointmentCountPerCell = this._getMaxAppointmentCountPerCellByType(item.allDay);\r\n            var compactCount = 0;\r\n            if (void 0 !== appointmentCountPerCell && item.index > appointmentCountPerCell - 1) {\r\n                item.isCompact = true;\r\n                compactCount = this._getCompactAppointmentParts(item.width);\r\n                for (var k = 1; k < compactCount; k++) {\r\n                    var compactPart = (0, _extend.extend)(true, {}, item);\r\n                    compactPart.left = this._getCompactLeftCoordinate(item.left, k);\r\n                    compactPart.cellIndex = compactPart.cellIndex + k;\r\n                    compactPart.sortedIndex = null;\r\n                    result.push(compactPart)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    }, {\r\n        key: \"startDate\",\r\n        value: function startDate(appointment, skipNormalize, position) {\r\n            var startDate = position && position.startDate;\r\n            var rangeStartDate = this.instance._getStartDate(appointment, skipNormalize);\r\n            var text = this.instance.fire(\"getField\", \"text\", appointment);\r\n            if (startDate && rangeStartDate > startDate || !startDate) {\r\n                startDate = rangeStartDate\r\n            }\r\n            if (isNaN(startDate.getTime())) {\r\n                throw _ui2.default.Error(\"E1032\", text)\r\n            }\r\n            return startDate\r\n        }\r\n    }, {\r\n        key: \"endDate\",\r\n        value: function endDate(appointment, position, isRecurring) {\r\n            var ignoreViewDates = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;\r\n            var endDate = this.instance._getEndDate(appointment, ignoreViewDates);\r\n            var realStartDate = this.startDate(appointment, true);\r\n            var viewStartDate = this.startDate(appointment, false, position);\r\n            if (viewStartDate.getTime() > endDate.getTime() || isRecurring) {\r\n                var recurrencePartStartDate = position ? position.initialStartDate || position.startDate : realStartDate;\r\n                var recurrencePartCroppedByViewStartDate = position ? position.startDate : realStartDate;\r\n                var fullDuration = viewStartDate.getTime() > endDate.getTime() ? this.instance.fire(\"getField\", \"endDate\", appointment).getTime() - this.instance.fire(\"getField\", \"startDate\", appointment).getTime() : endDate.getTime() - realStartDate.getTime();\r\n                fullDuration = this._adjustDurationByDaylightDiff(fullDuration, realStartDate, endDate);\r\n                endDate = new Date(viewStartDate.getTime() >= recurrencePartStartDate.getTime() ? recurrencePartStartDate.getTime() : viewStartDate.getTime());\r\n                if (isRecurring) {\r\n                    endDate = new Date(endDate.getTime() + fullDuration)\r\n                }\r\n                if (!_date2.default.sameDate(realStartDate, endDate) && recurrencePartCroppedByViewStartDate.getTime() < viewStartDate.getTime()) {\r\n                    var headDuration = _date2.default.trimTime(endDate).getTime() - recurrencePartCroppedByViewStartDate.getTime();\r\n                    var tailDuration = fullDuration - headDuration || fullDuration;\r\n                    endDate = new Date(_date2.default.trimTime(viewStartDate).getTime() + tailDuration)\r\n                }\r\n            }\r\n            if (!this.isAllDay(appointment)) {\r\n                var viewEndDate = _date2.default.roundToHour(this.instance.fire(\"getEndViewDate\"));\r\n                if (endDate > viewEndDate) {\r\n                    endDate = viewEndDate\r\n                }\r\n            }\r\n            var currentViewEndTime = new Date(new Date(endDate).setHours(this.instance.option(\"endDayHour\"), 0, 0));\r\n            if (endDate.getTime() > currentViewEndTime.getTime()) {\r\n                endDate = currentViewEndTime\r\n            }\r\n            return endDate\r\n        }\r\n    }, {\r\n        key: \"_adjustDurationByDaylightDiff\",\r\n        value: function(duration, startDate, endDate) {\r\n            var daylightDiff = _utils2.default.getDaylightOffset(startDate, endDate);\r\n            return this._needAdjustDuration(daylightDiff) ? this._calculateDurationByDaylightDiff(duration, daylightDiff) : duration\r\n        }\r\n    }, {\r\n        key: \"_needAdjustDuration\",\r\n        value: function(diff) {\r\n            return 0 !== diff\r\n        }\r\n    }, {\r\n        key: \"_calculateDurationByDaylightDiff\",\r\n        value: function(duration, diff) {\r\n            return duration + diff * toMs(\"minute\")\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDurationInMs\",\r\n        value: function(startDate, endDate, allDay) {\r\n            return this.instance.fire(\"getAppointmentDurationInMs\", {\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                allDay: allDay\r\n            })\r\n        }\r\n    }, {\r\n        key: \"_markAppointmentAsVirtual\",\r\n        value: function(coordinates, isAllDay) {\r\n            var countFullWidthAppointmentInCell = this._getMaxAppointmentCountPerCellByType(isAllDay);\r\n            if (coordinates.count - countFullWidthAppointmentInCell > 0) {\r\n                coordinates.virtual = {\r\n                    top: coordinates.top,\r\n                    left: coordinates.left,\r\n                    index: \"tail\" === coordinates.appointmentReduced ? coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex : coordinates.groupIndex + \"-\" + coordinates.rowIndex + \"-\" + coordinates.cellIndex + \"-tail\",\r\n                    isAllDay: isAllDay\r\n                }\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getMaxAppointmentCountPerCellByType\",\r\n        value: function(isAllDay) {\r\n            var appointmentCountPerCell = this._getMaxAppointmentCountPerCell();\r\n            if (_type2.default.isObject(appointmentCountPerCell)) {\r\n                return isAllDay ? this._getMaxAppointmentCountPerCell().allDay : this._getMaxAppointmentCountPerCell().simple\r\n            } else {\r\n                return appointmentCountPerCell\r\n            }\r\n        }\r\n    }, {\r\n        key: \"getDropDownAppointmentWidth\",\r\n        value: function(intervalCount, isAllDay) {\r\n            return this.getPositioningStrategy().getDropDownAppointmentWidth(intervalCount, isAllDay)\r\n        }\r\n    }, {\r\n        key: \"getDropDownAppointmentHeight\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getDropDownAppointmentHeight()\r\n        }\r\n    }, {\r\n        key: \"getDropDownButtonAdaptiveSize\",\r\n        value: function() {\r\n            return DROP_DOWN_BUTTON_ADAPTIVE_SIZE\r\n        }\r\n    }, {\r\n        key: \"getDefaultCellWidth\",\r\n        value: function() {\r\n            return this._defaultWidth\r\n        }\r\n    }, {\r\n        key: \"getDefaultCellHeight\",\r\n        value: function() {\r\n            return this._defaultHeight\r\n        }\r\n    }, {\r\n        key: \"getDefaultAllDayCellHeight\",\r\n        value: function() {\r\n            return this._allDayHeight\r\n        }\r\n    }, {\r\n        key: \"getCollectorTopOffset\",\r\n        value: function(allDay) {\r\n            return this.getPositioningStrategy().getCollectorTopOffset(allDay)\r\n        }\r\n    }, {\r\n        key: \"getCollectorLeftOffset\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getCollectorLeftOffset()\r\n        }\r\n    }, {\r\n        key: \"getAppointmentDataCalculator\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_customizeCoordinates\",\r\n        value: function(coordinates, height, appointmentCountPerCell, topOffset, isAllDay) {\r\n            var index = coordinates.index;\r\n            var appointmentHeight = height / appointmentCountPerCell;\r\n            var appointmentTop = coordinates.top + index * appointmentHeight;\r\n            var top = appointmentTop + topOffset;\r\n            var width = coordinates.width;\r\n            var left = coordinates.left;\r\n            if (coordinates.isCompact) {\r\n                this._isAdaptive() && this._correctCollectorCoordinatesInAdaptive(coordinates, isAllDay);\r\n                this._markAppointmentAsVirtual(coordinates, isAllDay)\r\n            }\r\n            return {\r\n                height: appointmentHeight,\r\n                width: width,\r\n                top: top,\r\n                left: left,\r\n                empty: this._isAppointmentEmpty(height, width)\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_isAppointmentEmpty\",\r\n        value: function(height, width) {\r\n            return height < this._getAppointmentMinHeight() || width < this._getAppointmentMinWidth()\r\n        }\r\n    }, {\r\n        key: \"_calculateGeometryConfig\",\r\n        value: function(coordinates) {\r\n            var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\r\n            var offsets = this._getOffsets();\r\n            var appointmentDefaultOffset = this._getAppointmentDefaultOffset();\r\n            var appointmentCountPerCell = this._getAppointmentCount(overlappingMode, coordinates);\r\n            var ratio = this._getDefaultRatio(coordinates, appointmentCountPerCell);\r\n            var maxHeight = this._getMaxHeight();\r\n            if (!(0, _type.isNumeric)(appointmentCountPerCell)) {\r\n                appointmentCountPerCell = coordinates.count;\r\n                ratio = (maxHeight - offsets.unlimited) / maxHeight\r\n            }\r\n            var topOffset = (1 - ratio) * maxHeight;\r\n            if (\"auto\" === overlappingMode || (0, _type.isNumeric)(overlappingMode)) {\r\n                ratio = 1;\r\n                maxHeight -= appointmentDefaultOffset;\r\n                topOffset = appointmentDefaultOffset\r\n            }\r\n            return {\r\n                height: ratio * maxHeight,\r\n                appointmentCountPerCell: appointmentCountPerCell,\r\n                offset: topOffset\r\n            }\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentCount\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getDefaultRatio\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getOffsets\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_getMaxHeight\",\r\n        value: function() {}\r\n    }, {\r\n        key: \"_needVerifyItemSize\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"needSeparateAppointment\",\r\n        value: function(allDay) {\r\n            return this.instance.fire(\"isGroupedByDate\") && allDay\r\n        }\r\n    }, {\r\n        key: \"_getMaxAppointmentCountPerCell\",\r\n        value: function() {\r\n            if (!this._maxAppointmentCountPerCell) {\r\n                var overlappingMode = this.instance.fire(\"getMaxAppointmentsPerCell\");\r\n                var appointmentCountPerCell;\r\n                if ((0, _type.isNumeric)(overlappingMode)) {\r\n                    appointmentCountPerCell = overlappingMode\r\n                }\r\n                if (\"auto\" === overlappingMode) {\r\n                    appointmentCountPerCell = this._getDynamicAppointmentCountPerCell()\r\n                }\r\n                if (\"unlimited\" === overlappingMode) {\r\n                    appointmentCountPerCell = void 0\r\n                }\r\n                this._maxAppointmentCountPerCell = appointmentCountPerCell\r\n            }\r\n            return this._maxAppointmentCountPerCell\r\n        }\r\n    }, {\r\n        key: \"_getDynamicAppointmentCountPerCell\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getDynamicAppointmentCountPerCell()\r\n        }\r\n    }, {\r\n        key: \"hasAllDayAppointments\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_isCompactTheme\",\r\n        value: function() {\r\n            return \"compact\" === (_themes2.default.current() || \"\").split(\".\").pop()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultOffset\",\r\n        value: function() {\r\n            return this.getPositioningStrategy().getAppointmentDefaultOffset()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultHeight\",\r\n        value: function() {\r\n            return this._getAppointmentHeightByTheme()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMinHeight\",\r\n        value: function() {\r\n            return this._getAppointmentDefaultHeight()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentHeightByTheme\",\r\n        value: function() {\r\n            return this._isCompactTheme() ? COMPACT_THEME_APPOINTMENT_DEFAULT_HEIGHT : APPOINTMENT_DEFAULT_HEIGHT\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentDefaultWidth\",\r\n        value: function() {\r\n            return this.getPositioningStrategy()._getAppointmentDefaultWidth()\r\n        }\r\n    }, {\r\n        key: \"_getAppointmentMinWidth\",\r\n        value: function() {\r\n            return this._getAppointmentDefaultWidth()\r\n        }\r\n    }, {\r\n        key: \"_needVerticalGroupBounds\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }, {\r\n        key: \"_needHorizontalGroupBounds\",\r\n        value: function() {\r\n            return false\r\n        }\r\n    }]);\r\n    return BaseRenderingStrategy\r\n}();\r\nmodule.exports = BaseRenderingStrategy;\r\n"]},"metadata":{},"sourceType":"script"}