{"ast":null,"code":"/**\r\n * DevExtreme (ui/html_editor/modules/toolbar.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _quill = require(\"quill\");\n\nvar _quill2 = _interopRequireDefault(_quill);\n\nvar _renderer = require(\"../../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _toolbar = require(\"../../toolbar\");\n\nvar _toolbar2 = _interopRequireDefault(_toolbar);\n\nrequire(\"../../select_box\");\n\nrequire(\"../../color_box/color_view\");\n\nvar _widget_collector = require(\"./widget_collector\");\n\nvar _widget_collector2 = _interopRequireDefault(_widget_collector);\n\nvar _iterator = require(\"../../../core/utils/iterator\");\n\nvar _type = require(\"../../../core/utils/type\");\n\nvar _extend = require(\"../../../core/utils/extend\");\n\nvar _message = require(\"../../../localization/message\");\n\nvar _inflector = require(\"../../../core/utils/inflector\");\n\nvar _events_engine = require(\"../../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _utils = require(\"../../../events/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) {\n    return;\n  }\n\n  if (\"string\" === typeof o) {\n    return _arrayLikeToArray(o, minLen);\n  }\n\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n\n  if (\"Object\" === n && o.constructor) {\n    n = o.constructor.name;\n  }\n\n  if (\"Map\" === n || \"Set\" === n) {\n    return Array.from(o);\n  }\n\n  if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\n    return _arrayLikeToArray(o, minLen);\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\n    return Array.from(iter);\n  }\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    return _arrayLikeToArray(arr);\n  }\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (null == len || len > arr.length) {\n    len = arr.length;\n  }\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (\"function\" !== typeof superClass && null !== superClass) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    _setPrototypeOf(subClass, superClass);\n  }\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function (o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var result,\n        Super = _getPrototypeOf(Derived);\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (void 0 === self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (\"undefined\" === typeof Reflect || !Reflect.construct) {\n    return false;\n  }\n\n  if (Reflect.construct.sham) {\n    return false;\n  }\n\n  if (\"function\" === typeof Proxy) {\n    return true;\n  }\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar ToolbarModule = {};\n\nif (_quill2.default) {\n  var BaseModule = _quill2.default.import(\"core/module\");\n\n  var TOOLBAR_WRAPPER_CLASS = \"dx-htmleditor-toolbar-wrapper\";\n  var TOOLBAR_CLASS = \"dx-htmleditor-toolbar\";\n  var TOOLBAR_FORMAT_WIDGET_CLASS = \"dx-htmleditor-toolbar-format\";\n  var TOOLBAR_SEPARATOR_CLASS = \"dx-htmleditor-toolbar-separator\";\n  var TOOLBAR_MENU_SEPARATOR_CLASS = \"dx-htmleditor-toolbar-menu-separator\";\n  var ACTIVE_FORMAT_CLASS = \"dx-format-active\";\n  var BOX_ITEM_CONTENT_CLASS = \"dx-box-item-content\";\n  var ICON_CLASS = \"dx-icon\";\n  var SELECTION_CHANGE_EVENT = \"selection-change\";\n  var DIALOG_COLOR_CAPTION = \"dxHtmlEditor-dialogColorCaption\";\n  var DIALOG_BACKGROUND_CAPTION = \"dxHtmlEditor-dialogBackgroundCaption\";\n  var DIALOG_LINK_CAPTION = \"dxHtmlEditor-dialogLinkCaption\";\n  var DIALOG_LINK_FIELD_URL = \"dxHtmlEditor-dialogLinkUrlField\";\n  var DIALOG_LINK_FIELD_TEXT = \"dxHtmlEditor-dialogLinkTextField\";\n  var DIALOG_LINK_FIELD_TARGET = \"dxHtmlEditor-dialogLinkTargetField\";\n  var DIALOG_LINK_FIELD_TARGET_CLASS = \"dx-formdialog-field-target\";\n  var DIALOG_IMAGE_CAPTION = \"dxHtmlEditor-dialogImageCaption\";\n  var DIALOG_IMAGE_FIELD_URL = \"dxHtmlEditor-dialogImageUrlField\";\n  var DIALOG_IMAGE_FIELD_ALT = \"dxHtmlEditor-dialogImageAltField\";\n  var DIALOG_IMAGE_FIELD_WIDTH = \"dxHtmlEditor-dialogImageWidthField\";\n  var DIALOG_IMAGE_FIELD_HEIGHT = \"dxHtmlEditor-dialogImageHeightField\";\n  var USER_ACTION = \"user\";\n  var SILENT_ACTION = \"silent\";\n  var HEADING_TEXT = (0, _message.format)(\"dxHtmlEditor-heading\");\n  var NORMAL_TEXT = (0, _message.format)(\"dxHtmlEditor-normalText\");\n\n  ToolbarModule = function (_BaseModule) {\n    _inherits(ToolbarModule, _BaseModule);\n\n    var _super = _createSuper(ToolbarModule);\n\n    function ToolbarModule(quill, options) {\n      var _this;\n\n      _classCallCheck(this, ToolbarModule);\n\n      _this = _super.call(this, quill, options);\n      _this._editorInstance = options.editorInstance;\n      _this._toolbarWidgets = new _widget_collector2.default();\n      _this._formatHandlers = _this._getFormatHandlers();\n\n      if ((0, _type.isDefined)(options.items)) {\n        _this._addCallbacks();\n\n        _this._renderToolbar();\n\n        _this.quill.on(\"editor-change\", function (eventName) {\n          var isSelectionChanged = eventName === SELECTION_CHANGE_EVENT;\n\n          _this._updateToolbar(isSelectionChanged);\n        });\n      }\n\n      return _this;\n    }\n\n    _createClass(ToolbarModule, [{\n      key: \"_applyFormat\",\n      value: function (formatArgs, event) {\n        var _this$quill;\n\n        this._editorInstance._saveValueChangeEvent(event);\n\n        (_this$quill = this.quill).format.apply(_this$quill, _toConsumableArray(formatArgs));\n      }\n    }, {\n      key: \"_addCallbacks\",\n      value: function () {\n        this._editorInstance.addCleanCallback(this.clean.bind(this));\n\n        this._editorInstance.addContentInitializedCallback(this.updateHistoryWidgets.bind(this));\n      }\n    }, {\n      key: \"_updateToolbar\",\n      value: function (isSelectionChanged) {\n        this.updateFormatWidgets(isSelectionChanged);\n        this.updateHistoryWidgets();\n      }\n    }, {\n      key: \"_getDefaultClickHandler\",\n      value: function (formatName) {\n        var _this2 = this;\n\n        return function (_ref) {\n          var event = _ref.event;\n\n          var formats = _this2.quill.getFormat();\n\n          var value = formats[formatName];\n          var newValue = !((0, _type.isBoolean)(value) ? value : (0, _type.isDefined)(value));\n\n          _this2._applyFormat([formatName, newValue, USER_ACTION], event);\n\n          _this2._updateFormatWidget(formatName, newValue, formats);\n        };\n      }\n    }, {\n      key: \"_updateFormatWidget\",\n      value: function (formatName, isApplied, formats) {\n        var widget = this._toolbarWidgets.getByName(formatName);\n\n        if (!widget) {\n          return;\n        }\n\n        if (isApplied) {\n          this._markActiveFormatWidget(formatName, widget, formats);\n        } else {\n          this._resetFormatWidget(formatName, widget);\n\n          if (Object.prototype.hasOwnProperty.call(formatName)) {\n            delete formats[formatName];\n          }\n        }\n\n        this._toggleClearFormatting(isApplied || !(0, _type.isEmptyObject)(formats));\n      }\n    }, {\n      key: \"_getFormatHandlers\",\n      value: function () {\n        var _this3 = this;\n\n        return {\n          clear: function (e) {\n            var range = _this3.quill.getSelection();\n\n            if (range) {\n              _this3.quill.removeFormat(range);\n\n              _this3.updateFormatWidgets();\n            }\n          },\n          link: this._prepareLinkHandler(),\n          image: this._prepareImageHandler(),\n          color: this._prepareColorClickHandler(\"color\"),\n          background: this._prepareColorClickHandler(\"background\"),\n          orderedList: this._prepareShortcutHandler(\"list\", \"ordered\"),\n          bulletList: this._prepareShortcutHandler(\"list\", \"bullet\"),\n          alignLeft: this._prepareShortcutHandler(\"align\", \"left\"),\n          alignCenter: this._prepareShortcutHandler(\"align\", \"center\"),\n          alignRight: this._prepareShortcutHandler(\"align\", \"right\"),\n          alignJustify: this._prepareShortcutHandler(\"align\", \"justify\"),\n          codeBlock: this._getDefaultClickHandler(\"code-block\"),\n          undo: function (_ref2) {\n            var event = _ref2.event;\n\n            _this3._editorInstance._saveValueChangeEvent(event);\n\n            _this3.quill.history.undo();\n          },\n          redo: function (_ref3) {\n            var event = _ref3.event;\n\n            _this3._editorInstance._saveValueChangeEvent(event);\n\n            _this3.quill.history.redo();\n          },\n          increaseIndent: function (_ref4) {\n            var event = _ref4.event;\n\n            _this3._applyFormat([\"indent\", \"+1\", USER_ACTION], event);\n          },\n          decreaseIndent: function (_ref5) {\n            var event = _ref5.event;\n\n            _this3._applyFormat([\"indent\", \"-1\", USER_ACTION], event);\n          },\n          superscript: this._prepareShortcutHandler(\"script\", \"super\"),\n          subscript: this._prepareShortcutHandler(\"script\", \"sub\")\n        };\n      }\n    }, {\n      key: \"_prepareShortcutHandler\",\n      value: function (formatName, shortcutValue) {\n        var _this4 = this;\n\n        return function (_ref6) {\n          var event = _ref6.event;\n\n          var formats = _this4.quill.getFormat();\n\n          var value = formats[formatName] === shortcutValue ? false : shortcutValue;\n\n          _this4._applyFormat([formatName, value, USER_ACTION], event);\n\n          _this4.updateFormatWidgets(true);\n        };\n      }\n    }, {\n      key: \"_prepareLinkHandler\",\n      value: function () {\n        var _this5 = this;\n\n        return function () {\n          _this5.quill.focus();\n\n          var selection = _this5.quill.getSelection();\n\n          var hasEmbedContent = _this5._hasEmbedContent(selection);\n\n          var formats = selection ? _this5.quill.getFormat() : {};\n          var formData = {\n            href: formats.link || \"\",\n            text: selection && !hasEmbedContent ? _this5.quill.getText(selection) : \"\",\n            target: Object.prototype.hasOwnProperty.call(formats, \"target\") ? !!formats.target : true\n          };\n\n          _this5._editorInstance.formDialogOption(\"title\", (0, _message.format)(DIALOG_LINK_CAPTION));\n\n          var promise = _this5._editorInstance.showFormDialog({\n            formData: formData,\n            items: _this5._getLinkFormItems(selection)\n          });\n\n          promise.done(function (formData, event) {\n            if (selection && !hasEmbedContent) {\n              var text = formData.text || formData.href;\n              var index = selection.index,\n                  length = selection.length;\n              formData.text = void 0;\n\n              _this5._editorInstance._saveValueChangeEvent(event);\n\n              length && _this5.quill.deleteText(index, length, SILENT_ACTION);\n\n              _this5.quill.insertText(index, text, \"link\", formData, USER_ACTION);\n\n              _this5.quill.setSelection(index + text.length, 0, USER_ACTION);\n            } else {\n              formData.text = !selection && !formData.text ? formData.href : formData.text;\n\n              _this5._applyFormat([\"link\", formData, USER_ACTION], event);\n            }\n          });\n          promise.fail(function () {\n            _this5.quill.focus();\n          });\n        };\n      }\n    }, {\n      key: \"_hasEmbedContent\",\n      value: function (selection) {\n        return !!selection && this.quill.getText(selection).trim().length < selection.length;\n      }\n    }, {\n      key: \"_getLinkFormItems\",\n      value: function (selection) {\n        return [{\n          dataField: \"href\",\n          label: {\n            text: (0, _message.format)(DIALOG_LINK_FIELD_URL)\n          }\n        }, {\n          dataField: \"text\",\n          label: {\n            text: (0, _message.format)(DIALOG_LINK_FIELD_TEXT)\n          },\n          visible: !this._hasEmbedContent(selection)\n        }, {\n          dataField: \"target\",\n          editorType: \"dxCheckBox\",\n          editorOptions: {\n            text: (0, _message.format)(DIALOG_LINK_FIELD_TARGET)\n          },\n          cssClass: DIALOG_LINK_FIELD_TARGET_CLASS,\n          label: {\n            visible: false\n          }\n        }];\n      }\n    }, {\n      key: \"_prepareImageHandler\",\n      value: function () {\n        var _this6 = this;\n\n        return function () {\n          var formData = _this6.quill.getFormat();\n\n          var isUpdateDialog = Object.prototype.hasOwnProperty.call(formData, \"imageSrc\");\n          var defaultIndex = _this6._defaultPasteIndex;\n\n          if (isUpdateDialog) {\n            var _this6$quill$getForma = _this6.quill.getFormat(defaultIndex - 1, 1),\n                imageSrc = _this6$quill$getForma.imageSrc;\n\n            formData.src = formData.imageSrc;\n            delete formData.imageSrc;\n\n            if (!imageSrc || 0 === defaultIndex) {\n              _this6.quill.setSelection(defaultIndex + 1, 0, SILENT_ACTION);\n            }\n          }\n\n          var formatIndex = _this6._embedFormatIndex;\n\n          _this6._editorInstance.formDialogOption(\"title\", (0, _message.format)(DIALOG_IMAGE_CAPTION));\n\n          var promise = _this6._editorInstance.showFormDialog({\n            formData: formData,\n            items: _this6._imageFormItems\n          });\n\n          promise.done(function (formData, event) {\n            var index = defaultIndex;\n\n            _this6._editorInstance._saveValueChangeEvent(event);\n\n            if (isUpdateDialog) {\n              index = formatIndex;\n\n              _this6.quill.deleteText(index, 1, SILENT_ACTION);\n            }\n\n            _this6.quill.insertEmbed(index, \"extendedImage\", formData, USER_ACTION);\n\n            _this6.quill.setSelection(index + 1, 0, USER_ACTION);\n          }).always(function () {\n            _this6.quill.focus();\n          });\n        };\n      }\n    }, {\n      key: \"_renderToolbar\",\n      value: function () {\n        var _this7 = this;\n\n        var container = this.options.container || this._getContainer();\n\n        this._$toolbar = (0, _renderer2.default)(\"<div>\").addClass(TOOLBAR_CLASS).appendTo(container);\n        this._$toolbarContainer = (0, _renderer2.default)(container).addClass(TOOLBAR_WRAPPER_CLASS);\n\n        _events_engine2.default.on(this._$toolbarContainer, (0, _utils.addNamespace)(\"mousedown\", this._editorInstance.NAME), function (e) {\n          e.preventDefault();\n        });\n\n        this.toolbarInstance = this._editorInstance._createComponent(this._$toolbar, _toolbar2.default, this.toolbarConfig);\n\n        this._editorInstance.on(\"optionChanged\", function (_ref7) {\n          var name = _ref7.name;\n\n          if (\"readOnly\" === name || \"disabled\" === name) {\n            _this7.toolbarInstance.option(\"disabled\", _this7.isInteractionDisabled);\n          }\n        });\n      }\n    }, {\n      key: \"isMultilineMode\",\n      value: function () {\n        var _this$options$multili;\n\n        return null !== (_this$options$multili = this.options.multiline) && void 0 !== _this$options$multili ? _this$options$multili : true;\n      }\n    }, {\n      key: \"clean\",\n      value: function () {\n        this._toolbarWidgets.clear();\n\n        if (this._$toolbarContainer) {\n          this._$toolbarContainer.empty().removeClass(TOOLBAR_WRAPPER_CLASS);\n        }\n      }\n    }, {\n      key: \"repaint\",\n      value: function () {\n        this.toolbarInstance && this.toolbarInstance.repaint();\n      }\n    }, {\n      key: \"_getContainer\",\n      value: function () {\n        var $container = (0, _renderer2.default)(\"<div>\");\n\n        this._editorInstance.$element().prepend($container);\n\n        return $container;\n      }\n    }, {\n      key: \"_prepareToolbarItems\",\n      value: function () {\n        var _this8 = this;\n\n        var resultItems = [];\n        (0, _iterator.each)(this.options.items, function (index, item) {\n          var newItem;\n\n          if ((0, _type.isObject)(item)) {\n            newItem = _this8._handleObjectItem(item);\n          } else {\n            if ((0, _type.isString)(item)) {\n              var buttonItemConfig = _this8._prepareButtonItemConfig(item);\n\n              newItem = _this8._getToolbarItem(buttonItemConfig);\n            }\n          }\n\n          if (newItem) {\n            resultItems.push(newItem);\n          }\n        });\n        return resultItems;\n      }\n    }, {\n      key: \"_handleObjectItem\",\n      value: function (item) {\n        if (item.formatName && item.formatValues && this._isAcceptableItem(item.widget, \"dxSelectBox\")) {\n          var selectItemConfig = this._prepareSelectItemConfig(item);\n\n          return this._getToolbarItem(selectItemConfig);\n        } else {\n          if (item.formatName && this._isAcceptableItem(item.widget, \"dxButton\")) {\n            var defaultButtonItemConfig = this._prepareButtonItemConfig(item.formatName);\n\n            var buttonItemConfig = (0, _extend.extend)(true, defaultButtonItemConfig, item);\n            return this._getToolbarItem(buttonItemConfig);\n          } else {\n            return this._getToolbarItem(item);\n          }\n        }\n      }\n    }, {\n      key: \"_isAcceptableItem\",\n      value: function (widget, acceptableWidgetName) {\n        return !widget || widget === acceptableWidgetName;\n      }\n    }, {\n      key: \"_prepareButtonItemConfig\",\n      value: function (formatName) {\n        var iconName = \"clear\" === formatName ? \"clearformat\" : formatName;\n        var buttonText = (0, _inflector.titleize)(formatName);\n        return {\n          widget: \"dxButton\",\n          formatName: formatName,\n          options: {\n            hint: buttonText,\n            text: buttonText,\n            icon: iconName.toLowerCase(),\n            onClick: this._formatHandlers[formatName] || this._getDefaultClickHandler(formatName),\n            stylingMode: \"text\"\n          },\n          showText: \"inMenu\"\n        };\n      }\n    }, {\n      key: \"_prepareSelectItemConfig\",\n      value: function (item) {\n        var _this9 = this;\n\n        return (0, _extend.extend)(true, {\n          widget: \"dxSelectBox\",\n          formatName: item.formatName,\n          options: {\n            stylingMode: \"filled\",\n            dataSource: item.formatValues,\n            placeholder: (0, _inflector.titleize)(item.formatName),\n            onValueChanged: function (e) {\n              if (!_this9._isReset) {\n                _this9._applyFormat([item.formatName, e.value, USER_ACTION], e.event);\n\n                _this9._setValueSilent(e.component, e.value);\n              }\n            }\n          }\n        }, item);\n      }\n    }, {\n      key: \"_prepareColorClickHandler\",\n      value: function (formatName) {\n        var _this10 = this;\n\n        return function () {\n          var formData = _this10.quill.getFormat();\n\n          var caption = \"color\" === formatName ? DIALOG_COLOR_CAPTION : DIALOG_BACKGROUND_CAPTION;\n\n          _this10._editorInstance.formDialogOption(\"title\", (0, _message.format)(caption));\n\n          var promise = _this10._editorInstance.showFormDialog({\n            formData: formData,\n            items: [{\n              dataField: formatName,\n              editorType: \"dxColorView\",\n              editorOptions: {\n                onContentReady: function (e) {\n                  (0, _renderer2.default)(e.element).closest(\".\".concat(BOX_ITEM_CONTENT_CLASS)).css(\"flexBasis\", \"auto\");\n                },\n                focusStateEnabled: false\n              },\n              label: {\n                visible: false\n              }\n            }]\n          });\n\n          promise.done(function (formData, event) {\n            _this10._applyFormat([formatName, formData[formatName], USER_ACTION], event);\n          });\n          promise.fail(function () {\n            _this10.quill.focus();\n          });\n        };\n      }\n    }, {\n      key: \"_getToolbarItem\",\n      value: function (item) {\n        var _this11 = this;\n\n        var baseItem = {\n          options: {\n            onInitialized: function (e) {\n              if (item.formatName) {\n                e.component.$element().addClass(TOOLBAR_FORMAT_WIDGET_CLASS);\n                e.component.$element().toggleClass(\"dx-\".concat(item.formatName.toLowerCase(), \"-format\"), !!item.formatName);\n\n                _this11._toolbarWidgets.add(item.formatName, e.component);\n              }\n            }\n          }\n        };\n        var multilineItem = this.isMultilineMode() ? {\n          location: \"before\",\n          locateInMenu: \"never\"\n        } : {};\n        return (0, _extend.extend)(true, {\n          location: \"before\",\n          locateInMenu: \"auto\"\n        }, this._getDefaultConfig(item.formatName), item, baseItem, multilineItem);\n      }\n    }, {\n      key: \"_getDefaultItemsConfig\",\n      value: function () {\n        return {\n          header: {\n            options: {\n              displayExpr: function (item) {\n                var isHeaderValue = (0, _type.isDefined)(item) && false !== item;\n                return isHeaderValue ? \"\".concat(HEADING_TEXT, \" \").concat(item) : NORMAL_TEXT;\n              }\n            }\n          },\n          clear: {\n            options: {\n              disabled: true\n            }\n          },\n          undo: {\n            options: {\n              disabled: true\n            }\n          },\n          redo: {\n            options: {\n              disabled: true\n            }\n          },\n          separator: {\n            template: function (data, index, element) {\n              (0, _renderer2.default)(element).addClass(TOOLBAR_SEPARATOR_CLASS);\n            },\n            menuItemTemplate: function (data, index, element) {\n              (0, _renderer2.default)(element).addClass(TOOLBAR_MENU_SEPARATOR_CLASS);\n            }\n          }\n        };\n      }\n    }, {\n      key: \"_getDefaultConfig\",\n      value: function (formatName) {\n        return this._getDefaultItemsConfig()[formatName];\n      }\n    }, {\n      key: \"updateHistoryWidgets\",\n      value: function () {\n        var historyModule = this.quill.history;\n\n        if (!historyModule) {\n          return;\n        }\n\n        var undoOps = historyModule.stack.undo;\n        var redoOps = historyModule.stack.redo;\n\n        this._updateHistoryWidget(this._toolbarWidgets.getByName(\"undo\"), undoOps);\n\n        this._updateHistoryWidget(this._toolbarWidgets.getByName(\"redo\"), redoOps);\n      }\n    }, {\n      key: \"_updateHistoryWidget\",\n      value: function (widget, operations) {\n        if (!widget) {\n          return;\n        }\n\n        widget.option(\"disabled\", !operations.length);\n      }\n    }, {\n      key: \"updateFormatWidgets\",\n      value: function (isResetRequired) {\n        var selection = this.quill.getSelection();\n\n        if (!selection) {\n          return;\n        }\n\n        var formats = this.quill.getFormat(selection);\n        var hasFormats = !(0, _type.isEmptyObject)(formats);\n\n        if (!hasFormats || isResetRequired) {\n          this._resetFormatWidgets();\n        }\n\n        for (var formatName in formats) {\n          var widgetName = this._getFormatWidgetName(formatName, formats);\n\n          var formatWidget = this._toolbarWidgets.getByName(widgetName) || this._toolbarWidgets.getByName(formatName);\n\n          if (!formatWidget) {\n            continue;\n          }\n\n          this._markActiveFormatWidget(formatName, formatWidget, formats);\n        }\n\n        this._toggleClearFormatting(hasFormats);\n      }\n    }, {\n      key: \"_markActiveFormatWidget\",\n      value: function (name, widget, formats) {\n        if (this._isColorFormat(name)) {\n          this._updateColorWidget(name, formats[name]);\n        }\n\n        if (\"value\" in widget.option()) {\n          this._setValueSilent(widget, formats[name]);\n        } else {\n          widget.$element().addClass(ACTIVE_FORMAT_CLASS);\n        }\n      }\n    }, {\n      key: \"_toggleClearFormatting\",\n      value: function (hasFormats) {\n        var clearWidget = this._toolbarWidgets.getByName(\"clear\");\n\n        if (clearWidget) {\n          clearWidget.option(\"disabled\", !hasFormats);\n        }\n      }\n    }, {\n      key: \"_isColorFormat\",\n      value: function (formatName) {\n        return \"color\" === formatName || \"background\" === formatName;\n      }\n    }, {\n      key: \"_updateColorWidget\",\n      value: function (formatName, color) {\n        var formatWidget = this._toolbarWidgets.getByName(formatName);\n\n        if (!formatWidget) {\n          return;\n        }\n\n        formatWidget.$element().find(\".\".concat(ICON_CLASS)).css(\"borderBottomColor\", color || \"transparent\");\n      }\n    }, {\n      key: \"_getFormatWidgetName\",\n      value: function (formatName, formats) {\n        var widgetName;\n\n        switch (formatName) {\n          case \"align\":\n            widgetName = formatName + (0, _inflector.titleize)(formats[formatName]);\n            break;\n\n          case \"list\":\n            widgetName = formats[formatName] + (0, _inflector.titleize)(formatName);\n            break;\n\n          case \"code-block\":\n            widgetName = \"codeBlock\";\n            break;\n\n          case \"script\":\n            widgetName = formats[formatName] + formatName;\n            break;\n\n          case \"imageSrc\":\n            widgetName = \"image\";\n            break;\n\n          default:\n            widgetName = formatName;\n        }\n\n        return widgetName;\n      }\n    }, {\n      key: \"_setValueSilent\",\n      value: function (widget, value) {\n        this._isReset = true;\n        widget.option(\"value\", value);\n        this._isReset = false;\n      }\n    }, {\n      key: \"_resetFormatWidgets\",\n      value: function () {\n        var _this12 = this;\n\n        this._toolbarWidgets.each(function (name, widget) {\n          _this12._resetFormatWidget(name, widget);\n        });\n      }\n    }, {\n      key: \"_resetFormatWidget\",\n      value: function (name, widget) {\n        widget.$element().removeClass(ACTIVE_FORMAT_CLASS);\n\n        if (this._isColorFormat(name)) {\n          this._updateColorWidget(name);\n        }\n\n        if (\"clear\" === name) {\n          widget.option(\"disabled\", true);\n        }\n\n        if (\"dxSelectBox\" === widget.NAME) {\n          this._setValueSilent(widget, null);\n        }\n      }\n    }, {\n      key: \"addClickHandler\",\n      value: function (formatName, handler) {\n        this._formatHandlers[formatName] = handler;\n\n        var formatWidget = this._toolbarWidgets.getByName(formatName);\n\n        if (formatWidget && \"dxButton\" === formatWidget.NAME) {\n          formatWidget.option(\"onClick\", handler);\n        }\n      }\n    }, {\n      key: \"_embedFormatIndex\",\n      get: function () {\n        var selection = this.quill.getSelection();\n\n        if (selection) {\n          if (selection.length) {\n            return selection.index;\n          } else {\n            return selection.index - 1;\n          }\n        } else {\n          return this.quill.getLength();\n        }\n      }\n    }, {\n      key: \"_defaultPasteIndex\",\n      get: function () {\n        var selection = this.quill.getSelection();\n        return selection && selection.index || this.quill.getLength();\n      }\n    }, {\n      key: \"_imageFormItems\",\n      get: function () {\n        return [{\n          dataField: \"src\",\n          label: {\n            text: (0, _message.format)(DIALOG_IMAGE_FIELD_URL)\n          }\n        }, {\n          dataField: \"width\",\n          label: {\n            text: (0, _message.format)(DIALOG_IMAGE_FIELD_WIDTH)\n          }\n        }, {\n          dataField: \"height\",\n          label: {\n            text: (0, _message.format)(DIALOG_IMAGE_FIELD_HEIGHT)\n          }\n        }, {\n          dataField: \"alt\",\n          label: {\n            text: (0, _message.format)(DIALOG_IMAGE_FIELD_ALT)\n          }\n        }];\n      }\n    }, {\n      key: \"toolbarConfig\",\n      get: function () {\n        return {\n          dataSource: this._prepareToolbarItems(),\n          disabled: this.isInteractionDisabled,\n          menuContainer: this._$toolbarContainer,\n          multiline: this.isMultilineMode()\n        };\n      }\n    }, {\n      key: \"isInteractionDisabled\",\n      get: function () {\n        return this._editorInstance.option(\"readOnly\") || this._editorInstance.option(\"disabled\");\n      }\n    }]);\n\n    return ToolbarModule;\n  }(BaseModule);\n}\n\nexports.default = ToolbarModule;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/calendar/client/node_modules/devextreme/ui/html_editor/modules/toolbar.js"],"names":["Object","defineProperty","exports","value","_quill","require","_quill2","_interopRequireDefault","_renderer","_renderer2","_toolbar","_toolbar2","_widget_collector","_widget_collector2","_iterator","_type","_extend","_message","_inflector","_events_engine","_events_engine2","_utils","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","toString","call","slice","name","Array","from","test","iter","isArray","len","length","i","arr2","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","e","getPrototypeOf","ToolbarModule","default","BaseModule","import","TOOLBAR_WRAPPER_CLASS","TOOLBAR_CLASS","TOOLBAR_FORMAT_WIDGET_CLASS","TOOLBAR_SEPARATOR_CLASS","TOOLBAR_MENU_SEPARATOR_CLASS","ACTIVE_FORMAT_CLASS","BOX_ITEM_CONTENT_CLASS","ICON_CLASS","SELECTION_CHANGE_EVENT","DIALOG_COLOR_CAPTION","DIALOG_BACKGROUND_CAPTION","DIALOG_LINK_CAPTION","DIALOG_LINK_FIELD_URL","DIALOG_LINK_FIELD_TEXT","DIALOG_LINK_FIELD_TARGET","DIALOG_LINK_FIELD_TARGET_CLASS","DIALOG_IMAGE_CAPTION","DIALOG_IMAGE_FIELD_URL","DIALOG_IMAGE_FIELD_ALT","DIALOG_IMAGE_FIELD_WIDTH","DIALOG_IMAGE_FIELD_HEIGHT","USER_ACTION","SILENT_ACTION","HEADING_TEXT","format","NORMAL_TEXT","_BaseModule","_super","quill","options","_this","_editorInstance","editorInstance","_toolbarWidgets","_formatHandlers","_getFormatHandlers","isDefined","items","_addCallbacks","_renderToolbar","on","eventName","isSelectionChanged","_updateToolbar","formatArgs","event","_this$quill","_saveValueChangeEvent","addCleanCallback","clean","bind","addContentInitializedCallback","updateHistoryWidgets","updateFormatWidgets","formatName","_this2","_ref","formats","getFormat","newValue","isBoolean","_applyFormat","_updateFormatWidget","isApplied","widget","getByName","_markActiveFormatWidget","_resetFormatWidget","hasOwnProperty","_toggleClearFormatting","isEmptyObject","_this3","clear","range","getSelection","removeFormat","link","_prepareLinkHandler","image","_prepareImageHandler","color","_prepareColorClickHandler","background","orderedList","_prepareShortcutHandler","bulletList","alignLeft","alignCenter","alignRight","alignJustify","codeBlock","_getDefaultClickHandler","undo","_ref2","history","redo","_ref3","increaseIndent","_ref4","decreaseIndent","_ref5","superscript","subscript","shortcutValue","_this4","_ref6","_this5","focus","selection","hasEmbedContent","_hasEmbedContent","formData","href","text","getText","formDialogOption","promise","showFormDialog","_getLinkFormItems","done","index","deleteText","insertText","setSelection","fail","trim","dataField","label","visible","editorType","editorOptions","cssClass","_this6","isUpdateDialog","defaultIndex","_defaultPasteIndex","_this6$quill$getForma","imageSrc","src","formatIndex","_embedFormatIndex","_imageFormItems","insertEmbed","always","_this7","container","_getContainer","_$toolbar","addClass","appendTo","_$toolbarContainer","addNamespace","NAME","preventDefault","toolbarInstance","_createComponent","toolbarConfig","_ref7","option","isInteractionDisabled","_this$options$multili","multiline","empty","removeClass","repaint","$container","$element","prepend","_this8","resultItems","each","item","newItem","isObject","_handleObjectItem","isString","buttonItemConfig","_prepareButtonItemConfig","_getToolbarItem","push","formatValues","_isAcceptableItem","selectItemConfig","_prepareSelectItemConfig","defaultButtonItemConfig","extend","acceptableWidgetName","iconName","buttonText","titleize","hint","icon","toLowerCase","onClick","stylingMode","showText","_this9","dataSource","placeholder","onValueChanged","_isReset","_setValueSilent","component","_this10","caption","onContentReady","element","closest","concat","css","focusStateEnabled","_this11","baseItem","onInitialized","toggleClass","add","multilineItem","isMultilineMode","location","locateInMenu","_getDefaultConfig","header","displayExpr","isHeaderValue","disabled","separator","template","data","menuItemTemplate","_getDefaultItemsConfig","historyModule","undoOps","stack","redoOps","_updateHistoryWidget","operations","isResetRequired","hasFormats","_resetFormatWidgets","widgetName","_getFormatWidgetName","formatWidget","_isColorFormat","_updateColorWidget","clearWidget","find","_this12","handler","get","getLength","_prepareToolbarItems","menuContainer"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/html_editor/modules/toolbar.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nvar _quill = require(\"quill\");\r\nvar _quill2 = _interopRequireDefault(_quill);\r\nvar _renderer = require(\"../../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _toolbar = require(\"../../toolbar\");\r\nvar _toolbar2 = _interopRequireDefault(_toolbar);\r\nrequire(\"../../select_box\");\r\nrequire(\"../../color_box/color_view\");\r\nvar _widget_collector = require(\"./widget_collector\");\r\nvar _widget_collector2 = _interopRequireDefault(_widget_collector);\r\nvar _iterator = require(\"../../../core/utils/iterator\");\r\nvar _type = require(\"../../../core/utils/type\");\r\nvar _extend = require(\"../../../core/utils/extend\");\r\nvar _message = require(\"../../../localization/message\");\r\nvar _inflector = require(\"../../../core/utils/inflector\");\r\nvar _events_engine = require(\"../../../events/core/events_engine\");\r\nvar _events_engine2 = _interopRequireDefault(_events_engine);\r\nvar _utils = require(\"../../../events/utils\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n    if (!o) {\r\n        return\r\n    }\r\n    if (\"string\" === typeof o) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n    var n = Object.prototype.toString.call(o).slice(8, -1);\r\n    if (\"Object\" === n && o.constructor) {\r\n        n = o.constructor.name\r\n    }\r\n    if (\"Map\" === n || \"Set\" === n) {\r\n        return Array.from(o)\r\n    }\r\n    if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) {\r\n        return _arrayLikeToArray(o, minLen)\r\n    }\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n    if (\"undefined\" !== typeof Symbol && Symbol.iterator in Object(iter)) {\r\n        return Array.from(iter)\r\n    }\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n    if (Array.isArray(arr)) {\r\n        return _arrayLikeToArray(arr)\r\n    }\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n    if (null == len || len > arr.length) {\r\n        len = arr.length\r\n    }\r\n    for (var i = 0, arr2 = new Array(len); i < len; i++) {\r\n        arr2[i] = arr[i]\r\n    }\r\n    return arr2\r\n}\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\n\r\nfunction _inherits(subClass, superClass) {\r\n    if (\"function\" !== typeof superClass && null !== superClass) {\r\n        throw new TypeError(\"Super expression must either be null or a function\")\r\n    }\r\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n        constructor: {\r\n            value: subClass,\r\n            writable: true,\r\n            configurable: true\r\n        }\r\n    });\r\n    if (superClass) {\r\n        _setPrototypeOf(subClass, superClass)\r\n    }\r\n}\r\n\r\nfunction _setPrototypeOf(o, p) {\r\n    _setPrototypeOf = Object.setPrototypeOf || function(o, p) {\r\n        o.__proto__ = p;\r\n        return o\r\n    };\r\n    return _setPrototypeOf(o, p)\r\n}\r\n\r\nfunction _createSuper(Derived) {\r\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\r\n    return function() {\r\n        var result, Super = _getPrototypeOf(Derived);\r\n        if (hasNativeReflectConstruct) {\r\n            var NewTarget = _getPrototypeOf(this).constructor;\r\n            result = Reflect.construct(Super, arguments, NewTarget)\r\n        } else {\r\n            result = Super.apply(this, arguments)\r\n        }\r\n        return _possibleConstructorReturn(this, result)\r\n    }\r\n}\r\n\r\nfunction _possibleConstructorReturn(self, call) {\r\n    if (call && (\"object\" === _typeof(call) || \"function\" === typeof call)) {\r\n        return call\r\n    }\r\n    return _assertThisInitialized(self)\r\n}\r\n\r\nfunction _assertThisInitialized(self) {\r\n    if (void 0 === self) {\r\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\")\r\n    }\r\n    return self\r\n}\r\n\r\nfunction _isNativeReflectConstruct() {\r\n    if (\"undefined\" === typeof Reflect || !Reflect.construct) {\r\n        return false\r\n    }\r\n    if (Reflect.construct.sham) {\r\n        return false\r\n    }\r\n    if (\"function\" === typeof Proxy) {\r\n        return true\r\n    }\r\n    try {\r\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\r\n        return true\r\n    } catch (e) {\r\n        return false\r\n    }\r\n}\r\n\r\nfunction _getPrototypeOf(o) {\r\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o) {\r\n        return o.__proto__ || Object.getPrototypeOf(o)\r\n    };\r\n    return _getPrototypeOf(o)\r\n}\r\nvar ToolbarModule = {};\r\nif (_quill2.default) {\r\n    var BaseModule = _quill2.default.import(\"core/module\");\r\n    var TOOLBAR_WRAPPER_CLASS = \"dx-htmleditor-toolbar-wrapper\";\r\n    var TOOLBAR_CLASS = \"dx-htmleditor-toolbar\";\r\n    var TOOLBAR_FORMAT_WIDGET_CLASS = \"dx-htmleditor-toolbar-format\";\r\n    var TOOLBAR_SEPARATOR_CLASS = \"dx-htmleditor-toolbar-separator\";\r\n    var TOOLBAR_MENU_SEPARATOR_CLASS = \"dx-htmleditor-toolbar-menu-separator\";\r\n    var ACTIVE_FORMAT_CLASS = \"dx-format-active\";\r\n    var BOX_ITEM_CONTENT_CLASS = \"dx-box-item-content\";\r\n    var ICON_CLASS = \"dx-icon\";\r\n    var SELECTION_CHANGE_EVENT = \"selection-change\";\r\n    var DIALOG_COLOR_CAPTION = \"dxHtmlEditor-dialogColorCaption\";\r\n    var DIALOG_BACKGROUND_CAPTION = \"dxHtmlEditor-dialogBackgroundCaption\";\r\n    var DIALOG_LINK_CAPTION = \"dxHtmlEditor-dialogLinkCaption\";\r\n    var DIALOG_LINK_FIELD_URL = \"dxHtmlEditor-dialogLinkUrlField\";\r\n    var DIALOG_LINK_FIELD_TEXT = \"dxHtmlEditor-dialogLinkTextField\";\r\n    var DIALOG_LINK_FIELD_TARGET = \"dxHtmlEditor-dialogLinkTargetField\";\r\n    var DIALOG_LINK_FIELD_TARGET_CLASS = \"dx-formdialog-field-target\";\r\n    var DIALOG_IMAGE_CAPTION = \"dxHtmlEditor-dialogImageCaption\";\r\n    var DIALOG_IMAGE_FIELD_URL = \"dxHtmlEditor-dialogImageUrlField\";\r\n    var DIALOG_IMAGE_FIELD_ALT = \"dxHtmlEditor-dialogImageAltField\";\r\n    var DIALOG_IMAGE_FIELD_WIDTH = \"dxHtmlEditor-dialogImageWidthField\";\r\n    var DIALOG_IMAGE_FIELD_HEIGHT = \"dxHtmlEditor-dialogImageHeightField\";\r\n    var USER_ACTION = \"user\";\r\n    var SILENT_ACTION = \"silent\";\r\n    var HEADING_TEXT = (0, _message.format)(\"dxHtmlEditor-heading\");\r\n    var NORMAL_TEXT = (0, _message.format)(\"dxHtmlEditor-normalText\");\r\n    ToolbarModule = function(_BaseModule) {\r\n        _inherits(ToolbarModule, _BaseModule);\r\n        var _super = _createSuper(ToolbarModule);\r\n\r\n        function ToolbarModule(quill, options) {\r\n            var _this;\r\n            _classCallCheck(this, ToolbarModule);\r\n            _this = _super.call(this, quill, options);\r\n            _this._editorInstance = options.editorInstance;\r\n            _this._toolbarWidgets = new _widget_collector2.default;\r\n            _this._formatHandlers = _this._getFormatHandlers();\r\n            if ((0, _type.isDefined)(options.items)) {\r\n                _this._addCallbacks();\r\n                _this._renderToolbar();\r\n                _this.quill.on(\"editor-change\", function(eventName) {\r\n                    var isSelectionChanged = eventName === SELECTION_CHANGE_EVENT;\r\n                    _this._updateToolbar(isSelectionChanged)\r\n                })\r\n            }\r\n            return _this\r\n        }\r\n        _createClass(ToolbarModule, [{\r\n            key: \"_applyFormat\",\r\n            value: function(formatArgs, event) {\r\n                var _this$quill;\r\n                this._editorInstance._saveValueChangeEvent(event);\r\n                (_this$quill = this.quill).format.apply(_this$quill, _toConsumableArray(formatArgs))\r\n            }\r\n        }, {\r\n            key: \"_addCallbacks\",\r\n            value: function() {\r\n                this._editorInstance.addCleanCallback(this.clean.bind(this));\r\n                this._editorInstance.addContentInitializedCallback(this.updateHistoryWidgets.bind(this))\r\n            }\r\n        }, {\r\n            key: \"_updateToolbar\",\r\n            value: function(isSelectionChanged) {\r\n                this.updateFormatWidgets(isSelectionChanged);\r\n                this.updateHistoryWidgets()\r\n            }\r\n        }, {\r\n            key: \"_getDefaultClickHandler\",\r\n            value: function(formatName) {\r\n                var _this2 = this;\r\n                return function(_ref) {\r\n                    var event = _ref.event;\r\n                    var formats = _this2.quill.getFormat();\r\n                    var value = formats[formatName];\r\n                    var newValue = !((0, _type.isBoolean)(value) ? value : (0, _type.isDefined)(value));\r\n                    _this2._applyFormat([formatName, newValue, USER_ACTION], event);\r\n                    _this2._updateFormatWidget(formatName, newValue, formats)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_updateFormatWidget\",\r\n            value: function(formatName, isApplied, formats) {\r\n                var widget = this._toolbarWidgets.getByName(formatName);\r\n                if (!widget) {\r\n                    return\r\n                }\r\n                if (isApplied) {\r\n                    this._markActiveFormatWidget(formatName, widget, formats)\r\n                } else {\r\n                    this._resetFormatWidget(formatName, widget);\r\n                    if (Object.prototype.hasOwnProperty.call(formatName)) {\r\n                        delete formats[formatName]\r\n                    }\r\n                }\r\n                this._toggleClearFormatting(isApplied || !(0, _type.isEmptyObject)(formats))\r\n            }\r\n        }, {\r\n            key: \"_getFormatHandlers\",\r\n            value: function() {\r\n                var _this3 = this;\r\n                return {\r\n                    clear: function(e) {\r\n                        var range = _this3.quill.getSelection();\r\n                        if (range) {\r\n                            _this3.quill.removeFormat(range);\r\n                            _this3.updateFormatWidgets()\r\n                        }\r\n                    },\r\n                    link: this._prepareLinkHandler(),\r\n                    image: this._prepareImageHandler(),\r\n                    color: this._prepareColorClickHandler(\"color\"),\r\n                    background: this._prepareColorClickHandler(\"background\"),\r\n                    orderedList: this._prepareShortcutHandler(\"list\", \"ordered\"),\r\n                    bulletList: this._prepareShortcutHandler(\"list\", \"bullet\"),\r\n                    alignLeft: this._prepareShortcutHandler(\"align\", \"left\"),\r\n                    alignCenter: this._prepareShortcutHandler(\"align\", \"center\"),\r\n                    alignRight: this._prepareShortcutHandler(\"align\", \"right\"),\r\n                    alignJustify: this._prepareShortcutHandler(\"align\", \"justify\"),\r\n                    codeBlock: this._getDefaultClickHandler(\"code-block\"),\r\n                    undo: function(_ref2) {\r\n                        var event = _ref2.event;\r\n                        _this3._editorInstance._saveValueChangeEvent(event);\r\n                        _this3.quill.history.undo()\r\n                    },\r\n                    redo: function(_ref3) {\r\n                        var event = _ref3.event;\r\n                        _this3._editorInstance._saveValueChangeEvent(event);\r\n                        _this3.quill.history.redo()\r\n                    },\r\n                    increaseIndent: function(_ref4) {\r\n                        var event = _ref4.event;\r\n                        _this3._applyFormat([\"indent\", \"+1\", USER_ACTION], event)\r\n                    },\r\n                    decreaseIndent: function(_ref5) {\r\n                        var event = _ref5.event;\r\n                        _this3._applyFormat([\"indent\", \"-1\", USER_ACTION], event)\r\n                    },\r\n                    superscript: this._prepareShortcutHandler(\"script\", \"super\"),\r\n                    subscript: this._prepareShortcutHandler(\"script\", \"sub\")\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_prepareShortcutHandler\",\r\n            value: function(formatName, shortcutValue) {\r\n                var _this4 = this;\r\n                return function(_ref6) {\r\n                    var event = _ref6.event;\r\n                    var formats = _this4.quill.getFormat();\r\n                    var value = formats[formatName] === shortcutValue ? false : shortcutValue;\r\n                    _this4._applyFormat([formatName, value, USER_ACTION], event);\r\n                    _this4.updateFormatWidgets(true)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_prepareLinkHandler\",\r\n            value: function() {\r\n                var _this5 = this;\r\n                return function() {\r\n                    _this5.quill.focus();\r\n                    var selection = _this5.quill.getSelection();\r\n                    var hasEmbedContent = _this5._hasEmbedContent(selection);\r\n                    var formats = selection ? _this5.quill.getFormat() : {};\r\n                    var formData = {\r\n                        href: formats.link || \"\",\r\n                        text: selection && !hasEmbedContent ? _this5.quill.getText(selection) : \"\",\r\n                        target: Object.prototype.hasOwnProperty.call(formats, \"target\") ? !!formats.target : true\r\n                    };\r\n                    _this5._editorInstance.formDialogOption(\"title\", (0, _message.format)(DIALOG_LINK_CAPTION));\r\n                    var promise = _this5._editorInstance.showFormDialog({\r\n                        formData: formData,\r\n                        items: _this5._getLinkFormItems(selection)\r\n                    });\r\n                    promise.done(function(formData, event) {\r\n                        if (selection && !hasEmbedContent) {\r\n                            var text = formData.text || formData.href;\r\n                            var index = selection.index,\r\n                                length = selection.length;\r\n                            formData.text = void 0;\r\n                            _this5._editorInstance._saveValueChangeEvent(event);\r\n                            length && _this5.quill.deleteText(index, length, SILENT_ACTION);\r\n                            _this5.quill.insertText(index, text, \"link\", formData, USER_ACTION);\r\n                            _this5.quill.setSelection(index + text.length, 0, USER_ACTION)\r\n                        } else {\r\n                            formData.text = !selection && !formData.text ? formData.href : formData.text;\r\n                            _this5._applyFormat([\"link\", formData, USER_ACTION], event)\r\n                        }\r\n                    });\r\n                    promise.fail(function() {\r\n                        _this5.quill.focus()\r\n                    })\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_hasEmbedContent\",\r\n            value: function(selection) {\r\n                return !!selection && this.quill.getText(selection).trim().length < selection.length\r\n            }\r\n        }, {\r\n            key: \"_getLinkFormItems\",\r\n            value: function(selection) {\r\n                return [{\r\n                    dataField: \"href\",\r\n                    label: {\r\n                        text: (0, _message.format)(DIALOG_LINK_FIELD_URL)\r\n                    }\r\n                }, {\r\n                    dataField: \"text\",\r\n                    label: {\r\n                        text: (0, _message.format)(DIALOG_LINK_FIELD_TEXT)\r\n                    },\r\n                    visible: !this._hasEmbedContent(selection)\r\n                }, {\r\n                    dataField: \"target\",\r\n                    editorType: \"dxCheckBox\",\r\n                    editorOptions: {\r\n                        text: (0, _message.format)(DIALOG_LINK_FIELD_TARGET)\r\n                    },\r\n                    cssClass: DIALOG_LINK_FIELD_TARGET_CLASS,\r\n                    label: {\r\n                        visible: false\r\n                    }\r\n                }]\r\n            }\r\n        }, {\r\n            key: \"_prepareImageHandler\",\r\n            value: function() {\r\n                var _this6 = this;\r\n                return function() {\r\n                    var formData = _this6.quill.getFormat();\r\n                    var isUpdateDialog = Object.prototype.hasOwnProperty.call(formData, \"imageSrc\");\r\n                    var defaultIndex = _this6._defaultPasteIndex;\r\n                    if (isUpdateDialog) {\r\n                        var _this6$quill$getForma = _this6.quill.getFormat(defaultIndex - 1, 1),\r\n                            imageSrc = _this6$quill$getForma.imageSrc;\r\n                        formData.src = formData.imageSrc;\r\n                        delete formData.imageSrc;\r\n                        if (!imageSrc || 0 === defaultIndex) {\r\n                            _this6.quill.setSelection(defaultIndex + 1, 0, SILENT_ACTION)\r\n                        }\r\n                    }\r\n                    var formatIndex = _this6._embedFormatIndex;\r\n                    _this6._editorInstance.formDialogOption(\"title\", (0, _message.format)(DIALOG_IMAGE_CAPTION));\r\n                    var promise = _this6._editorInstance.showFormDialog({\r\n                        formData: formData,\r\n                        items: _this6._imageFormItems\r\n                    });\r\n                    promise.done(function(formData, event) {\r\n                        var index = defaultIndex;\r\n                        _this6._editorInstance._saveValueChangeEvent(event);\r\n                        if (isUpdateDialog) {\r\n                            index = formatIndex;\r\n                            _this6.quill.deleteText(index, 1, SILENT_ACTION)\r\n                        }\r\n                        _this6.quill.insertEmbed(index, \"extendedImage\", formData, USER_ACTION);\r\n                        _this6.quill.setSelection(index + 1, 0, USER_ACTION)\r\n                    }).always(function() {\r\n                        _this6.quill.focus()\r\n                    })\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_renderToolbar\",\r\n            value: function() {\r\n                var _this7 = this;\r\n                var container = this.options.container || this._getContainer();\r\n                this._$toolbar = (0, _renderer2.default)(\"<div>\").addClass(TOOLBAR_CLASS).appendTo(container);\r\n                this._$toolbarContainer = (0, _renderer2.default)(container).addClass(TOOLBAR_WRAPPER_CLASS);\r\n                _events_engine2.default.on(this._$toolbarContainer, (0, _utils.addNamespace)(\"mousedown\", this._editorInstance.NAME), function(e) {\r\n                    e.preventDefault()\r\n                });\r\n                this.toolbarInstance = this._editorInstance._createComponent(this._$toolbar, _toolbar2.default, this.toolbarConfig);\r\n                this._editorInstance.on(\"optionChanged\", function(_ref7) {\r\n                    var name = _ref7.name;\r\n                    if (\"readOnly\" === name || \"disabled\" === name) {\r\n                        _this7.toolbarInstance.option(\"disabled\", _this7.isInteractionDisabled)\r\n                    }\r\n                })\r\n            }\r\n        }, {\r\n            key: \"isMultilineMode\",\r\n            value: function() {\r\n                var _this$options$multili;\r\n                return null !== (_this$options$multili = this.options.multiline) && void 0 !== _this$options$multili ? _this$options$multili : true\r\n            }\r\n        }, {\r\n            key: \"clean\",\r\n            value: function() {\r\n                this._toolbarWidgets.clear();\r\n                if (this._$toolbarContainer) {\r\n                    this._$toolbarContainer.empty().removeClass(TOOLBAR_WRAPPER_CLASS)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"repaint\",\r\n            value: function() {\r\n                this.toolbarInstance && this.toolbarInstance.repaint()\r\n            }\r\n        }, {\r\n            key: \"_getContainer\",\r\n            value: function() {\r\n                var $container = (0, _renderer2.default)(\"<div>\");\r\n                this._editorInstance.$element().prepend($container);\r\n                return $container\r\n            }\r\n        }, {\r\n            key: \"_prepareToolbarItems\",\r\n            value: function() {\r\n                var _this8 = this;\r\n                var resultItems = [];\r\n                (0, _iterator.each)(this.options.items, function(index, item) {\r\n                    var newItem;\r\n                    if ((0, _type.isObject)(item)) {\r\n                        newItem = _this8._handleObjectItem(item)\r\n                    } else {\r\n                        if ((0, _type.isString)(item)) {\r\n                            var buttonItemConfig = _this8._prepareButtonItemConfig(item);\r\n                            newItem = _this8._getToolbarItem(buttonItemConfig)\r\n                        }\r\n                    }\r\n                    if (newItem) {\r\n                        resultItems.push(newItem)\r\n                    }\r\n                });\r\n                return resultItems\r\n            }\r\n        }, {\r\n            key: \"_handleObjectItem\",\r\n            value: function(item) {\r\n                if (item.formatName && item.formatValues && this._isAcceptableItem(item.widget, \"dxSelectBox\")) {\r\n                    var selectItemConfig = this._prepareSelectItemConfig(item);\r\n                    return this._getToolbarItem(selectItemConfig)\r\n                } else {\r\n                    if (item.formatName && this._isAcceptableItem(item.widget, \"dxButton\")) {\r\n                        var defaultButtonItemConfig = this._prepareButtonItemConfig(item.formatName);\r\n                        var buttonItemConfig = (0, _extend.extend)(true, defaultButtonItemConfig, item);\r\n                        return this._getToolbarItem(buttonItemConfig)\r\n                    } else {\r\n                        return this._getToolbarItem(item)\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_isAcceptableItem\",\r\n            value: function(widget, acceptableWidgetName) {\r\n                return !widget || widget === acceptableWidgetName\r\n            }\r\n        }, {\r\n            key: \"_prepareButtonItemConfig\",\r\n            value: function(formatName) {\r\n                var iconName = \"clear\" === formatName ? \"clearformat\" : formatName;\r\n                var buttonText = (0, _inflector.titleize)(formatName);\r\n                return {\r\n                    widget: \"dxButton\",\r\n                    formatName: formatName,\r\n                    options: {\r\n                        hint: buttonText,\r\n                        text: buttonText,\r\n                        icon: iconName.toLowerCase(),\r\n                        onClick: this._formatHandlers[formatName] || this._getDefaultClickHandler(formatName),\r\n                        stylingMode: \"text\"\r\n                    },\r\n                    showText: \"inMenu\"\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_prepareSelectItemConfig\",\r\n            value: function(item) {\r\n                var _this9 = this;\r\n                return (0, _extend.extend)(true, {\r\n                    widget: \"dxSelectBox\",\r\n                    formatName: item.formatName,\r\n                    options: {\r\n                        stylingMode: \"filled\",\r\n                        dataSource: item.formatValues,\r\n                        placeholder: (0, _inflector.titleize)(item.formatName),\r\n                        onValueChanged: function(e) {\r\n                            if (!_this9._isReset) {\r\n                                _this9._applyFormat([item.formatName, e.value, USER_ACTION], e.event);\r\n                                _this9._setValueSilent(e.component, e.value)\r\n                            }\r\n                        }\r\n                    }\r\n                }, item)\r\n            }\r\n        }, {\r\n            key: \"_prepareColorClickHandler\",\r\n            value: function(formatName) {\r\n                var _this10 = this;\r\n                return function() {\r\n                    var formData = _this10.quill.getFormat();\r\n                    var caption = \"color\" === formatName ? DIALOG_COLOR_CAPTION : DIALOG_BACKGROUND_CAPTION;\r\n                    _this10._editorInstance.formDialogOption(\"title\", (0, _message.format)(caption));\r\n                    var promise = _this10._editorInstance.showFormDialog({\r\n                        formData: formData,\r\n                        items: [{\r\n                            dataField: formatName,\r\n                            editorType: \"dxColorView\",\r\n                            editorOptions: {\r\n                                onContentReady: function(e) {\r\n                                    (0, _renderer2.default)(e.element).closest(\".\".concat(BOX_ITEM_CONTENT_CLASS)).css(\"flexBasis\", \"auto\")\r\n                                },\r\n                                focusStateEnabled: false\r\n                            },\r\n                            label: {\r\n                                visible: false\r\n                            }\r\n                        }]\r\n                    });\r\n                    promise.done(function(formData, event) {\r\n                        _this10._applyFormat([formatName, formData[formatName], USER_ACTION], event)\r\n                    });\r\n                    promise.fail(function() {\r\n                        _this10.quill.focus()\r\n                    })\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_getToolbarItem\",\r\n            value: function(item) {\r\n                var _this11 = this;\r\n                var baseItem = {\r\n                    options: {\r\n                        onInitialized: function(e) {\r\n                            if (item.formatName) {\r\n                                e.component.$element().addClass(TOOLBAR_FORMAT_WIDGET_CLASS);\r\n                                e.component.$element().toggleClass(\"dx-\".concat(item.formatName.toLowerCase(), \"-format\"), !!item.formatName);\r\n                                _this11._toolbarWidgets.add(item.formatName, e.component)\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                var multilineItem = this.isMultilineMode() ? {\r\n                    location: \"before\",\r\n                    locateInMenu: \"never\"\r\n                } : {};\r\n                return (0, _extend.extend)(true, {\r\n                    location: \"before\",\r\n                    locateInMenu: \"auto\"\r\n                }, this._getDefaultConfig(item.formatName), item, baseItem, multilineItem)\r\n            }\r\n        }, {\r\n            key: \"_getDefaultItemsConfig\",\r\n            value: function() {\r\n                return {\r\n                    header: {\r\n                        options: {\r\n                            displayExpr: function(item) {\r\n                                var isHeaderValue = (0, _type.isDefined)(item) && false !== item;\r\n                                return isHeaderValue ? \"\".concat(HEADING_TEXT, \" \").concat(item) : NORMAL_TEXT\r\n                            }\r\n                        }\r\n                    },\r\n                    clear: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    undo: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    redo: {\r\n                        options: {\r\n                            disabled: true\r\n                        }\r\n                    },\r\n                    separator: {\r\n                        template: function(data, index, element) {\r\n                            (0, _renderer2.default)(element).addClass(TOOLBAR_SEPARATOR_CLASS)\r\n                        },\r\n                        menuItemTemplate: function(data, index, element) {\r\n                            (0, _renderer2.default)(element).addClass(TOOLBAR_MENU_SEPARATOR_CLASS)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_getDefaultConfig\",\r\n            value: function(formatName) {\r\n                return this._getDefaultItemsConfig()[formatName]\r\n            }\r\n        }, {\r\n            key: \"updateHistoryWidgets\",\r\n            value: function() {\r\n                var historyModule = this.quill.history;\r\n                if (!historyModule) {\r\n                    return\r\n                }\r\n                var undoOps = historyModule.stack.undo;\r\n                var redoOps = historyModule.stack.redo;\r\n                this._updateHistoryWidget(this._toolbarWidgets.getByName(\"undo\"), undoOps);\r\n                this._updateHistoryWidget(this._toolbarWidgets.getByName(\"redo\"), redoOps)\r\n            }\r\n        }, {\r\n            key: \"_updateHistoryWidget\",\r\n            value: function(widget, operations) {\r\n                if (!widget) {\r\n                    return\r\n                }\r\n                widget.option(\"disabled\", !operations.length)\r\n            }\r\n        }, {\r\n            key: \"updateFormatWidgets\",\r\n            value: function(isResetRequired) {\r\n                var selection = this.quill.getSelection();\r\n                if (!selection) {\r\n                    return\r\n                }\r\n                var formats = this.quill.getFormat(selection);\r\n                var hasFormats = !(0, _type.isEmptyObject)(formats);\r\n                if (!hasFormats || isResetRequired) {\r\n                    this._resetFormatWidgets()\r\n                }\r\n                for (var formatName in formats) {\r\n                    var widgetName = this._getFormatWidgetName(formatName, formats);\r\n                    var formatWidget = this._toolbarWidgets.getByName(widgetName) || this._toolbarWidgets.getByName(formatName);\r\n                    if (!formatWidget) {\r\n                        continue\r\n                    }\r\n                    this._markActiveFormatWidget(formatName, formatWidget, formats)\r\n                }\r\n                this._toggleClearFormatting(hasFormats)\r\n            }\r\n        }, {\r\n            key: \"_markActiveFormatWidget\",\r\n            value: function(name, widget, formats) {\r\n                if (this._isColorFormat(name)) {\r\n                    this._updateColorWidget(name, formats[name])\r\n                }\r\n                if (\"value\" in widget.option()) {\r\n                    this._setValueSilent(widget, formats[name])\r\n                } else {\r\n                    widget.$element().addClass(ACTIVE_FORMAT_CLASS)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_toggleClearFormatting\",\r\n            value: function(hasFormats) {\r\n                var clearWidget = this._toolbarWidgets.getByName(\"clear\");\r\n                if (clearWidget) {\r\n                    clearWidget.option(\"disabled\", !hasFormats)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_isColorFormat\",\r\n            value: function(formatName) {\r\n                return \"color\" === formatName || \"background\" === formatName\r\n            }\r\n        }, {\r\n            key: \"_updateColorWidget\",\r\n            value: function(formatName, color) {\r\n                var formatWidget = this._toolbarWidgets.getByName(formatName);\r\n                if (!formatWidget) {\r\n                    return\r\n                }\r\n                formatWidget.$element().find(\".\".concat(ICON_CLASS)).css(\"borderBottomColor\", color || \"transparent\")\r\n            }\r\n        }, {\r\n            key: \"_getFormatWidgetName\",\r\n            value: function(formatName, formats) {\r\n                var widgetName;\r\n                switch (formatName) {\r\n                    case \"align\":\r\n                        widgetName = formatName + (0, _inflector.titleize)(formats[formatName]);\r\n                        break;\r\n                    case \"list\":\r\n                        widgetName = formats[formatName] + (0, _inflector.titleize)(formatName);\r\n                        break;\r\n                    case \"code-block\":\r\n                        widgetName = \"codeBlock\";\r\n                        break;\r\n                    case \"script\":\r\n                        widgetName = formats[formatName] + formatName;\r\n                        break;\r\n                    case \"imageSrc\":\r\n                        widgetName = \"image\";\r\n                        break;\r\n                    default:\r\n                        widgetName = formatName\r\n                }\r\n                return widgetName\r\n            }\r\n        }, {\r\n            key: \"_setValueSilent\",\r\n            value: function(widget, value) {\r\n                this._isReset = true;\r\n                widget.option(\"value\", value);\r\n                this._isReset = false\r\n            }\r\n        }, {\r\n            key: \"_resetFormatWidgets\",\r\n            value: function() {\r\n                var _this12 = this;\r\n                this._toolbarWidgets.each(function(name, widget) {\r\n                    _this12._resetFormatWidget(name, widget)\r\n                })\r\n            }\r\n        }, {\r\n            key: \"_resetFormatWidget\",\r\n            value: function(name, widget) {\r\n                widget.$element().removeClass(ACTIVE_FORMAT_CLASS);\r\n                if (this._isColorFormat(name)) {\r\n                    this._updateColorWidget(name)\r\n                }\r\n                if (\"clear\" === name) {\r\n                    widget.option(\"disabled\", true)\r\n                }\r\n                if (\"dxSelectBox\" === widget.NAME) {\r\n                    this._setValueSilent(widget, null)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"addClickHandler\",\r\n            value: function(formatName, handler) {\r\n                this._formatHandlers[formatName] = handler;\r\n                var formatWidget = this._toolbarWidgets.getByName(formatName);\r\n                if (formatWidget && \"dxButton\" === formatWidget.NAME) {\r\n                    formatWidget.option(\"onClick\", handler)\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_embedFormatIndex\",\r\n            get: function() {\r\n                var selection = this.quill.getSelection();\r\n                if (selection) {\r\n                    if (selection.length) {\r\n                        return selection.index\r\n                    } else {\r\n                        return selection.index - 1\r\n                    }\r\n                } else {\r\n                    return this.quill.getLength()\r\n                }\r\n            }\r\n        }, {\r\n            key: \"_defaultPasteIndex\",\r\n            get: function() {\r\n                var selection = this.quill.getSelection();\r\n                return selection && selection.index || this.quill.getLength()\r\n            }\r\n        }, {\r\n            key: \"_imageFormItems\",\r\n            get: function() {\r\n                return [{\r\n                    dataField: \"src\",\r\n                    label: {\r\n                        text: (0, _message.format)(DIALOG_IMAGE_FIELD_URL)\r\n                    }\r\n                }, {\r\n                    dataField: \"width\",\r\n                    label: {\r\n                        text: (0, _message.format)(DIALOG_IMAGE_FIELD_WIDTH)\r\n                    }\r\n                }, {\r\n                    dataField: \"height\",\r\n                    label: {\r\n                        text: (0, _message.format)(DIALOG_IMAGE_FIELD_HEIGHT)\r\n                    }\r\n                }, {\r\n                    dataField: \"alt\",\r\n                    label: {\r\n                        text: (0, _message.format)(DIALOG_IMAGE_FIELD_ALT)\r\n                    }\r\n                }]\r\n            }\r\n        }, {\r\n            key: \"toolbarConfig\",\r\n            get: function() {\r\n                return {\r\n                    dataSource: this._prepareToolbarItems(),\r\n                    disabled: this.isInteractionDisabled,\r\n                    menuContainer: this._$toolbarContainer,\r\n                    multiline: this.isMultilineMode()\r\n                }\r\n            }\r\n        }, {\r\n            key: \"isInteractionDisabled\",\r\n            get: function() {\r\n                return this._editorInstance.option(\"readOnly\") || this._editorInstance.option(\"disabled\")\r\n            }\r\n        }]);\r\n        return ToolbarModule\r\n    }(BaseModule)\r\n}\r\nexports.default = ToolbarModule;\r\n"]},"metadata":{},"sourceType":"script"}