{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js\";\nimport React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nconst CLIENT_ID = \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\"; // Array of API discovery doc URLs for APIs used by the quickstart\n\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\nvar authorizeButton = document.getElementById(\"authorize_button\");\nvar signoutButton = document.getElementById(\"signout_button\");\n\nfunction initClient() {\n  window.gapi.client.init({\n    apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n    clientId: CLIENT_ID,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n  }).then(function () {\n    // Listen for sign-in state changes.\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n    updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    authorizeButton.onclick = handleAuthClick;\n    signoutButton.onclick = handleSignoutClick;\n  }, function (error) {\n    appendPre(JSON.stringify(error, null, 2));\n  });\n}\n\nclass GoogleOAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.responseGoogle = response => {\n      console.log(response);\n      console.log(response.profileObj);\n      const imageURL = response.profileObj.imageUrl;\n      console.log(imageURL);\n      const email = response.profileObj.email;\n      console.log(email);\n      const name = response.profileObj.givenName;\n      const accessToken = response.accessToken;\n      console.log(accessToken);\n      const tokenObj = response.tokenObj;\n      console.log(tokenObj);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"GoogleOAuth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: CLIENT_ID,\n      buttonText: \"Login\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle // cookiePolicy={\"single_host_origin\"}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default GoogleOAuth;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js"],"names":["React","Component","GoogleLogin","CLIENT_ID","DISCOVERY_DOCS","SCOPES","authorizeButton","document","getElementById","signoutButton","initClient","window","gapi","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","updateSigninStatus","get","onclick","handleAuthClick","handleSignoutClick","error","appendPre","JSON","stringify","GoogleOAuth","responseGoogle","response","console","log","profileObj","imageURL","imageUrl","email","name","givenName","accessToken","tokenObj","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,SAAS,GACb,0EADF,C,CAGA;;AACA,IAAIC,cAAc,GAAG,CACnB,+DADmB,CAArB,C,CAIA;AACA;;AACA,IAAIC,MAAM,GAAG,mDAAb;AAEA,IAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAtB;AACA,IAAIC,aAAa,GAAGF,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAApB;;AAEA,SAASE,UAAT,GAAsB;AACpBC,EAAAA,MAAM,CAACC,IAAP,CAAYC,MAAZ,CACGC,IADH,CACQ;AACJC,IAAAA,MAAM,EAAE,yCADJ;AAEJC,IAAAA,QAAQ,EAAEb,SAFN;AAGJc,IAAAA,aAAa,EAAEb,cAHX;AAIJc,IAAAA,KAAK,EAAEb;AAJH,GADR,EAOGc,IAPH,CAQI,YAAY;AACV;AACAR,IAAAA,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CACGC,eADH,GAEGC,UAFH,CAEcC,MAFd,CAEqBC,kBAFrB,EAFU,CAMV;;AACAA,IAAAA,kBAAkB,CAChBb,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,GAAoCC,UAApC,CAA+CG,GAA/C,EADgB,CAAlB;AAGAnB,IAAAA,eAAe,CAACoB,OAAhB,GAA0BC,eAA1B;AACAlB,IAAAA,aAAa,CAACiB,OAAd,GAAwBE,kBAAxB;AACD,GApBL,EAqBI,UAAUC,KAAV,EAAiB;AACfC,IAAAA,SAAS,CAACC,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAD,CAAT;AACD,GAvBL;AAyBD;;AAED,MAAMI,WAAN,SAA0BhC,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAClCiC,cADkC,GAChBC,QAAD,IAAc;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,UAArB;AACA,YAAMC,QAAQ,GAAGJ,QAAQ,CAACG,UAAT,CAAoBE,QAArC;AAEAJ,MAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,YAAME,KAAK,GAAGN,QAAQ,CAACG,UAAT,CAAoBG,KAAlC;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,YAAMC,IAAI,GAAGP,QAAQ,CAACG,UAAT,CAAoBK,SAAjC;AACA,YAAMC,WAAW,GAAGT,QAAQ,CAACS,WAA7B;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYO,WAAZ;AACA,YAAMC,QAAQ,GAAGV,QAAQ,CAACU,QAA1B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACD,KAdiC;AAAA;;AAgBlCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAE3C,SADZ;AAEE,MAAA,UAAU,EAAC,OAFb;AAGE,MAAA,SAAS,EAAE,KAAK+B,cAHlB;AAIE,MAAA,SAAS,EAAE,KAAKA,cAJlB,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AA5BiC;;AA+BpC,eAAeD,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\n\nconst CLIENT_ID =\n  \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\";\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\n  \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n\nvar authorizeButton = document.getElementById(\"authorize_button\");\nvar signoutButton = document.getElementById(\"signout_button\");\n\nfunction initClient() {\n  window.gapi.client\n    .init({\n      apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES,\n    })\n    .then(\n      function () {\n        // Listen for sign-in state changes.\n        window.gapi.auth2\n          .getAuthInstance()\n          .isSignedIn.listen(updateSigninStatus);\n\n        // Handle the initial sign-in state.\n        updateSigninStatus(\n          window.gapi.auth2.getAuthInstance().isSignedIn.get()\n        );\n        authorizeButton.onclick = handleAuthClick;\n        signoutButton.onclick = handleSignoutClick;\n      },\n      function (error) {\n        appendPre(JSON.stringify(error, null, 2));\n      }\n    );\n}\n\nclass GoogleOAuth extends Component {\n  responseGoogle = (response) => {\n    console.log(response);\n    console.log(response.profileObj);\n    const imageURL = response.profileObj.imageUrl;\n\n    console.log(imageURL);\n    const email = response.profileObj.email;\n    console.log(email);\n    const name = response.profileObj.givenName;\n    const accessToken = response.accessToken;\n    console.log(accessToken);\n    const tokenObj = response.tokenObj;\n    console.log(tokenObj);\n  };\n\n  render() {\n    return (\n      <div className=\"GoogleOAuth\">\n        <GoogleLogin\n          clientId={CLIENT_ID}\n          buttonText=\"Login\"\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n          // cookiePolicy={\"single_host_origin\"}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GoogleOAuth;\n"]},"metadata":{},"sourceType":"module"}