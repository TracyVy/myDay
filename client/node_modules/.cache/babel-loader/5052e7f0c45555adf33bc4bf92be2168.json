{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js\";\nimport React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nconst CLIENT_ID = \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\"; // Array of API discovery doc URLs for APIs used by the quickstart\n\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\nvar authorizeButton = document.getElementById(\"authorize_button\");\nvar signoutButton = document.getElementById(\"signout_button\");\n/**\n *  Called when the signed in status changes, to update the UI\n *  appropriately. After a sign-in, the API is called.\n */\n\nfunction updateSigninStatus(isSignedIn) {\n  if (isSignedIn) {\n    authorizeButton.style.display = \"none\";\n    signoutButton.style.display = \"block\";\n    listUpcomingEvents();\n  } else {\n    authorizeButton.style.display = \"block\";\n    signoutButton.style.display = \"none\";\n  }\n}\n/**\n *  Sign in the user upon button click.\n */\n\n\nfunction handleAuthClick(event) {\n  gapi.auth2.getAuthInstance().signIn();\n}\n/**\n *  Sign out the user upon button click.\n */\n\n\nfunction handleSignoutClick(event) {\n  gapi.auth2.getAuthInstance().signOut();\n}\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\n\n\nfunction appendPre(message) {\n  var pre = document.getElementById(\"content\");\n  var textContent = document.createTextNode(message + \"\\n\");\n  pre.appendChild(textContent);\n}\n/**\n * Print the summary and start datetime/date of the next ten events in\n * the authorized user's calendar. If no events are found an\n * appropriate message is printed.\n */\n\n\nfunction listUpcomingEvents() {\n  gapi.client.calendar.events.list({\n    calendarId: \"primary\",\n    timeMin: new Date().toISOString(),\n    showDeleted: false,\n    singleEvents: true,\n    maxResults: 10,\n    orderBy: \"startTime\"\n  }).then(function (response) {\n    var events = response.result.items;\n    appendPre(\"Upcoming events:\");\n\n    if (events.length > 0) {\n      for (i = 0; i < events.length; i++) {\n        var event = events[i];\n        var when = event.start.dateTime;\n\n        if (!when) {\n          when = event.start.date;\n        }\n\n        appendPre(event.summary + \" (\" + when + \")\");\n      }\n    } else {\n      appendPre(\"No upcoming events found.\");\n    }\n  });\n}\n\nfunction initClient() {\n  window.gapi.client.init({\n    apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n    clientId: CLIENT_ID,\n    discoveryDocs: DISCOVERY_DOCS,\n    scope: SCOPES\n  }).then(function () {\n    // Listen for sign-in state changes.\n    window.gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus); // Handle the initial sign-in state.\n\n    updateSigninStatus(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    authorizeButton.onclick = handleAuthClick;\n    signoutButton.onclick = handleSignoutClick;\n  }, function (error) {\n    appendPre(JSON.stringify(error, null, 2));\n  });\n}\n\nclass GoogleOAuth extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.responseGoogle = response => {\n      console.log(response);\n      console.log(response.profileObj);\n      const imageURL = response.profileObj.imageUrl;\n      console.log(imageURL);\n      const email = response.profileObj.email;\n      console.log(email);\n      const name = response.profileObj.givenName;\n      const accessToken = response.accessToken;\n      console.log(accessToken);\n      const tokenObj = response.tokenObj;\n      console.log(tokenObj);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"GoogleOAuth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      clientId: CLIENT_ID,\n      buttonText: \"Login\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle // cookiePolicy={\"single_host_origin\"}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default GoogleOAuth;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js"],"names":["React","Component","GoogleLogin","CLIENT_ID","DISCOVERY_DOCS","SCOPES","authorizeButton","document","getElementById","signoutButton","updateSigninStatus","isSignedIn","style","display","listUpcomingEvents","handleAuthClick","event","gapi","auth2","getAuthInstance","signIn","handleSignoutClick","signOut","appendPre","message","pre","textContent","createTextNode","appendChild","client","calendar","events","list","calendarId","timeMin","Date","toISOString","showDeleted","singleEvents","maxResults","orderBy","then","response","result","items","length","i","when","start","dateTime","date","summary","initClient","window","init","apiKey","clientId","discoveryDocs","scope","listen","get","onclick","error","JSON","stringify","GoogleOAuth","responseGoogle","console","log","profileObj","imageURL","imageUrl","email","name","givenName","accessToken","tokenObj","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\n\nconst CLIENT_ID =\n  \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\";\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\n  \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n\nvar authorizeButton = document.getElementById(\"authorize_button\");\nvar signoutButton = document.getElementById(\"signout_button\");\n\n/**\n *  Called when the signed in status changes, to update the UI\n *  appropriately. After a sign-in, the API is called.\n */\nfunction updateSigninStatus(isSignedIn) {\n  if (isSignedIn) {\n    authorizeButton.style.display = \"none\";\n    signoutButton.style.display = \"block\";\n    listUpcomingEvents();\n  } else {\n    authorizeButton.style.display = \"block\";\n    signoutButton.style.display = \"none\";\n  }\n}\n\n/**\n *  Sign in the user upon button click.\n */\nfunction handleAuthClick(event) {\n  gapi.auth2.getAuthInstance().signIn();\n}\n\n/**\n *  Sign out the user upon button click.\n */\nfunction handleSignoutClick(event) {\n  gapi.auth2.getAuthInstance().signOut();\n}\n\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\nfunction appendPre(message) {\n  var pre = document.getElementById(\"content\");\n  var textContent = document.createTextNode(message + \"\\n\");\n  pre.appendChild(textContent);\n}\n\n/**\n * Print the summary and start datetime/date of the next ten events in\n * the authorized user's calendar. If no events are found an\n * appropriate message is printed.\n */\nfunction listUpcomingEvents() {\n  gapi.client.calendar.events\n    .list({\n      calendarId: \"primary\",\n      timeMin: new Date().toISOString(),\n      showDeleted: false,\n      singleEvents: true,\n      maxResults: 10,\n      orderBy: \"startTime\",\n    })\n    .then(function (response) {\n      var events = response.result.items;\n      appendPre(\"Upcoming events:\");\n\n      if (events.length > 0) {\n        for (i = 0; i < events.length; i++) {\n          var event = events[i];\n          var when = event.start.dateTime;\n          if (!when) {\n            when = event.start.date;\n          }\n          appendPre(event.summary + \" (\" + when + \")\");\n        }\n      } else {\n        appendPre(\"No upcoming events found.\");\n      }\n    });\n}\n\nfunction initClient() {\n  window.gapi.client\n    .init({\n      apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES,\n    })\n    .then(\n      function () {\n        // Listen for sign-in state changes.\n        window.gapi.auth2\n          .getAuthInstance()\n          .isSignedIn.listen(updateSigninStatus);\n\n        // Handle the initial sign-in state.\n        updateSigninStatus(\n          window.gapi.auth2.getAuthInstance().isSignedIn.get()\n        );\n        authorizeButton.onclick = handleAuthClick;\n        signoutButton.onclick = handleSignoutClick;\n      },\n      function (error) {\n        appendPre(JSON.stringify(error, null, 2));\n      }\n    );\n}\n\nclass GoogleOAuth extends Component {\n  responseGoogle = (response) => {\n    console.log(response);\n    console.log(response.profileObj);\n    const imageURL = response.profileObj.imageUrl;\n\n    console.log(imageURL);\n    const email = response.profileObj.email;\n    console.log(email);\n    const name = response.profileObj.givenName;\n    const accessToken = response.accessToken;\n    console.log(accessToken);\n    const tokenObj = response.tokenObj;\n    console.log(tokenObj);\n  };\n\n  render() {\n    return (\n      <div className=\"GoogleOAuth\">\n        <GoogleLogin\n          clientId={CLIENT_ID}\n          buttonText=\"Login\"\n          onSuccess={this.responseGoogle}\n          onFailure={this.responseGoogle}\n          // cookiePolicy={\"single_host_origin\"}\n        />\n      </div>\n    );\n  }\n}\n\nexport default GoogleOAuth;\n"]},"metadata":{},"sourceType":"module"}