{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.subscribes.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _array2 = _interopRequireDefault(_array);\n\nvar _utils = require(\"./utils.recurrence\");\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _type2 = _interopRequireDefault(_type);\n\nvar _date = require(\"../../core/utils/date\");\n\nvar _date2 = _interopRequireDefault(_date);\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _ui = require(\"../widget/ui.errors\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _translator = require(\"../../animation/translator\");\n\nvar _translator2 = _interopRequireDefault(_translator);\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _uiScheduler = require(\"./timezones/ui.scheduler.timezones\");\n\nvar _uiScheduler2 = _interopRequireDefault(_uiScheduler);\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _date3 = require(\"../../localization/date\");\n\nvar _date4 = _interopRequireDefault(_date3);\n\nvar _utils3 = require(\"./utils.timeZone\");\n\nvar _utils4 = _interopRequireDefault(_utils3);\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar MINUTES_IN_HOUR = 60;\nvar toMs = _date2.default.dateToMilliseconds;\nvar subscribes = {\n  isCurrentViewAgenda: function isCurrentViewAgenda() {\n    return \"agenda\" === this.option(\"currentView\");\n  },\n  currentViewUpdated: function currentViewUpdated(currentView) {\n    this.option(\"currentView\", currentView);\n  },\n  currentDateUpdated: function currentDateUpdated(date) {\n    this.option(\"currentDate\", date);\n  },\n  setCellDataCacheAlias: function setCellDataCacheAlias(appointment, geometry) {\n    this._workSpace.setCellDataCacheAlias(appointment, geometry);\n  },\n  needCoordinates: function needCoordinates(options) {\n    var _this = this;\n\n    var appointmentData = options.appointmentData;\n    var startDate = options.startDate;\n\n    var endDate = this._getEndDate(appointmentData);\n\n    var recurrenceRule = this.fire(\"getField\", \"recurrenceRule\", appointmentData);\n\n    var recurrenceException = this._getRecurrenceException(appointmentData);\n\n    var dateRange = this._workSpace.getDateRange();\n\n    var allDay = this.appointmentTakesAllDay(appointmentData);\n    var startViewDate = this.appointmentTakesAllDay(appointmentData) ? _date2.default.trimTime(new Date(dateRange[0])) : dateRange[0];\n    var originalStartDate = options.originalStartDate || startDate;\n    var renderingStrategy = this.getLayoutManager().getRenderingStrategyInstance();\n    var firstDayOfWeek = this.getFirstDayOfWeek();\n    var recurrenceOptions = {\n      rule: recurrenceRule,\n      exception: recurrenceException,\n      start: originalStartDate,\n      end: endDate,\n      min: startViewDate,\n      max: dateRange[1],\n      firstDayOfWeek: firstDayOfWeek\n    };\n\n    var dates = _utils2.default.getDatesByRecurrence(recurrenceOptions);\n\n    var initialDates;\n\n    if (!dates.length) {\n      dates.push(startDate);\n      initialDates = dates;\n    } else {\n      dates = this.getCorrectedDatesByDaylightOffsets(originalStartDate, dates, appointmentData);\n      initialDates = dates;\n      dates = dates.map(function (date) {\n        return _date2.default.roundDateByStartDayHour(date, _this._getCurrentViewOption(\"startDayHour\"));\n      });\n    }\n\n    if (renderingStrategy.needSeparateAppointment(allDay)) {\n      var datesLength = dates.length;\n      var longParts = [];\n      var resultDates = [];\n\n      var _loop = function _loop(i) {\n        var endDateOfPart = renderingStrategy.endDate(appointmentData, {\n          startDate: dates[i]\n        }, !!recurrenceRule);\n        longParts = _date2.default.getDatesOfInterval(dates[i], endDateOfPart, {\n          milliseconds: _this.getWorkSpace().getIntervalDuration(allDay)\n        });\n        var maxDate = new Date(dateRange[1]);\n        resultDates = resultDates.concat(longParts.filter(function (el) {\n          return new Date(el) < maxDate;\n        }));\n      };\n\n      for (var i = 0; i < datesLength; i++) {\n        _loop(i);\n      }\n\n      dates = resultDates;\n    }\n\n    var itemResources = this._resourcesManager.getResourcesFromItem(appointmentData);\n\n    allDay = this.appointmentTakesAllDay(appointmentData) && this._workSpace.supportAllDayRow();\n    return this._getCoordinates(initialDates, dates, itemResources, allDay);\n  },\n  isGroupedByDate: function isGroupedByDate() {\n    return this.getWorkSpace().isGroupedByDate();\n  },\n  showAppointmentTooltip: function showAppointmentTooltip(options) {\n    var appointmentData = options.data;\n    var targetedData = this.fire(\"getTargetedAppointmentData\", appointmentData, (0, _renderer2.default)(options.target));\n    this.showAppointmentTooltip(appointmentData, options.target, targetedData);\n  },\n  hideAppointmentTooltip: function hideAppointmentTooltip() {\n    this.hideAppointmentTooltip();\n  },\n  showAddAppointmentPopup: function showAddAppointmentPopup(appointmentData) {\n    var processedData = {};\n    (0, _iterator.each)([\"startDate\", \"endDate\", \"allDay\"], function (_, field) {\n      if (void 0 !== appointmentData[field]) {\n        this.fire(\"setField\", field, processedData, appointmentData[field]);\n        delete appointmentData[field];\n      }\n    }.bind(this));\n    this.showAppointmentPopup((0, _extend.extend)(processedData, appointmentData), true);\n  },\n  showEditAppointmentPopup: function showEditAppointmentPopup(options) {\n    var appointmentData = options.data;\n    options.$appointment = (0, _renderer2.default)(options.target);\n    options.skipHoursProcessing = true;\n\n    var targetedData = this._getAppointmentData(appointmentData, options);\n\n    var startDate = this.fire(\"getField\", \"startDate\", targetedData);\n    this.showAppointmentPopup(appointmentData, false, targetedData, startDate);\n  },\n  updateAppointmentAfterResize: function updateAppointmentAfterResize(options) {\n    var targetAppointment = options.target;\n    options.isAppointmentResized = true;\n\n    var targetedData = this._getAppointmentData(targetAppointment, options);\n\n    var startDate = this.fire(\"getField\", \"startDate\", targetedData);\n    var updatedData = (0, _extend.extend)(true, {}, options.data);\n\n    this._convertDatesByTimezoneBack(true, updatedData);\n\n    this._checkRecurringAppointment(targetAppointment, targetedData, startDate, function () {\n      this._updateAppointment(targetAppointment, updatedData, function () {\n        this._appointments.moveAppointmentBack();\n      });\n    }.bind(this));\n  },\n  getUpdatedData: function getUpdatedData(options) {\n    return this._getUpdatedData({\n      data: options.data\n    });\n  },\n  updateAppointmentAfterDrag: function updateAppointmentAfterDrag(options) {\n    var target = options.data;\n\n    var updatedData = this._getUpdatedData(options);\n\n    var newCellIndex = this._workSpace.getDroppableCellIndex();\n\n    var oldCellIndex = this._workSpace.getCellIndexByCoordinates(options.coordinates);\n\n    var becomeAllDay = this.fire(\"getField\", \"allDay\", updatedData);\n    var wasAllDay = this.fire(\"getField\", \"allDay\", target);\n    var dragEvent = options.event;\n    var appointment = (0, _extend.extend)({}, target, updatedData);\n    var movedToAllDay = this._workSpace.supportAllDayRow() && becomeAllDay;\n\n    var cellData = this._workSpace.getCellDataByCoordinates(options.coordinates, movedToAllDay);\n\n    var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);\n\n    if (newCellIndex !== oldCellIndex || movedBetweenAllDayAndSimple) {\n      this._checkRecurringAppointment(target, appointment, cellData.startDate, function () {\n        this._convertDatesByTimezoneBack(true, updatedData, appointment);\n\n        this._updateAppointment(target, appointment, function () {\n          this._appointments.moveAppointmentBack(dragEvent);\n        }, dragEvent);\n      }.bind(this), void 0, void 0, dragEvent);\n    } else {\n      this._appointments.moveAppointmentBack(dragEvent);\n    }\n  },\n  deleteAppointment: function deleteAppointment(options) {\n    options.$appointment = (0, _renderer2.default)(options.target);\n    var appointmentData = options.data;\n\n    var targetedData = this._getAppointmentData(appointmentData, options);\n\n    this.checkAndDeleteAppointment(appointmentData, targetedData);\n  },\n  getAppointmentColor: function getAppointmentColor(options) {\n    var resourcesManager = this._resourcesManager;\n    var resourceForPainting = resourcesManager.getResourceForPainting(this._getCurrentViewOption(\"groups\"));\n    var response = new _deferred.Deferred().resolve().promise();\n\n    if (resourceForPainting) {\n      var field = resourcesManager.getField(resourceForPainting);\n      var groupIndex = options.groupIndex;\n\n      var groups = this._workSpace._getCellGroups(groupIndex);\n\n      var resourceValues = _array2.default.wrapToArray(resourcesManager.getDataAccessors(field, \"getter\")(options.itemData));\n\n      var groupId = resourceValues.length ? resourceValues[0] : void 0;\n\n      for (var i = 0; i < groups.length; i++) {\n        if (groups[i].name === field) {\n          groupId = groups[i].id;\n          break;\n        }\n      }\n\n      response = resourcesManager.getResourceColor(field, groupId);\n    }\n\n    return response;\n  },\n  getHeaderHeight: function getHeaderHeight() {\n    return this._header._$element && parseInt(this._header._$element.outerHeight(), 10);\n  },\n  getResourcesFromItem: function getResourcesFromItem(itemData) {\n    return this._resourcesManager.getResourcesFromItem(itemData);\n  },\n  getBoundOffset: function getBoundOffset() {\n    return {\n      top: -this.getWorkSpaceAllDayHeight()\n    };\n  },\n  appointmentTakesSeveralDays: function appointmentTakesSeveralDays(appointment) {\n    return this._appointmentModel.appointmentTakesSeveralDays(appointment);\n  },\n  getTextAndFormatDate: function getTextAndFormatDate(data, currentData, format) {\n    var fields = [\"startDate\", \"endDate\", \"startDateTimeZone\", \"endDateTimeZone\", \"allDay\", \"text\"];\n    var appointmentFields = this.fire(\"_getAppointmentFields\", (0, _extend.extend)({}, data, currentData), fields);\n    var startDate = appointmentFields.startDate;\n    var endDate = appointmentFields.endDate;\n    var formatType = format || this.fire(\"_getTypeFormat\", startDate, endDate, appointmentFields.allDay);\n    return {\n      text: this.fire(\"_createAppointmentTitle\", appointmentFields),\n      formatDate: this.fire(\"_formatDates\", startDate, endDate, formatType)\n    };\n  },\n  _getAppointmentFields: function _getAppointmentFields(data, arrayOfFields) {\n    var _this2 = this;\n\n    return arrayOfFields.reduce(function (accumulator, field) {\n      accumulator[field] = _this2.fire(\"getField\", field, data);\n      return accumulator;\n    }, {});\n  },\n  _getTypeFormat: function _getTypeFormat(startDate, endDate, isAllDay) {\n    if (isAllDay) {\n      return \"DATE\";\n    }\n\n    if (\"month\" !== this.option(\"currentView\") && _date2.default.sameDate(startDate, endDate)) {\n      return \"TIME\";\n    }\n\n    return \"DATETIME\";\n  },\n  _createAppointmentTitle: function _createAppointmentTitle(data) {\n    if (_type2.default.isPlainObject(data)) {\n      return data.text;\n    }\n\n    return String(data);\n  },\n  _formatDates: function _formatDates(startDate, endDate, formatType) {\n    var dateFormat = \"monthandday\";\n    var timeFormat = \"shorttime\";\n    var isSameDate = startDate.getDate() === endDate.getDate();\n    var isDurationLessThanDay = endDate.getTime() - startDate.getTime() <= toMs(\"day\");\n\n    switch (formatType) {\n      case \"DATETIME\":\n        return [_date4.default.format(startDate, dateFormat), \" \", _date4.default.format(startDate, timeFormat), \" - \", isSameDate ? \"\" : _date4.default.format(endDate, dateFormat) + \" \", _date4.default.format(endDate, timeFormat)].join(\"\");\n\n      case \"TIME\":\n        return \"\".concat(_date4.default.format(startDate, timeFormat), \" - \").concat(_date4.default.format(endDate, timeFormat));\n\n      case \"DATE\":\n        return \"\".concat(_date4.default.format(startDate, dateFormat)).concat(isDurationLessThanDay || isSameDate ? \"\" : \" - \" + _date4.default.format(endDate, dateFormat));\n    }\n  },\n  getResizableAppointmentArea: function getResizableAppointmentArea(options) {\n    var allDay = options.allDay;\n\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (groups && groups.length) {\n      if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {\n        var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\n\n        return {\n          left: horizontalGroupBounds.left,\n          right: horizontalGroupBounds.right,\n          top: 0,\n          bottom: 0\n        };\n      }\n\n      if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {\n        var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\n\n        return {\n          left: 0,\n          right: 0,\n          top: verticalGroupBounds.top,\n          bottom: verticalGroupBounds.bottom\n        };\n      }\n    }\n  },\n  needRecalculateResizableArea: function needRecalculateResizableArea() {\n    return this.getWorkSpace().needRecalculateResizableArea();\n  },\n  getAppointmentGeometry: function getAppointmentGeometry(settings) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings);\n  },\n  isAllDay: function isAllDay(appointmentData) {\n    return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData);\n  },\n  getDeltaTime: function getDeltaTime(e, initialSize, itemData) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData);\n  },\n  getDropDownAppointmentWidth: function getDropDownAppointmentWidth(isAllDay) {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay);\n  },\n  getDropDownAppointmentHeight: function getDropDownAppointmentHeight() {\n    return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight();\n  },\n  getStartDate: function getStartDate(appointmentData, skipNormalize) {\n    return this._getStartDate(appointmentData, skipNormalize);\n  },\n  getCellWidth: function getCellWidth() {\n    return this._cellWidth;\n  },\n  getCellHeight: function getCellHeight() {\n    return this._cellHeight;\n  },\n  getResizableStep: function getResizableStep() {\n    var cellWidth = this._cellWidth;\n    var workSpace = this.getWorkSpace();\n\n    if (workSpace.isGroupedByDate()) {\n      return workSpace._getGroupCount() * cellWidth;\n    }\n\n    return cellWidth;\n  },\n  getEndDate: function getEndDate(appointmentData, skipNormalize) {\n    return this._getEndDate(appointmentData, skipNormalize);\n  },\n  getRenderingStrategy: function getRenderingStrategy() {\n    return this._getAppointmentsRenderingStrategy();\n  },\n  getMaxAppointmentCountPerCellByType: function getMaxAppointmentCountPerCellByType(isAllDay) {\n    return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay);\n  },\n  needCorrectAppointmentDates: function needCorrectAppointmentDates() {\n    return this.getRenderingStrategyInstance().needCorrectAppointmentDates();\n  },\n  getRenderingStrategyDirection: function getRenderingStrategyDirection() {\n    return this.getRenderingStrategyInstance().getDirection();\n  },\n  getWorkSpaceDateTableOffset: function getWorkSpaceDateTableOffset() {\n    return this.getWorkSpaceDateTableOffset();\n  },\n  getFullWeekAppointmentWidth: function getFullWeekAppointmentWidth(options) {\n    var groupIndex = options.groupIndex;\n    return this._workSpace.getGroupWidth(groupIndex);\n  },\n  getMaxAppointmentWidth: function getMaxAppointmentWidth(options) {\n    var workSpace = this._workSpace;\n    return workSpace.getCellCountToLastViewDate(options.date) * workSpace.getCellWidth();\n  },\n  updateAppointmentStartDate: function updateAppointmentStartDate(options) {\n    var appointment = options.appointment;\n\n    var firstViewDate = this._workSpace.getStartViewDate();\n\n    var startDate = new Date(options.startDate);\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var updatedStartDate;\n\n    if (this.appointmentTakesAllDay(appointment)) {\n      updatedStartDate = _date2.default.normalizeDate(startDate, firstViewDate);\n    } else {\n      if (startDate < firstViewDate) {\n        startDate = firstViewDate;\n      }\n\n      updatedStartDate = _date2.default.normalizeDate(options.startDate, new Date(startDate));\n    }\n\n    return _date2.default.roundDateByStartDayHour(updatedStartDate, startDayHour);\n  },\n  updateAppointmentEndDate: function updateAppointmentEndDate(options) {\n    var endDate = options.endDate;\n\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var updatedEndDate = endDate;\n\n    if (endDate.getHours() >= endDayHour) {\n      updatedEndDate.setHours(endDayHour, 0, 0, 0);\n    } else {\n      if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {\n        updatedEndDate = new Date(updatedEndDate.getTime() - toMs(\"day\"));\n        updatedEndDate.setHours(endDayHour, 0, 0, 0);\n      }\n    }\n\n    return updatedEndDate;\n  },\n  renderCompactAppointments: function renderCompactAppointments(options) {\n    this._compactAppointmentsHelper.render(options);\n  },\n  clearCompactAppointments: function clearCompactAppointments() {\n    this._compactAppointmentsHelper.clear();\n  },\n  supportCompactDropDownAppointments: function supportCompactDropDownAppointments() {\n    return this._workSpace._supportCompactDropDownAppointments();\n  },\n  isApplyCompactAppointmentOffset: function isApplyCompactAppointmentOffset() {\n    return this._workSpace._isApplyCompactAppointmentOffset();\n  },\n  getGroupCount: function getGroupCount() {\n    return this._workSpace._getGroupCount();\n  },\n  mapAppointmentFields: function mapAppointmentFields(config) {\n    var targetedData = this.fire(\"getTargetedAppointmentData\", config.itemData, config.itemElement, true);\n    return {\n      appointmentData: config.itemData,\n      appointmentElement: config.itemElement,\n      targetedAppointmentData: targetedData\n    };\n  },\n  getOffsetByAllDayPanel: function getOffsetByAllDayPanel(groupIndex) {\n    return this._workSpace._getOffsetByAllDayPanel(groupIndex);\n  },\n  getGroupTop: function getGroupTop(groupIndex) {\n    return this._workSpace._getGroupTop(groupIndex);\n  },\n  updateResizableArea: function updateResizableArea() {\n    var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\n    var horizontalResizables = (0, _common.grep)($allResizableElements, function (el) {\n      var $el = (0, _renderer2.default)(el);\n      var resizableInst = $el.dxResizable(\"instance\");\n      var area = resizableInst.option(\"area\");\n      return (0, _array.inArray)(resizableInst.option(\"handles\"), [\"right left\", \"left right\"]) > -1 && _type2.default.isPlainObject(area);\n    });\n    (0, _iterator.each)(horizontalResizables, function (_, el) {\n      var $el = (0, _renderer2.default)(el);\n\n      var position = _translator2.default.locate($el);\n\n      var appointmentData = this._appointments._getItemData($el);\n\n      var area = this._appointments._calculateResizableArea({\n        left: position.left\n      }, appointmentData);\n\n      $el.dxResizable(\"instance\").option(\"area\", area);\n    }.bind(this));\n  },\n  getField: function getField(field, obj) {\n    if (!_type2.default.isDefined(this._dataAccessors.getter[field])) {\n      return;\n    }\n\n    return this._dataAccessors.getter[field](obj);\n  },\n  setField: function setField(field, obj, value) {\n    if (!_type2.default.isDefined(this._dataAccessors.setter[field])) {\n      return;\n    }\n\n    var splitExprStr = this.option(field + \"Expr\").split(\".\");\n    var rootField = splitExprStr[0];\n\n    if (void 0 === obj[rootField] && splitExprStr.length > 1) {\n      var emptyChain = function (arr) {\n        var result = {};\n        var tmp = result;\n        var arrLength = arr.length - 1;\n\n        for (var i = 1; i < arrLength; i++) {\n          tmp = tmp[arr[i]] = {};\n        }\n\n        return result;\n      }(splitExprStr);\n\n      obj[rootField] = emptyChain;\n    }\n\n    this._dataAccessors.setter[field](obj, value);\n\n    return obj;\n  },\n  prerenderFilter: function prerenderFilter() {\n    var dateRange = this.getWorkSpace().getDateRange();\n\n    var resources = this._resourcesManager.getResourcesData();\n\n    var allDay;\n\n    if (!this.option(\"showAllDayPanel\") && this._workSpace.supportAllDayRow()) {\n      allDay = false;\n    }\n\n    return this._appointmentModel.filterLoadedAppointments({\n      startDayHour: this._getCurrentViewOption(\"startDayHour\"),\n      endDayHour: this._getCurrentViewOption(\"endDayHour\"),\n      min: dateRange[0],\n      max: dateRange[1],\n      resources: resources,\n      allDay: allDay,\n      firstDayOfWeek: this.getFirstDayOfWeek(),\n      recurrenceException: this._getRecurrenceException.bind(this)\n    }, this._subscribes.convertDateByTimezone.bind(this));\n  },\n  dayHasAppointment: function dayHasAppointment(day, appointment, trimTime) {\n    return this.dayHasAppointment(day, appointment, trimTime);\n  },\n  createResourcesTree: function createResourcesTree() {\n    return this._resourcesManager.createResourcesTree(this._loadedResources);\n  },\n  getResourceTreeLeaves: function getResourceTreeLeaves(tree, appointmentResources) {\n    return this._resourcesManager.getResourceTreeLeaves(tree, appointmentResources);\n  },\n  createReducedResourcesTree: function createReducedResourcesTree() {\n    var tree = this._resourcesManager.createResourcesTree(this._loadedResources);\n\n    return this._resourcesManager.reduceResourcesTree(tree, this.getFilteredItems());\n  },\n  groupAppointmentsByResources: function groupAppointmentsByResources(appointments) {\n    var result = {\n      0: appointments\n    };\n\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (groups && groups.length && this._resourcesManager.getResourcesData().length) {\n      result = this._resourcesManager.groupAppointmentsByResources(appointments, this._loadedResources);\n    }\n\n    var totalResourceCount = 0;\n    (0, _iterator.each)(this._loadedResources, function (i, resource) {\n      if (!i) {\n        totalResourceCount = resource.items.length;\n      } else {\n        totalResourceCount *= resource.items.length;\n      }\n    });\n\n    for (var j = 0; j < totalResourceCount; j++) {\n      var index = j.toString();\n\n      if (result[index]) {\n        continue;\n      }\n\n      result[index] = [];\n    }\n\n    return result;\n  },\n  getAgendaRows: function getAgendaRows(options) {\n    var renderingStrategy = this._layoutManager.getRenderingStrategyInstance();\n\n    var calculateRows = renderingStrategy.calculateRows.bind(renderingStrategy);\n    var d = new _deferred.Deferred();\n\n    function rowsCalculated(appointments) {\n      var result = calculateRows(appointments, options.agendaDuration, options.currentDate);\n\n      this._dataSourceLoadedCallback.remove(rowsCalculated);\n\n      d.resolve(result);\n    }\n\n    this._dataSourceLoadedCallback.add(rowsCalculated);\n\n    return d.promise();\n  },\n  getAgendaVerticalStepHeight: function getAgendaVerticalStepHeight() {\n    return this.getWorkSpace().getAgendaVerticalStepHeight();\n  },\n  getAgendaDuration: function getAgendaDuration() {\n    return this._getCurrentViewOption(\"agendaDuration\");\n  },\n  getStartViewDate: function getStartViewDate() {\n    return this.getStartViewDate();\n  },\n  getEndViewDate: function getEndViewDate() {\n    return this.getEndViewDate();\n  },\n  getMaxAppointmentsPerCell: function getMaxAppointmentsPerCell() {\n    return this.getMaxAppointmentsPerCell();\n  },\n  forceMaxAppointmentPerCell: function forceMaxAppointmentPerCell() {\n    return this.forceMaxAppointmentPerCell();\n  },\n  onAgendaReady: function onAgendaReady(rows) {\n    var $appts = this.getAppointmentsInstance()._itemElements();\n\n    var total = 0;\n\n    var applyClass = function applyClass(_, count) {\n      var index = count + total - 1;\n      $appts.eq(index).addClass(_constants.AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS);\n      total += count;\n    };\n\n    for (var i = 0; i < rows.length; i++) {\n      (0, _iterator.each)(rows[i], applyClass);\n    }\n  },\n  getTimezone: function getTimezone() {\n    return this._getTimezoneOffsetByOption();\n  },\n  getClientTimezoneOffset: function getClientTimezoneOffset(date) {\n    date = date || new Date();\n    return _uiScheduler2.default.getClientTimezoneOffset(date);\n  },\n  convertDateByTimezone: function convertDateByTimezone(date, appointmentTimezone) {\n    date = new Date(date);\n\n    var tzOffsets = this._subscribes.getComplexOffsets(this, date, appointmentTimezone);\n\n    date = this._subscribes.translateDateToAppointmentTimeZone(date, tzOffsets);\n    date = this._subscribes.translateDateToCommonTimeZone(date, tzOffsets);\n    return date;\n  },\n  convertDateByTimezoneBack: function convertDateByTimezoneBack(date, appointmentTimezone) {\n    date = new Date(date);\n\n    var tzOffsets = this._subscribes.getComplexOffsets(this, date, appointmentTimezone);\n\n    date = this._subscribes.translateDateToAppointmentTimeZone(date, tzOffsets, true);\n    date = this._subscribes.translateDateToCommonTimeZone(date, tzOffsets, true);\n    return date;\n  },\n  translateDateToAppointmentTimeZone: function translateDateToAppointmentTimeZone(date, offsets, back) {\n    var operation = back ? -1 : 1;\n    var dateInUTC = date.getTime() - operation * offsets.client * toMs(\"hour\");\n    return new Date(dateInUTC + operation * offsets.appointment * toMs(\"hour\"));\n  },\n  translateDateToCommonTimeZone: function translateDateToCommonTimeZone(date, offsets, back) {\n    var operation = back ? -1 : 1;\n\n    if (\"number\" === typeof offsets.common) {\n      var offset = offsets.common - offsets.appointment;\n      var hoursOffset = (offset < 0 ? -1 : 1) * Math.floor(Math.abs(offset));\n      var minutesOffset = offset % 1;\n      date.setHours(date.getHours() + operation * hoursOffset);\n      date.setMinutes(date.getMinutes() + operation * minutesOffset * MINUTES_IN_HOUR);\n    }\n\n    return date;\n  },\n  getComplexOffsets: function getComplexOffsets(scheduler, date, appointmentTimezone) {\n    var clientTimezoneOffset = -this.getClientTimezoneOffset(date) / toMs(\"hour\");\n\n    var commonTimezoneOffset = scheduler._getTimezoneOffsetByOption(date);\n\n    var appointmentTimezoneOffset = _utils4.default.calculateTimezoneByValue(appointmentTimezone, date);\n\n    if (\"number\" !== typeof appointmentTimezoneOffset) {\n      appointmentTimezoneOffset = clientTimezoneOffset;\n    }\n\n    return {\n      client: clientTimezoneOffset,\n      common: commonTimezoneOffset,\n      appointment: appointmentTimezoneOffset\n    };\n  },\n  getTimezonesDisplayName: function getTimezonesDisplayName() {\n    return _uiScheduler2.default.getTimezonesDisplayName();\n  },\n  getTimezoneDisplayNameById: function getTimezoneDisplayNameById(id) {\n    return _uiScheduler2.default.getTimezoneDisplayNameById(id);\n  },\n  getSimilarTimezones: function getSimilarTimezones(id) {\n    return _uiScheduler2.default.getSimilarTimezones(id);\n  },\n  getTimezonesIdsByDisplayName: function getTimezonesIdsByDisplayName(displayName) {\n    return _uiScheduler2.default.getTimezonesIdsByDisplayName(displayName);\n  },\n  getTargetedAppointmentData: function getTargetedAppointmentData(appointmentData, appointmentElement, needConvertByTimezones) {\n    var $appointmentElement = (0, _renderer2.default)(appointmentElement);\n    var appointmentIndex = $appointmentElement.data(this._appointments._itemIndexKey());\n\n    var targetedData = this._getAppointmentData(appointmentData, {\n      skipDateCalculation: true,\n      $appointment: $appointmentElement,\n      skipHoursProcessing: needConvertByTimezones ? false : true\n    });\n\n    var result = {};\n    (0, _extend.extend)(true, result, appointmentData, targetedData);\n    appointmentElement && this.setTargetedAppointmentResources(result, appointmentElement, appointmentIndex);\n    return result;\n  },\n  getAppointmentDurationInMs: function getAppointmentDurationInMs(options) {\n    var startDate = options.startDate;\n    var endDate = options.endDate;\n    var allDay = options.allDay;\n    var appointmentDuration = endDate.getTime() - startDate.getTime();\n    var dayDuration = toMs(\"day\");\n\n    var visibleDayDuration = this._workSpace.getVisibleDayDuration();\n\n    var result = 0;\n\n    if (allDay) {\n      var ceilQuantityOfDays = Math.ceil(appointmentDuration / dayDuration);\n      result = ceilQuantityOfDays * visibleDayDuration;\n    } else {\n      var isDifferentDates = !_utils4.default.isSameAppointmentDates(startDate, endDate);\n      var floorQuantityOfDays = Math.floor(appointmentDuration / dayDuration);\n      var tailDuration;\n\n      if (isDifferentDates) {\n        var startDateEndHour = new Date(new Date(startDate).setHours(this.option(\"endDayHour\"), 0, 0));\n        var hiddenDayDuration = dayDuration - visibleDayDuration - (startDate.getTime() > startDateEndHour.getTime() ? startDate.getTime() - startDateEndHour.getTime() : 0);\n        tailDuration = appointmentDuration - (floorQuantityOfDays ? floorQuantityOfDays * dayDuration : hiddenDayDuration);\n        var startDayTime = this.option(\"startDayHour\") * toMs(\"hour\");\n\n        var endPartDuration = endDate - _date2.default.trimTime(endDate);\n\n        if (endPartDuration < startDayTime) {\n          if (floorQuantityOfDays) {\n            tailDuration -= hiddenDayDuration;\n          }\n\n          tailDuration += startDayTime - endPartDuration;\n        }\n      } else {\n        tailDuration = appointmentDuration % dayDuration;\n      }\n\n      if (tailDuration > visibleDayDuration) {\n        tailDuration = visibleDayDuration;\n      }\n\n      result = floorQuantityOfDays * visibleDayDuration + tailDuration || toMs(\"minute\");\n    }\n\n    return result;\n  },\n  fixWrongEndDate: function fixWrongEndDate(appointment, startDate, endDate) {\n    return this._appointmentModel.fixWrongEndDate(appointment, startDate, endDate);\n  },\n  getEndDayHour: function getEndDayHour() {\n    return this._workSpace.option(\"endDayHour\") || this.option(\"endDayHour\");\n  },\n  getStartDayHour: function getStartDayHour() {\n    return this._workSpace.option(\"startDayHour\") || this.option(\"startDayHour\");\n  },\n  isAdaptive: function isAdaptive() {\n    return this.option(\"adaptivityEnabled\");\n  },\n  moveBack: function moveBack() {\n    var dragBehavior = this.getWorkSpace().dragBehavior;\n    dragBehavior && dragBehavior.moveBack();\n  },\n  validateDayHours: function validateDayHours() {\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    if (startDayHour >= endDayHour) {\n      throw _ui2.default.Error(\"E1058\");\n    }\n  },\n  removeDroppableCellClass: function removeDroppableCellClass() {\n    this._workSpace.removeDroppableCellClass();\n  }\n};\nmodule.exports = subscribes;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/node_modules/devextreme/ui/scheduler/ui.scheduler.subscribes.js"],"names":["_renderer","require","_renderer2","_interopRequireDefault","_array","_array2","_utils","_utils2","_type","_type2","_date","_date2","_iterator","_ui","_ui2","_translator","_translator2","_common","_extend","_uiScheduler","_uiScheduler2","_deferred","_date3","_date4","_utils3","_utils4","_constants","obj","__esModule","MINUTES_IN_HOUR","toMs","default","dateToMilliseconds","subscribes","isCurrentViewAgenda","option","currentViewUpdated","currentView","currentDateUpdated","date","setCellDataCacheAlias","appointment","geometry","_workSpace","needCoordinates","options","_this","appointmentData","startDate","endDate","_getEndDate","recurrenceRule","fire","recurrenceException","_getRecurrenceException","dateRange","getDateRange","allDay","appointmentTakesAllDay","startViewDate","trimTime","Date","originalStartDate","renderingStrategy","getLayoutManager","getRenderingStrategyInstance","firstDayOfWeek","getFirstDayOfWeek","recurrenceOptions","rule","exception","start","end","min","max","dates","getDatesByRecurrence","initialDates","length","push","getCorrectedDatesByDaylightOffsets","map","roundDateByStartDayHour","_getCurrentViewOption","needSeparateAppointment","datesLength","longParts","resultDates","_loop","i","endDateOfPart","getDatesOfInterval","milliseconds","getWorkSpace","getIntervalDuration","maxDate","concat","filter","el","itemResources","_resourcesManager","getResourcesFromItem","supportAllDayRow","_getCoordinates","isGroupedByDate","showAppointmentTooltip","data","targetedData","target","hideAppointmentTooltip","showAddAppointmentPopup","processedData","each","_","field","bind","showAppointmentPopup","extend","showEditAppointmentPopup","$appointment","skipHoursProcessing","_getAppointmentData","updateAppointmentAfterResize","targetAppointment","isAppointmentResized","updatedData","_convertDatesByTimezoneBack","_checkRecurringAppointment","_updateAppointment","_appointments","moveAppointmentBack","getUpdatedData","_getUpdatedData","updateAppointmentAfterDrag","newCellIndex","getDroppableCellIndex","oldCellIndex","getCellIndexByCoordinates","coordinates","becomeAllDay","wasAllDay","dragEvent","event","movedToAllDay","cellData","getCellDataByCoordinates","movedBetweenAllDayAndSimple","deleteAppointment","checkAndDeleteAppointment","getAppointmentColor","resourcesManager","resourceForPainting","getResourceForPainting","response","Deferred","resolve","promise","getField","groupIndex","groups","_getCellGroups","resourceValues","wrapToArray","getDataAccessors","itemData","groupId","name","id","getResourceColor","getHeaderHeight","_header","_$element","parseInt","outerHeight","getBoundOffset","top","getWorkSpaceAllDayHeight","appointmentTakesSeveralDays","_appointmentModel","getTextAndFormatDate","currentData","format","fields","appointmentFields","formatType","text","formatDate","_getAppointmentFields","arrayOfFields","_this2","reduce","accumulator","_getTypeFormat","isAllDay","sameDate","_createAppointmentTitle","isPlainObject","String","_formatDates","dateFormat","timeFormat","isSameDate","getDate","isDurationLessThanDay","getTime","join","getResizableAppointmentArea","_needHorizontalGroupBounds","horizontalGroupBounds","getGroupBounds","left","right","bottom","_needVerticalGroupBounds","_isVerticalGroupedWorkSpace","verticalGroupBounds","needRecalculateResizableArea","getAppointmentGeometry","settings","getDeltaTime","e","initialSize","getDropDownAppointmentWidth","_getViewCountConfig","intervalCount","getDropDownAppointmentHeight","getStartDate","skipNormalize","_getStartDate","getCellWidth","_cellWidth","getCellHeight","_cellHeight","getResizableStep","cellWidth","workSpace","_getGroupCount","getEndDate","getRenderingStrategy","_getAppointmentsRenderingStrategy","getMaxAppointmentCountPerCellByType","_getMaxAppointmentCountPerCellByType","needCorrectAppointmentDates","getRenderingStrategyDirection","getDirection","getWorkSpaceDateTableOffset","getFullWeekAppointmentWidth","getGroupWidth","getMaxAppointmentWidth","getCellCountToLastViewDate","updateAppointmentStartDate","firstViewDate","getStartViewDate","startDayHour","updatedStartDate","normalizeDate","updateAppointmentEndDate","endDayHour","updatedEndDate","getHours","setHours","getMinutes","renderCompactAppointments","_compactAppointmentsHelper","render","clearCompactAppointments","clear","supportCompactDropDownAppointments","_supportCompactDropDownAppointments","isApplyCompactAppointmentOffset","_isApplyCompactAppointmentOffset","getGroupCount","mapAppointmentFields","config","itemElement","appointmentElement","targetedAppointmentData","getOffsetByAllDayPanel","_getOffsetByAllDayPanel","getGroupTop","_getGroupTop","updateResizableArea","$allResizableElements","$element","find","horizontalResizables","grep","$el","resizableInst","dxResizable","area","inArray","position","locate","_getItemData","_calculateResizableArea","isDefined","_dataAccessors","getter","setField","value","setter","splitExprStr","split","rootField","emptyChain","arr","result","tmp","arrLength","prerenderFilter","resources","getResourcesData","filterLoadedAppointments","_subscribes","convertDateByTimezone","dayHasAppointment","day","createResourcesTree","_loadedResources","getResourceTreeLeaves","tree","appointmentResources","createReducedResourcesTree","reduceResourcesTree","getFilteredItems","groupAppointmentsByResources","appointments","totalResourceCount","resource","items","j","index","toString","getAgendaRows","_layoutManager","calculateRows","d","rowsCalculated","agendaDuration","currentDate","_dataSourceLoadedCallback","remove","add","getAgendaVerticalStepHeight","getAgendaDuration","getEndViewDate","getMaxAppointmentsPerCell","forceMaxAppointmentPerCell","onAgendaReady","rows","$appts","getAppointmentsInstance","_itemElements","total","applyClass","count","eq","addClass","AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS","getTimezone","_getTimezoneOffsetByOption","getClientTimezoneOffset","appointmentTimezone","tzOffsets","getComplexOffsets","translateDateToAppointmentTimeZone","translateDateToCommonTimeZone","convertDateByTimezoneBack","offsets","back","operation","dateInUTC","client","common","offset","hoursOffset","Math","floor","abs","minutesOffset","setMinutes","scheduler","clientTimezoneOffset","commonTimezoneOffset","appointmentTimezoneOffset","calculateTimezoneByValue","getTimezonesDisplayName","getTimezoneDisplayNameById","getSimilarTimezones","getTimezonesIdsByDisplayName","displayName","getTargetedAppointmentData","needConvertByTimezones","$appointmentElement","appointmentIndex","_itemIndexKey","skipDateCalculation","setTargetedAppointmentResources","getAppointmentDurationInMs","appointmentDuration","dayDuration","visibleDayDuration","getVisibleDayDuration","ceilQuantityOfDays","ceil","isDifferentDates","isSameAppointmentDates","floorQuantityOfDays","tailDuration","startDateEndHour","hiddenDayDuration","startDayTime","endPartDuration","fixWrongEndDate","getEndDayHour","getStartDayHour","isAdaptive","moveBack","dragBehavior","validateDayHours","Error","removeDroppableCellClass","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/ui.scheduler.subscribes.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _array2 = _interopRequireDefault(_array);\r\nvar _utils = require(\"./utils.recurrence\");\r\nvar _utils2 = _interopRequireDefault(_utils);\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _type2 = _interopRequireDefault(_type);\r\nvar _date = require(\"../../core/utils/date\");\r\nvar _date2 = _interopRequireDefault(_date);\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _ui = require(\"../widget/ui.errors\");\r\nvar _ui2 = _interopRequireDefault(_ui);\r\nvar _translator = require(\"../../animation/translator\");\r\nvar _translator2 = _interopRequireDefault(_translator);\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _uiScheduler = require(\"./timezones/ui.scheduler.timezones\");\r\nvar _uiScheduler2 = _interopRequireDefault(_uiScheduler);\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _date3 = require(\"../../localization/date\");\r\nvar _date4 = _interopRequireDefault(_date3);\r\nvar _utils3 = require(\"./utils.timeZone\");\r\nvar _utils4 = _interopRequireDefault(_utils3);\r\nvar _constants = require(\"./constants\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MINUTES_IN_HOUR = 60;\r\nvar toMs = _date2.default.dateToMilliseconds;\r\nvar subscribes = {\r\n    isCurrentViewAgenda: function() {\r\n        return \"agenda\" === this.option(\"currentView\")\r\n    },\r\n    currentViewUpdated: function(currentView) {\r\n        this.option(\"currentView\", currentView)\r\n    },\r\n    currentDateUpdated: function(date) {\r\n        this.option(\"currentDate\", date)\r\n    },\r\n    setCellDataCacheAlias: function(appointment, geometry) {\r\n        this._workSpace.setCellDataCacheAlias(appointment, geometry)\r\n    },\r\n    needCoordinates: function(options) {\r\n        var _this = this;\r\n        var appointmentData = options.appointmentData;\r\n        var startDate = options.startDate;\r\n        var endDate = this._getEndDate(appointmentData);\r\n        var recurrenceRule = this.fire(\"getField\", \"recurrenceRule\", appointmentData);\r\n        var recurrenceException = this._getRecurrenceException(appointmentData);\r\n        var dateRange = this._workSpace.getDateRange();\r\n        var allDay = this.appointmentTakesAllDay(appointmentData);\r\n        var startViewDate = this.appointmentTakesAllDay(appointmentData) ? _date2.default.trimTime(new Date(dateRange[0])) : dateRange[0];\r\n        var originalStartDate = options.originalStartDate || startDate;\r\n        var renderingStrategy = this.getLayoutManager().getRenderingStrategyInstance();\r\n        var firstDayOfWeek = this.getFirstDayOfWeek();\r\n        var recurrenceOptions = {\r\n            rule: recurrenceRule,\r\n            exception: recurrenceException,\r\n            start: originalStartDate,\r\n            end: endDate,\r\n            min: startViewDate,\r\n            max: dateRange[1],\r\n            firstDayOfWeek: firstDayOfWeek\r\n        };\r\n        var dates = _utils2.default.getDatesByRecurrence(recurrenceOptions);\r\n        var initialDates;\r\n        if (!dates.length) {\r\n            dates.push(startDate);\r\n            initialDates = dates\r\n        } else {\r\n            dates = this.getCorrectedDatesByDaylightOffsets(originalStartDate, dates, appointmentData);\r\n            initialDates = dates;\r\n            dates = dates.map(function(date) {\r\n                return _date2.default.roundDateByStartDayHour(date, _this._getCurrentViewOption(\"startDayHour\"))\r\n            })\r\n        }\r\n        if (renderingStrategy.needSeparateAppointment(allDay)) {\r\n            var datesLength = dates.length;\r\n            var longParts = [];\r\n            var resultDates = [];\r\n            var _loop = function(i) {\r\n                var endDateOfPart = renderingStrategy.endDate(appointmentData, {\r\n                    startDate: dates[i]\r\n                }, !!recurrenceRule);\r\n                longParts = _date2.default.getDatesOfInterval(dates[i], endDateOfPart, {\r\n                    milliseconds: _this.getWorkSpace().getIntervalDuration(allDay)\r\n                });\r\n                var maxDate = new Date(dateRange[1]);\r\n                resultDates = resultDates.concat(longParts.filter(function(el) {\r\n                    return new Date(el) < maxDate\r\n                }))\r\n            };\r\n            for (var i = 0; i < datesLength; i++) {\r\n                _loop(i)\r\n            }\r\n            dates = resultDates\r\n        }\r\n        var itemResources = this._resourcesManager.getResourcesFromItem(appointmentData);\r\n        allDay = this.appointmentTakesAllDay(appointmentData) && this._workSpace.supportAllDayRow();\r\n        return this._getCoordinates(initialDates, dates, itemResources, allDay)\r\n    },\r\n    isGroupedByDate: function() {\r\n        return this.getWorkSpace().isGroupedByDate()\r\n    },\r\n    showAppointmentTooltip: function(options) {\r\n        var appointmentData = options.data;\r\n        var targetedData = this.fire(\"getTargetedAppointmentData\", appointmentData, (0, _renderer2.default)(options.target));\r\n        this.showAppointmentTooltip(appointmentData, options.target, targetedData)\r\n    },\r\n    hideAppointmentTooltip: function() {\r\n        this.hideAppointmentTooltip()\r\n    },\r\n    showAddAppointmentPopup: function(appointmentData) {\r\n        var processedData = {};\r\n        (0, _iterator.each)([\"startDate\", \"endDate\", \"allDay\"], function(_, field) {\r\n            if (void 0 !== appointmentData[field]) {\r\n                this.fire(\"setField\", field, processedData, appointmentData[field]);\r\n                delete appointmentData[field]\r\n            }\r\n        }.bind(this));\r\n        this.showAppointmentPopup((0, _extend.extend)(processedData, appointmentData), true)\r\n    },\r\n    showEditAppointmentPopup: function(options) {\r\n        var appointmentData = options.data;\r\n        options.$appointment = (0, _renderer2.default)(options.target);\r\n        options.skipHoursProcessing = true;\r\n        var targetedData = this._getAppointmentData(appointmentData, options);\r\n        var startDate = this.fire(\"getField\", \"startDate\", targetedData);\r\n        this.showAppointmentPopup(appointmentData, false, targetedData, startDate)\r\n    },\r\n    updateAppointmentAfterResize: function(options) {\r\n        var targetAppointment = options.target;\r\n        options.isAppointmentResized = true;\r\n        var targetedData = this._getAppointmentData(targetAppointment, options);\r\n        var startDate = this.fire(\"getField\", \"startDate\", targetedData);\r\n        var updatedData = (0, _extend.extend)(true, {}, options.data);\r\n        this._convertDatesByTimezoneBack(true, updatedData);\r\n        this._checkRecurringAppointment(targetAppointment, targetedData, startDate, function() {\r\n            this._updateAppointment(targetAppointment, updatedData, function() {\r\n                this._appointments.moveAppointmentBack()\r\n            })\r\n        }.bind(this))\r\n    },\r\n    getUpdatedData: function(options) {\r\n        return this._getUpdatedData({\r\n            data: options.data\r\n        })\r\n    },\r\n    updateAppointmentAfterDrag: function(options) {\r\n        var target = options.data;\r\n        var updatedData = this._getUpdatedData(options);\r\n        var newCellIndex = this._workSpace.getDroppableCellIndex();\r\n        var oldCellIndex = this._workSpace.getCellIndexByCoordinates(options.coordinates);\r\n        var becomeAllDay = this.fire(\"getField\", \"allDay\", updatedData);\r\n        var wasAllDay = this.fire(\"getField\", \"allDay\", target);\r\n        var dragEvent = options.event;\r\n        var appointment = (0, _extend.extend)({}, target, updatedData);\r\n        var movedToAllDay = this._workSpace.supportAllDayRow() && becomeAllDay;\r\n        var cellData = this._workSpace.getCellDataByCoordinates(options.coordinates, movedToAllDay);\r\n        var movedBetweenAllDayAndSimple = this._workSpace.supportAllDayRow() && (wasAllDay && !becomeAllDay || !wasAllDay && becomeAllDay);\r\n        if (newCellIndex !== oldCellIndex || movedBetweenAllDayAndSimple) {\r\n            this._checkRecurringAppointment(target, appointment, cellData.startDate, function() {\r\n                this._convertDatesByTimezoneBack(true, updatedData, appointment);\r\n                this._updateAppointment(target, appointment, function() {\r\n                    this._appointments.moveAppointmentBack(dragEvent)\r\n                }, dragEvent)\r\n            }.bind(this), void 0, void 0, dragEvent)\r\n        } else {\r\n            this._appointments.moveAppointmentBack(dragEvent)\r\n        }\r\n    },\r\n    deleteAppointment: function(options) {\r\n        options.$appointment = (0, _renderer2.default)(options.target);\r\n        var appointmentData = options.data;\r\n        var targetedData = this._getAppointmentData(appointmentData, options);\r\n        this.checkAndDeleteAppointment(appointmentData, targetedData)\r\n    },\r\n    getAppointmentColor: function(options) {\r\n        var resourcesManager = this._resourcesManager;\r\n        var resourceForPainting = resourcesManager.getResourceForPainting(this._getCurrentViewOption(\"groups\"));\r\n        var response = (new _deferred.Deferred).resolve().promise();\r\n        if (resourceForPainting) {\r\n            var field = resourcesManager.getField(resourceForPainting);\r\n            var groupIndex = options.groupIndex;\r\n            var groups = this._workSpace._getCellGroups(groupIndex);\r\n            var resourceValues = _array2.default.wrapToArray(resourcesManager.getDataAccessors(field, \"getter\")(options.itemData));\r\n            var groupId = resourceValues.length ? resourceValues[0] : void 0;\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (groups[i].name === field) {\r\n                    groupId = groups[i].id;\r\n                    break\r\n                }\r\n            }\r\n            response = resourcesManager.getResourceColor(field, groupId)\r\n        }\r\n        return response\r\n    },\r\n    getHeaderHeight: function() {\r\n        return this._header._$element && parseInt(this._header._$element.outerHeight(), 10)\r\n    },\r\n    getResourcesFromItem: function(itemData) {\r\n        return this._resourcesManager.getResourcesFromItem(itemData)\r\n    },\r\n    getBoundOffset: function() {\r\n        return {\r\n            top: -this.getWorkSpaceAllDayHeight()\r\n        }\r\n    },\r\n    appointmentTakesSeveralDays: function(appointment) {\r\n        return this._appointmentModel.appointmentTakesSeveralDays(appointment)\r\n    },\r\n    getTextAndFormatDate: function(data, currentData, format) {\r\n        var fields = [\"startDate\", \"endDate\", \"startDateTimeZone\", \"endDateTimeZone\", \"allDay\", \"text\"];\r\n        var appointmentFields = this.fire(\"_getAppointmentFields\", (0, _extend.extend)({}, data, currentData), fields);\r\n        var startDate = appointmentFields.startDate;\r\n        var endDate = appointmentFields.endDate;\r\n        var formatType = format || this.fire(\"_getTypeFormat\", startDate, endDate, appointmentFields.allDay);\r\n        return {\r\n            text: this.fire(\"_createAppointmentTitle\", appointmentFields),\r\n            formatDate: this.fire(\"_formatDates\", startDate, endDate, formatType)\r\n        }\r\n    },\r\n    _getAppointmentFields: function(data, arrayOfFields) {\r\n        var _this2 = this;\r\n        return arrayOfFields.reduce(function(accumulator, field) {\r\n            accumulator[field] = _this2.fire(\"getField\", field, data);\r\n            return accumulator\r\n        }, {})\r\n    },\r\n    _getTypeFormat: function(startDate, endDate, isAllDay) {\r\n        if (isAllDay) {\r\n            return \"DATE\"\r\n        }\r\n        if (\"month\" !== this.option(\"currentView\") && _date2.default.sameDate(startDate, endDate)) {\r\n            return \"TIME\"\r\n        }\r\n        return \"DATETIME\"\r\n    },\r\n    _createAppointmentTitle: function(data) {\r\n        if (_type2.default.isPlainObject(data)) {\r\n            return data.text\r\n        }\r\n        return String(data)\r\n    },\r\n    _formatDates: function(startDate, endDate, formatType) {\r\n        var dateFormat = \"monthandday\";\r\n        var timeFormat = \"shorttime\";\r\n        var isSameDate = startDate.getDate() === endDate.getDate();\r\n        var isDurationLessThanDay = endDate.getTime() - startDate.getTime() <= toMs(\"day\");\r\n        switch (formatType) {\r\n            case \"DATETIME\":\r\n                return [_date4.default.format(startDate, dateFormat), \" \", _date4.default.format(startDate, timeFormat), \" - \", isSameDate ? \"\" : _date4.default.format(endDate, dateFormat) + \" \", _date4.default.format(endDate, timeFormat)].join(\"\");\r\n            case \"TIME\":\r\n                return \"\".concat(_date4.default.format(startDate, timeFormat), \" - \").concat(_date4.default.format(endDate, timeFormat));\r\n            case \"DATE\":\r\n                return \"\".concat(_date4.default.format(startDate, dateFormat)).concat(isDurationLessThanDay || isSameDate ? \"\" : \" - \" + _date4.default.format(endDate, dateFormat))\r\n        }\r\n    },\r\n    getResizableAppointmentArea: function(options) {\r\n        var allDay = options.allDay;\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (groups && groups.length) {\r\n            if (allDay || this.getLayoutManager().getRenderingStrategyInstance()._needHorizontalGroupBounds()) {\r\n                var horizontalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\r\n                return {\r\n                    left: horizontalGroupBounds.left,\r\n                    right: horizontalGroupBounds.right,\r\n                    top: 0,\r\n                    bottom: 0\r\n                }\r\n            }\r\n            if (this.getLayoutManager().getRenderingStrategyInstance()._needVerticalGroupBounds(allDay) && this._workSpace._isVerticalGroupedWorkSpace()) {\r\n                var verticalGroupBounds = this._workSpace.getGroupBounds(options.coordinates);\r\n                return {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: verticalGroupBounds.top,\r\n                    bottom: verticalGroupBounds.bottom\r\n                }\r\n            }\r\n        }\r\n    },\r\n    needRecalculateResizableArea: function() {\r\n        return this.getWorkSpace().needRecalculateResizableArea()\r\n    },\r\n    getAppointmentGeometry: function(settings) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getAppointmentGeometry(settings)\r\n    },\r\n    isAllDay: function(appointmentData) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().isAllDay(appointmentData)\r\n    },\r\n    getDeltaTime: function(e, initialSize, itemData) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDeltaTime(e, initialSize, itemData)\r\n    },\r\n    getDropDownAppointmentWidth: function(isAllDay) {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentWidth(this._getViewCountConfig().intervalCount, isAllDay)\r\n    },\r\n    getDropDownAppointmentHeight: function() {\r\n        return this.getLayoutManager().getRenderingStrategyInstance().getDropDownAppointmentHeight()\r\n    },\r\n    getStartDate: function(appointmentData, skipNormalize) {\r\n        return this._getStartDate(appointmentData, skipNormalize)\r\n    },\r\n    getCellWidth: function() {\r\n        return this._cellWidth\r\n    },\r\n    getCellHeight: function() {\r\n        return this._cellHeight\r\n    },\r\n    getResizableStep: function() {\r\n        var cellWidth = this._cellWidth;\r\n        var workSpace = this.getWorkSpace();\r\n        if (workSpace.isGroupedByDate()) {\r\n            return workSpace._getGroupCount() * cellWidth\r\n        }\r\n        return cellWidth\r\n    },\r\n    getEndDate: function(appointmentData, skipNormalize) {\r\n        return this._getEndDate(appointmentData, skipNormalize)\r\n    },\r\n    getRenderingStrategy: function() {\r\n        return this._getAppointmentsRenderingStrategy()\r\n    },\r\n    getMaxAppointmentCountPerCellByType: function(isAllDay) {\r\n        return this.getRenderingStrategyInstance()._getMaxAppointmentCountPerCellByType(isAllDay)\r\n    },\r\n    needCorrectAppointmentDates: function() {\r\n        return this.getRenderingStrategyInstance().needCorrectAppointmentDates()\r\n    },\r\n    getRenderingStrategyDirection: function() {\r\n        return this.getRenderingStrategyInstance().getDirection()\r\n    },\r\n    getWorkSpaceDateTableOffset: function() {\r\n        return this.getWorkSpaceDateTableOffset()\r\n    },\r\n    getFullWeekAppointmentWidth: function(options) {\r\n        var groupIndex = options.groupIndex;\r\n        return this._workSpace.getGroupWidth(groupIndex)\r\n    },\r\n    getMaxAppointmentWidth: function(options) {\r\n        var workSpace = this._workSpace;\r\n        return workSpace.getCellCountToLastViewDate(options.date) * workSpace.getCellWidth()\r\n    },\r\n    updateAppointmentStartDate: function(options) {\r\n        var appointment = options.appointment;\r\n        var firstViewDate = this._workSpace.getStartViewDate();\r\n        var startDate = new Date(options.startDate);\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var updatedStartDate;\r\n        if (this.appointmentTakesAllDay(appointment)) {\r\n            updatedStartDate = _date2.default.normalizeDate(startDate, firstViewDate)\r\n        } else {\r\n            if (startDate < firstViewDate) {\r\n                startDate = firstViewDate\r\n            }\r\n            updatedStartDate = _date2.default.normalizeDate(options.startDate, new Date(startDate))\r\n        }\r\n        return _date2.default.roundDateByStartDayHour(updatedStartDate, startDayHour)\r\n    },\r\n    updateAppointmentEndDate: function(options) {\r\n        var endDate = options.endDate;\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var updatedEndDate = endDate;\r\n        if (endDate.getHours() >= endDayHour) {\r\n            updatedEndDate.setHours(endDayHour, 0, 0, 0)\r\n        } else {\r\n            if (!options.isSameDate && startDayHour > 0 && 60 * endDate.getHours() + endDate.getMinutes() < 60 * startDayHour) {\r\n                updatedEndDate = new Date(updatedEndDate.getTime() - toMs(\"day\"));\r\n                updatedEndDate.setHours(endDayHour, 0, 0, 0)\r\n            }\r\n        }\r\n        return updatedEndDate\r\n    },\r\n    renderCompactAppointments: function(options) {\r\n        this._compactAppointmentsHelper.render(options)\r\n    },\r\n    clearCompactAppointments: function() {\r\n        this._compactAppointmentsHelper.clear()\r\n    },\r\n    supportCompactDropDownAppointments: function() {\r\n        return this._workSpace._supportCompactDropDownAppointments()\r\n    },\r\n    isApplyCompactAppointmentOffset: function() {\r\n        return this._workSpace._isApplyCompactAppointmentOffset()\r\n    },\r\n    getGroupCount: function() {\r\n        return this._workSpace._getGroupCount()\r\n    },\r\n    mapAppointmentFields: function(config) {\r\n        var targetedData = this.fire(\"getTargetedAppointmentData\", config.itemData, config.itemElement, true);\r\n        return {\r\n            appointmentData: config.itemData,\r\n            appointmentElement: config.itemElement,\r\n            targetedAppointmentData: targetedData\r\n        }\r\n    },\r\n    getOffsetByAllDayPanel: function(groupIndex) {\r\n        return this._workSpace._getOffsetByAllDayPanel(groupIndex)\r\n    },\r\n    getGroupTop: function(groupIndex) {\r\n        return this._workSpace._getGroupTop(groupIndex)\r\n    },\r\n    updateResizableArea: function() {\r\n        var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\r\n        var horizontalResizables = (0, _common.grep)($allResizableElements, function(el) {\r\n            var $el = (0, _renderer2.default)(el);\r\n            var resizableInst = $el.dxResizable(\"instance\");\r\n            var area = resizableInst.option(\"area\");\r\n            return (0, _array.inArray)(resizableInst.option(\"handles\"), [\"right left\", \"left right\"]) > -1 && _type2.default.isPlainObject(area)\r\n        });\r\n        (0, _iterator.each)(horizontalResizables, function(_, el) {\r\n            var $el = (0, _renderer2.default)(el);\r\n            var position = _translator2.default.locate($el);\r\n            var appointmentData = this._appointments._getItemData($el);\r\n            var area = this._appointments._calculateResizableArea({\r\n                left: position.left\r\n            }, appointmentData);\r\n            $el.dxResizable(\"instance\").option(\"area\", area)\r\n        }.bind(this))\r\n    },\r\n    getField: function(field, obj) {\r\n        if (!_type2.default.isDefined(this._dataAccessors.getter[field])) {\r\n            return\r\n        }\r\n        return this._dataAccessors.getter[field](obj)\r\n    },\r\n    setField: function(field, obj, value) {\r\n        if (!_type2.default.isDefined(this._dataAccessors.setter[field])) {\r\n            return\r\n        }\r\n        var splitExprStr = this.option(field + \"Expr\").split(\".\");\r\n        var rootField = splitExprStr[0];\r\n        if (void 0 === obj[rootField] && splitExprStr.length > 1) {\r\n            var emptyChain = function(arr) {\r\n                var result = {};\r\n                var tmp = result;\r\n                var arrLength = arr.length - 1;\r\n                for (var i = 1; i < arrLength; i++) {\r\n                    tmp = tmp[arr[i]] = {}\r\n                }\r\n                return result\r\n            }(splitExprStr);\r\n            obj[rootField] = emptyChain\r\n        }\r\n        this._dataAccessors.setter[field](obj, value);\r\n        return obj\r\n    },\r\n    prerenderFilter: function() {\r\n        var dateRange = this.getWorkSpace().getDateRange();\r\n        var resources = this._resourcesManager.getResourcesData();\r\n        var allDay;\r\n        if (!this.option(\"showAllDayPanel\") && this._workSpace.supportAllDayRow()) {\r\n            allDay = false\r\n        }\r\n        return this._appointmentModel.filterLoadedAppointments({\r\n            startDayHour: this._getCurrentViewOption(\"startDayHour\"),\r\n            endDayHour: this._getCurrentViewOption(\"endDayHour\"),\r\n            min: dateRange[0],\r\n            max: dateRange[1],\r\n            resources: resources,\r\n            allDay: allDay,\r\n            firstDayOfWeek: this.getFirstDayOfWeek(),\r\n            recurrenceException: this._getRecurrenceException.bind(this)\r\n        }, this._subscribes.convertDateByTimezone.bind(this))\r\n    },\r\n    dayHasAppointment: function(day, appointment, trimTime) {\r\n        return this.dayHasAppointment(day, appointment, trimTime)\r\n    },\r\n    createResourcesTree: function() {\r\n        return this._resourcesManager.createResourcesTree(this._loadedResources)\r\n    },\r\n    getResourceTreeLeaves: function(tree, appointmentResources) {\r\n        return this._resourcesManager.getResourceTreeLeaves(tree, appointmentResources)\r\n    },\r\n    createReducedResourcesTree: function() {\r\n        var tree = this._resourcesManager.createResourcesTree(this._loadedResources);\r\n        return this._resourcesManager.reduceResourcesTree(tree, this.getFilteredItems())\r\n    },\r\n    groupAppointmentsByResources: function(appointments) {\r\n        var result = {\r\n            0: appointments\r\n        };\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (groups && groups.length && this._resourcesManager.getResourcesData().length) {\r\n            result = this._resourcesManager.groupAppointmentsByResources(appointments, this._loadedResources)\r\n        }\r\n        var totalResourceCount = 0;\r\n        (0, _iterator.each)(this._loadedResources, function(i, resource) {\r\n            if (!i) {\r\n                totalResourceCount = resource.items.length\r\n            } else {\r\n                totalResourceCount *= resource.items.length\r\n            }\r\n        });\r\n        for (var j = 0; j < totalResourceCount; j++) {\r\n            var index = j.toString();\r\n            if (result[index]) {\r\n                continue\r\n            }\r\n            result[index] = []\r\n        }\r\n        return result\r\n    },\r\n    getAgendaRows: function(options) {\r\n        var renderingStrategy = this._layoutManager.getRenderingStrategyInstance();\r\n        var calculateRows = renderingStrategy.calculateRows.bind(renderingStrategy);\r\n        var d = new _deferred.Deferred;\r\n\r\n        function rowsCalculated(appointments) {\r\n            var result = calculateRows(appointments, options.agendaDuration, options.currentDate);\r\n            this._dataSourceLoadedCallback.remove(rowsCalculated);\r\n            d.resolve(result)\r\n        }\r\n        this._dataSourceLoadedCallback.add(rowsCalculated);\r\n        return d.promise()\r\n    },\r\n    getAgendaVerticalStepHeight: function() {\r\n        return this.getWorkSpace().getAgendaVerticalStepHeight()\r\n    },\r\n    getAgendaDuration: function() {\r\n        return this._getCurrentViewOption(\"agendaDuration\")\r\n    },\r\n    getStartViewDate: function() {\r\n        return this.getStartViewDate()\r\n    },\r\n    getEndViewDate: function() {\r\n        return this.getEndViewDate()\r\n    },\r\n    getMaxAppointmentsPerCell: function() {\r\n        return this.getMaxAppointmentsPerCell()\r\n    },\r\n    forceMaxAppointmentPerCell: function() {\r\n        return this.forceMaxAppointmentPerCell()\r\n    },\r\n    onAgendaReady: function(rows) {\r\n        var $appts = this.getAppointmentsInstance()._itemElements();\r\n        var total = 0;\r\n        var applyClass = function(_, count) {\r\n            var index = count + total - 1;\r\n            $appts.eq(index).addClass(_constants.AGENDA_LAST_IN_DATE_APPOINTMENT_CLASS);\r\n            total += count\r\n        };\r\n        for (var i = 0; i < rows.length; i++) {\r\n            (0, _iterator.each)(rows[i], applyClass)\r\n        }\r\n    },\r\n    getTimezone: function() {\r\n        return this._getTimezoneOffsetByOption()\r\n    },\r\n    getClientTimezoneOffset: function(date) {\r\n        date = date || new Date;\r\n        return _uiScheduler2.default.getClientTimezoneOffset(date)\r\n    },\r\n    convertDateByTimezone: function(date, appointmentTimezone) {\r\n        date = new Date(date);\r\n        var tzOffsets = this._subscribes.getComplexOffsets(this, date, appointmentTimezone);\r\n        date = this._subscribes.translateDateToAppointmentTimeZone(date, tzOffsets);\r\n        date = this._subscribes.translateDateToCommonTimeZone(date, tzOffsets);\r\n        return date\r\n    },\r\n    convertDateByTimezoneBack: function(date, appointmentTimezone) {\r\n        date = new Date(date);\r\n        var tzOffsets = this._subscribes.getComplexOffsets(this, date, appointmentTimezone);\r\n        date = this._subscribes.translateDateToAppointmentTimeZone(date, tzOffsets, true);\r\n        date = this._subscribes.translateDateToCommonTimeZone(date, tzOffsets, true);\r\n        return date\r\n    },\r\n    translateDateToAppointmentTimeZone: function(date, offsets, back) {\r\n        var operation = back ? -1 : 1;\r\n        var dateInUTC = date.getTime() - operation * offsets.client * toMs(\"hour\");\r\n        return new Date(dateInUTC + operation * offsets.appointment * toMs(\"hour\"))\r\n    },\r\n    translateDateToCommonTimeZone: function(date, offsets, back) {\r\n        var operation = back ? -1 : 1;\r\n        if (\"number\" === typeof offsets.common) {\r\n            var offset = offsets.common - offsets.appointment;\r\n            var hoursOffset = (offset < 0 ? -1 : 1) * Math.floor(Math.abs(offset));\r\n            var minutesOffset = offset % 1;\r\n            date.setHours(date.getHours() + operation * hoursOffset);\r\n            date.setMinutes(date.getMinutes() + operation * minutesOffset * MINUTES_IN_HOUR)\r\n        }\r\n        return date\r\n    },\r\n    getComplexOffsets: function(scheduler, date, appointmentTimezone) {\r\n        var clientTimezoneOffset = -this.getClientTimezoneOffset(date) / toMs(\"hour\");\r\n        var commonTimezoneOffset = scheduler._getTimezoneOffsetByOption(date);\r\n        var appointmentTimezoneOffset = _utils4.default.calculateTimezoneByValue(appointmentTimezone, date);\r\n        if (\"number\" !== typeof appointmentTimezoneOffset) {\r\n            appointmentTimezoneOffset = clientTimezoneOffset\r\n        }\r\n        return {\r\n            client: clientTimezoneOffset,\r\n            common: commonTimezoneOffset,\r\n            appointment: appointmentTimezoneOffset\r\n        }\r\n    },\r\n    getTimezonesDisplayName: function() {\r\n        return _uiScheduler2.default.getTimezonesDisplayName()\r\n    },\r\n    getTimezoneDisplayNameById: function(id) {\r\n        return _uiScheduler2.default.getTimezoneDisplayNameById(id)\r\n    },\r\n    getSimilarTimezones: function(id) {\r\n        return _uiScheduler2.default.getSimilarTimezones(id)\r\n    },\r\n    getTimezonesIdsByDisplayName: function(displayName) {\r\n        return _uiScheduler2.default.getTimezonesIdsByDisplayName(displayName)\r\n    },\r\n    getTargetedAppointmentData: function(appointmentData, appointmentElement, needConvertByTimezones) {\r\n        var $appointmentElement = (0, _renderer2.default)(appointmentElement);\r\n        var appointmentIndex = $appointmentElement.data(this._appointments._itemIndexKey());\r\n        var targetedData = this._getAppointmentData(appointmentData, {\r\n            skipDateCalculation: true,\r\n            $appointment: $appointmentElement,\r\n            skipHoursProcessing: needConvertByTimezones ? false : true\r\n        });\r\n        var result = {};\r\n        (0, _extend.extend)(true, result, appointmentData, targetedData);\r\n        appointmentElement && this.setTargetedAppointmentResources(result, appointmentElement, appointmentIndex);\r\n        return result\r\n    },\r\n    getAppointmentDurationInMs: function(options) {\r\n        var startDate = options.startDate;\r\n        var endDate = options.endDate;\r\n        var allDay = options.allDay;\r\n        var appointmentDuration = endDate.getTime() - startDate.getTime();\r\n        var dayDuration = toMs(\"day\");\r\n        var visibleDayDuration = this._workSpace.getVisibleDayDuration();\r\n        var result = 0;\r\n        if (allDay) {\r\n            var ceilQuantityOfDays = Math.ceil(appointmentDuration / dayDuration);\r\n            result = ceilQuantityOfDays * visibleDayDuration\r\n        } else {\r\n            var isDifferentDates = !_utils4.default.isSameAppointmentDates(startDate, endDate);\r\n            var floorQuantityOfDays = Math.floor(appointmentDuration / dayDuration);\r\n            var tailDuration;\r\n            if (isDifferentDates) {\r\n                var startDateEndHour = new Date(new Date(startDate).setHours(this.option(\"endDayHour\"), 0, 0));\r\n                var hiddenDayDuration = dayDuration - visibleDayDuration - (startDate.getTime() > startDateEndHour.getTime() ? startDate.getTime() - startDateEndHour.getTime() : 0);\r\n                tailDuration = appointmentDuration - (floorQuantityOfDays ? floorQuantityOfDays * dayDuration : hiddenDayDuration);\r\n                var startDayTime = this.option(\"startDayHour\") * toMs(\"hour\");\r\n                var endPartDuration = endDate - _date2.default.trimTime(endDate);\r\n                if (endPartDuration < startDayTime) {\r\n                    if (floorQuantityOfDays) {\r\n                        tailDuration -= hiddenDayDuration\r\n                    }\r\n                    tailDuration += startDayTime - endPartDuration\r\n                }\r\n            } else {\r\n                tailDuration = appointmentDuration % dayDuration\r\n            }\r\n            if (tailDuration > visibleDayDuration) {\r\n                tailDuration = visibleDayDuration\r\n            }\r\n            result = floorQuantityOfDays * visibleDayDuration + tailDuration || toMs(\"minute\")\r\n        }\r\n        return result\r\n    },\r\n    fixWrongEndDate: function(appointment, startDate, endDate) {\r\n        return this._appointmentModel.fixWrongEndDate(appointment, startDate, endDate)\r\n    },\r\n    getEndDayHour: function() {\r\n        return this._workSpace.option(\"endDayHour\") || this.option(\"endDayHour\")\r\n    },\r\n    getStartDayHour: function() {\r\n        return this._workSpace.option(\"startDayHour\") || this.option(\"startDayHour\")\r\n    },\r\n    isAdaptive: function() {\r\n        return this.option(\"adaptivityEnabled\")\r\n    },\r\n    moveBack: function() {\r\n        var dragBehavior = this.getWorkSpace().dragBehavior;\r\n        dragBehavior && dragBehavior.moveBack()\r\n    },\r\n    validateDayHours: function() {\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        if (startDayHour >= endDayHour) {\r\n            throw _ui2.default.Error(\"E1058\")\r\n        }\r\n    },\r\n    removeDroppableCellClass: function() {\r\n        this._workSpace.removeDroppableCellClass()\r\n    }\r\n};\r\nmodule.exports = subscribes;\r\n"]},"metadata":{},"sourceType":"script"}