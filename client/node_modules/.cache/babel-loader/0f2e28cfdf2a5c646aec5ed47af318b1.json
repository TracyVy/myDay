{"ast":null,"code":"var _jsxFileName = \"/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js\";\nimport React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\nconst CLIENT_ID = \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\"; // Array of API discovery doc URLs for APIs used by the quickstart\n\nvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]; // Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\n\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n/**\n *  Sign in the user upon button click.\n */\n\nfunction handleAuthClick(event) {\n  window.gapi.auth2.getAuthInstance().signIn();\n}\n/**\n *  Sign out the user upon button click.\n */\n\n\nfunction handleSignoutClick(event) {\n  window.gapi.auth2.getAuthInstance().signOut();\n}\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\n\n\nfunction appendPre(message) {\n  var pre = document.getElementById(\"content\");\n  var textContent = document.createTextNode(message + \"\\n\");\n  pre.appendChild(textContent);\n}\n/**\n * Print the summary and start datetime/date of the next ten events in\n * the authorized user's calendar. If no events are found an\n * appropriate message is printed.\n */\n\n\nfunction listUpcomingEvents() {\n  // window.gapi.client.calendar.events\n  //   .list({\n  //     calendarId: \"primary\",\n  //     timeMin: new Date().toISOString(),\n  //     showDeleted: false,\n  //     singleEvents: true,\n  //     maxResults: 10,\n  //     orderBy: \"startTime\",\n  //   })\n  //   .then(function (response) {\n  //     console.log(response);\n  //   })\n  //   .catch(console.log);\n  window.gapi.client.calendar.calendars.get({\n    calendarId: \"primary\"\n  }).then(console.log);\n}\n\nconst GoogleOAuth = () => {\n  React.useEffect(() => {\n    console.log(\"XXXX - mounting\");\n    window.gapi.load(\"client:auth2\", initClient);\n  }, []);\n\n  function initClient() {\n    console.log(window.gapi);\n    window.gapi.client.init({\n      apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function () {\n      console.log(\"Client is connected\"); // Listen for sign-in state changes.\n\n      window.gapi.auth2.getAuthInstance().isSignedIn.listen(() => {\n        listUpcomingEvents();\n      });\n    }, function (error) {\n      appendPre(JSON.stringify(error, null, 2));\n    });\n  }\n\n  const responseGoogle = response => {\n    // const imageURL = response.profileObj.imageUrl;\n    const email = response.profileObj.email;\n    console.log(email); // const name = response.profileObj.givenName;\n\n    const accessToken = response.accessToken;\n    console.log(accessToken);\n    const tokenObj = response.tokenObj;\n    console.log(tokenObj);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"GoogleOAuth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAuthClick,\n    id: \"authorize_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, \"Authorize\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSignoutClick,\n    id: \"signout_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"Sign Out\"), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: CLIENT_ID,\n    buttonText: \"Login\",\n    onSuccess: this.responseGoogle,\n    onFailure: this.responseGoogle // cookiePolicy={\"single_host_origin\"}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: `https://calendar.google.com/calendar/embed?src=${emailID}&ctz=America%2FLos_Angeles`,\n    style: {\n      border: \"0\"\n    },\n    width: 800,\n    height: 600,\n    frameborder: \"0\",\n    scrolling: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default GoogleOAuth;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/UCB_Coding_Bootcamp/project_3/calendar/client/src/components/Google_Oauth/GoogleOAuth.js"],"names":["React","Component","GoogleLogin","CLIENT_ID","DISCOVERY_DOCS","SCOPES","handleAuthClick","event","window","gapi","auth2","getAuthInstance","signIn","handleSignoutClick","signOut","appendPre","message","pre","document","getElementById","textContent","createTextNode","appendChild","listUpcomingEvents","client","calendar","calendars","get","calendarId","then","console","log","GoogleOAuth","useEffect","load","initClient","init","apiKey","clientId","discoveryDocs","scope","isSignedIn","listen","error","JSON","stringify","responseGoogle","response","email","profileObj","accessToken","tokenObj","emailID","border"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GoogleLogin from \"react-google-login\";\n\nconst CLIENT_ID =\n  \"522668337222-7ec4busvjmku0dbnpe3s6l951b0mtdd2.apps.googleusercontent.com\";\n\n// Array of API discovery doc URLs for APIs used by the quickstart\nvar DISCOVERY_DOCS = [\n  \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\n];\n\n// Authorization scopes required by the API; multiple scopes can be\n// included, separated by spaces.\nvar SCOPES = \"https://www.googleapis.com/auth/calendar.readonly\";\n\n/**\n *  Sign in the user upon button click.\n */\nfunction handleAuthClick(event) {\n  window.gapi.auth2.getAuthInstance().signIn();\n}\n\n/**\n *  Sign out the user upon button click.\n */\nfunction handleSignoutClick(event) {\n  window.gapi.auth2.getAuthInstance().signOut();\n}\n\n/**\n * Append a pre element to the body containing the given message\n * as its text node. Used to display the results of the API call.\n *\n * @param {string} message Text to be placed in pre element.\n */\nfunction appendPre(message) {\n  var pre = document.getElementById(\"content\");\n  var textContent = document.createTextNode(message + \"\\n\");\n  pre.appendChild(textContent);\n}\n\n/**\n * Print the summary and start datetime/date of the next ten events in\n * the authorized user's calendar. If no events are found an\n * appropriate message is printed.\n */\nfunction listUpcomingEvents() {\n  // window.gapi.client.calendar.events\n  //   .list({\n  //     calendarId: \"primary\",\n  //     timeMin: new Date().toISOString(),\n  //     showDeleted: false,\n  //     singleEvents: true,\n  //     maxResults: 10,\n  //     orderBy: \"startTime\",\n  //   })\n  //   .then(function (response) {\n  //     console.log(response);\n  //   })\n  //   .catch(console.log);\n  window.gapi.client.calendar.calendars\n    .get({\n      calendarId: \"primary\",\n    })\n    .then(console.log);\n}\n\nconst GoogleOAuth = () => {\n  React.useEffect(() => {\n    console.log(\"XXXX - mounting\");\n    window.gapi.load(\"client:auth2\", initClient);\n  }, []);\n\n  function initClient() {\n    console.log(window.gapi);\n    window.gapi.client\n      .init({\n        apiKey: \"AIzaSyBIa7trpR0-6xMIs44G5PkTqGtE71O1jLU\",\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n      .then(\n        function () {\n          console.log(\"Client is connected\");\n          // Listen for sign-in state changes.\n          window.gapi.auth2.getAuthInstance().isSignedIn.listen(() => {\n            listUpcomingEvents();\n          });\n        },\n        function (error) {\n          appendPre(JSON.stringify(error, null, 2));\n        }\n      );\n  }\n\n  const responseGoogle = (response) => {\n    // const imageURL = response.profileObj.imageUrl;\n    const email = response.profileObj.email;\n    console.log(email);\n    // const name = response.profileObj.givenName;\n    const accessToken = response.accessToken;\n    console.log(accessToken);\n    const tokenObj = response.tokenObj;\n    console.log(tokenObj);\n  };\n\n  return (\n    <div className=\"GoogleOAuth\">\n      <button onClick={handleAuthClick} id=\"authorize_button\">\n        Authorize\n      </button>\n      <button onClick={handleSignoutClick} id=\"signout_button\">\n        Sign Out\n      </button>\n      <GoogleLogin\n        clientId={CLIENT_ID}\n        buttonText=\"Login\"\n        onSuccess={this.responseGoogle}\n        onFailure={this.responseGoogle}\n        // cookiePolicy={\"single_host_origin\"}\n      />\n      <iframe\n        src={`https://calendar.google.com/calendar/embed?src=${emailID}&ctz=America%2FLos_Angeles`}\n        style={{ border: \"0\" }}\n        width={800}\n        height={600}\n        frameborder=\"0\"\n        scrolling=\"no\"\n      ></iframe>\n    </div>\n  );\n};\n\nexport default GoogleOAuth;\n"]},"metadata":{},"sourceType":"module"}