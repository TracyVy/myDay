{"ast":null,"code":"/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n\n    if (\"value\" in descriptor) {\n      descriptor.writable = true;\n    }\n\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) {\n    _defineProperties(Constructor.prototype, protoProps);\n  }\n\n  if (staticProps) {\n    _defineProperties(Constructor, staticProps);\n  }\n\n  return Constructor;\n}\n\nvar $ = require(\"../../../core/renderer\");\n\nvar domAdapter = require(\"../../../core/dom_adapter\");\n\nvar eventsEngine = require(\"../../../events/core/events_engine\");\n\nvar dataUtils = require(\"../../../core/element_data\");\n\nvar dateUtils = require(\"../../../core/utils/date\");\n\nvar typeUtils = require(\"../../../core/utils/type\");\n\nvar windowUtils = require(\"../../../core/utils/window\");\n\nvar getPublicElement = require(\"../../../core/utils/dom\").getPublicElement;\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar each = require(\"../../../core/utils/iterator\").each;\n\nvar getBoundingRect = require(\"../../../core/utils/position\").getBoundingRect;\n\nvar messageLocalization = require(\"../../../localization/message\");\n\nvar dateLocalization = require(\"../../../localization/date\");\n\nvar toMs = dateUtils.dateToMilliseconds;\n\nvar Widget = require(\"../../widget/ui.widget\");\n\nvar abstract = Widget.abstract;\n\nvar noop = require(\"../../../core/utils/common\").noop;\n\nvar isDefined = require(\"../../../core/utils/type\").isDefined;\n\nvar publisherMixin = require(\"../ui.scheduler.publisher_mixin\");\n\nvar eventUtils = require(\"../../../events/utils\");\n\nvar pointerEvents = require(\"../../../events/pointer\");\n\nvar errors = require(\"../../widget/ui.errors\");\n\nvar clickEvent = require(\"../../../events/click\");\n\nvar contextMenuEvent = require(\"../../../events/contextmenu\");\n\nvar dragEvents = require(\"../../../events/drag\");\n\nvar Scrollable = require(\"../../scroll_view/ui.scrollable\");\n\nvar HorizontalGroupedStrategy = require(\"./ui.scheduler.work_space.grouped.strategy.horizontal\");\n\nvar VerticalGroupedStrategy = require(\"./ui.scheduler.work_space.grouped.strategy.vertical\");\n\nvar tableCreator = require(\"../ui.scheduler.table_creator\");\n\nvar VerticalShader = require(\"../shaders/ui.scheduler.current_time_shader.vertical\");\n\nvar AppointmentDragBehavior = require(\"../appointmentDragBehavior\");\n\nvar FIXED_CONTAINER_CLASS = require(\"../constants\").FIXED_CONTAINER_CLASS;\n\nvar timeZoneUtils = require(\"../utils.timeZone\");\n\nvar COMPONENT_CLASS = \"dx-scheduler-work-space\";\nvar GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-grouped\";\nvar VERTICAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-vertical-grouped\";\nvar WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = \"dx-scheduler-work-space-vertical-group-table\";\nvar WORKSPACE_WITH_BOTH_SCROLLS_CLASS = \"dx-scheduler-work-space-both-scrollbar\";\nvar WORKSPACE_WITH_COUNT_CLASS = \"dx-scheduler-work-space-count\";\nvar WORKSPACE_WITH_GROUP_BY_DATE_CLASS = \"dx-scheduler-work-space-group-by-date\";\nvar WORKSPACE_WITH_ODD_CELLS_CLASS = \"dx-scheduler-work-space-odd-cells\";\nvar TIME_PANEL_CLASS = \"dx-scheduler-time-panel\";\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\nvar ALL_DAY_PANEL_CLASS = \"dx-scheduler-all-day-panel\";\nvar ALL_DAY_TABLE_CLASS = \"dx-scheduler-all-day-table\";\nvar ALL_DAY_CONTAINER_CLASS = \"dx-scheduler-all-day-appointments\";\nvar ALL_DAY_TITLE_CLASS = \"dx-scheduler-all-day-title\";\nvar ALL_DAY_TITLE_HIDDEN_CLASS = \"dx-scheduler-all-day-title-hidden\";\nvar ALL_DAY_TABLE_CELL_CLASS = \"dx-scheduler-all-day-table-cell\";\nvar ALL_DAY_TABLE_ROW_CLASS = \"dx-scheduler-all-day-table-row\";\nvar WORKSPACE_WITH_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day\";\nvar WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day-collapsed\";\nvar WORKSPACE_WITH_MOUSE_SELECTION_CLASS = \"dx-scheduler-work-space-mouse-selection\";\nvar HORIZONTAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-horizontal\";\nvar VERTICAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-vertical\";\nvar HEADER_PANEL_CLASS = \"dx-scheduler-header-panel\";\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\nvar GROUP_ROW_CLASS = \"dx-scheduler-group-row\";\nvar GROUP_HEADER_CLASS = \"dx-scheduler-group-header\";\nvar GROUP_HEADER_CONTENT_CLASS = \"dx-scheduler-group-header-content\";\nvar DATE_TABLE_CLASS = \"dx-scheduler-date-table\";\nvar DATE_TABLE_CELL_CLASS = \"dx-scheduler-date-table-cell\";\nvar DATE_TABLE_ROW_CLASS = \"dx-scheduler-date-table-row\";\nvar DATE_TABLE_FOCUSED_CELL_CLASS = \"dx-scheduler-focused-cell\";\nvar DATE_TABLE_DROPPABLE_CELL_CLASS = \"dx-scheduler-date-table-droppable-cell\";\nvar SCHEDULER_HEADER_SCROLLABLE_CLASS = \"dx-scheduler-header-scrollable\";\nvar SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = \"dx-scheduler-sidebar-scrollable\";\nvar SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = \"dx-scheduler-date-table-scrollable\";\nvar SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, \"dxSchedulerWorkSpace\");\nvar SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME = eventUtils.addNamespace(dragEvents.enter, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXDROP_EVENT_NAME = eventUtils.addNamespace(dragEvents.drop, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME = eventUtils.addNamespace(dragEvents.leave, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXCLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, \"dxSchedulerDateTable\");\nvar SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = eventUtils.addNamespace(pointerEvents.move, \"dxSchedulerDateTable\");\nvar CELL_DATA = \"dxCellData\";\nvar DATE_TABLE_CELL_BORDER = 1;\nvar DATE_TABLE_MIN_CELL_WIDTH = 75;\nvar DAY_MS = toMs(\"day\");\nvar HOUR_MS = toMs(\"hour\");\nvar SCHEDULER_DRAG_AND_DROP_SELECTOR = \".\".concat(DATE_TABLE_CLASS, \" td, .\").concat(ALL_DAY_TABLE_CLASS, \" td\");\n\nvar ScrollSemaphore = function () {\n  function ScrollSemaphore() {\n    _classCallCheck(this, ScrollSemaphore);\n\n    this.counter = 0;\n  }\n\n  _createClass(ScrollSemaphore, [{\n    key: \"isFree\",\n    value: function () {\n      return 0 === this.counter;\n    }\n  }, {\n    key: \"take\",\n    value: function () {\n      this.counter++;\n    }\n  }, {\n    key: \"release\",\n    value: function () {\n      this.counter--;\n\n      if (this.counter < 0) {\n        this.counter = 0;\n      }\n    }\n  }]);\n\n  return ScrollSemaphore;\n}();\n\nvar formatWeekday = function (date) {\n  return dateLocalization.getDayNames(\"abbreviated\")[date.getDay()];\n};\n\nvar SchedulerWorkSpace = Widget.inherit({\n  _supportedKeys: function () {\n    var clickHandler = function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (this._focusedCells && this._focusedCells.length) {\n        var $itemElement = $(this.option(\"focusedElement\"));\n        var $cellElement = $itemElement.length ? $itemElement : this._focusedCells;\n        e.target = this._focusedCells;\n        this._showPopup = true;\n\n        this._cellClickAction({\n          event: e,\n          cellElement: $(this._focusedCells),\n          cellData: this.getCellData($cellElement)\n        });\n      }\n    };\n\n    var arrowPressHandler = function (e, cell) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      this._moveToCell(cell, e.shiftKey);\n    };\n\n    return extend(this.callBase(), {\n      enter: clickHandler,\n      space: clickHandler,\n      downArrow: function (e) {\n        var $cell = this._getCellFromNextRow(\"next\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $cell);\n      },\n      upArrow: function (e) {\n        var $cell = this._getCellFromNextRow(\"prev\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $cell);\n      },\n      rightArrow: function (e) {\n        var $rightCell = this._getCellFromNextColumn(\"next\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $rightCell);\n      },\n      leftArrow: function (e) {\n        var $leftCell = this._getCellFromNextColumn(\"prev\", e.shiftKey);\n\n        arrowPressHandler.call(this, e, $leftCell);\n      }\n    });\n  },\n  _isRTL: function () {\n    return this.option(\"rtlEnabled\");\n  },\n  _getFocusedCell: function () {\n    return this._$focusedCell || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0);\n  },\n  _getAllFocusedCells: function () {\n    return this._focusedCells || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0);\n  },\n  _getCellFromNextRow: function (direction) {\n    var $currentCell = this._$focusedCell;\n\n    if (isDefined($currentCell)) {\n      var cellIndex = $currentCell.index();\n      var $row = $currentCell.parent();\n      var $cell = $row[direction]().children().eq(cellIndex);\n      $cell = this._checkForViewBounds($cell);\n      return $cell;\n    }\n  },\n  _checkForViewBounds: function ($item) {\n    if (!$item.length) {\n      $item = this._$focusedCell;\n    }\n\n    return $item;\n  },\n  _getCellFromNextColumn: function (direction, isMultiSelection) {\n    var $focusedCell = this._$focusedCell;\n\n    if (!isDefined($focusedCell)) {\n      return;\n    }\n\n    var $nextCell;\n    var $row = $focusedCell.parent();\n    var nextColumnDirection = direction;\n    var isDirectionNext = \"next\" === direction;\n    var previousColumnDirection = isDirectionNext ? \"prev\" : \"next\";\n\n    var isRTL = this._isRTL();\n\n    var groupCount = this._getGroupCount();\n\n    var isHorizontalGrouping = this._isHorizontalGroupedWorkSpace();\n\n    var isGroupedByDate = this.isGroupedByDate();\n\n    var totalCellCount = this._getTotalCellCount(groupCount);\n\n    var rowCellCount = isMultiSelection && !isGroupedByDate ? this._getCellCount() : totalCellCount;\n    var lastIndexInRow = rowCellCount - 1;\n    var currentIndex = $focusedCell.index();\n    var step = isGroupedByDate && isMultiSelection ? groupCount : 1;\n\n    var isEdgeCell = this._isEdgeCell(isHorizontalGrouping ? totalCellCount - 1 : lastIndexInRow, currentIndex, step, direction);\n\n    var sign = isRTL ? 1 : -1;\n    var directionSign = isDirectionNext ? 1 : -1;\n    var resultingSign = sign * directionSign;\n\n    if (isEdgeCell || isMultiSelection && this._isGroupEndCell($focusedCell, direction)) {\n      var nextIndex = currentIndex - resultingSign * step + resultingSign * rowCellCount;\n      var rowDirection = isRTL ? previousColumnDirection : nextColumnDirection;\n      $nextCell = $row[rowDirection]().children().eq(nextIndex);\n      $nextCell = this._checkForViewBounds($nextCell);\n    } else {\n      $nextCell = $row.children().eq(currentIndex - resultingSign * step);\n    }\n\n    return $nextCell;\n  },\n  _isEdgeCell: function (lastIndexInRow, cellIndex, step, direction) {\n    var isRTL = this._isRTL();\n\n    var isDirectionNext = \"next\" === direction;\n    var rightEdgeCellIndex = isRTL ? 0 : lastIndexInRow;\n    var leftEdgeCellIndex = isRTL ? lastIndexInRow : 0;\n    var edgeCellIndex = isDirectionNext ? rightEdgeCellIndex : leftEdgeCellIndex;\n    var isNextCellGreaterThanEdge = cellIndex + step > edgeCellIndex;\n    var isNextCellLessThanEdge = cellIndex - step < edgeCellIndex;\n    var isRightEdgeCell = isRTL ? isNextCellLessThanEdge : isNextCellGreaterThanEdge;\n    var isLeftEdgeCell = isRTL ? isNextCellGreaterThanEdge : isNextCellLessThanEdge;\n    return isDirectionNext ? isRightEdgeCell : isLeftEdgeCell;\n  },\n  _isGroupEndCell: function ($cell, direction) {\n    if (this.isGroupedByDate()) {\n      return false;\n    }\n\n    var isDirectionNext = \"next\" === direction;\n\n    var cellsInRow = this._getCellCount();\n\n    var currentCellIndex = $cell.index();\n    var result = currentCellIndex % cellsInRow;\n    var endCell = isDirectionNext ? cellsInRow - 1 : 0;\n    var startCell = isDirectionNext ? 0 : cellsInRow - 1;\n    return this._isRTL() ? result === startCell : result === endCell;\n  },\n  _moveToCell: function ($cell, isMultiSelection) {\n    isMultiSelection = isMultiSelection && this.option(\"allowMultipleCellSelection\");\n\n    this._setFocusedCell($cell, isMultiSelection);\n\n    this._dateTableScrollable.scrollToElement($cell);\n  },\n  _setFocusedCell: function ($cell, isMultiSelection) {\n    if (!isDefined($cell) || !$cell.length) {\n      return;\n    }\n\n    this._releaseFocusedCell();\n\n    this._focusedCells = [];\n\n    if (isMultiSelection) {\n      $cell = this._correctCellForGroup($cell);\n      var orientation = \"day\" === this.option(\"type\") && (!this.option(\"groups\").length || \"vertical\" === this.option(\"groupOrientation\")) ? \"vertical\" : \"horizontal\";\n\n      var $targetCells = this._getCellsBetween($cell, this._$prevCell, orientation);\n\n      this._focusedCells = $targetCells.toArray();\n    } else {\n      this._focusedCells = [$cell.get(0)];\n      this._$prevCell = $cell;\n    }\n\n    var $focusedCells = $(this._focusedCells);\n\n    this._toggleFocusClass(true, $focusedCells);\n\n    this.setAria(\"label\", \"Add appointment\", $focusedCells);\n\n    this._toggleFocusedCellClass(true, $cell);\n\n    this._$focusedCell = $cell;\n    var selectedCellData = this.getFocusedCellData();\n    this.option(\"selectedCellData\", selectedCellData);\n\n    this._selectionChangedAction({\n      selectedCellData: selectedCellData\n    });\n  },\n  _correctCellForGroup: function ($cell) {\n    var $focusedCell = this._$focusedCell;\n\n    var cellGroupIndex = this._getGroupIndexByCell($cell);\n\n    var focusedCellGroupIndex = this._getGroupIndexByCell($focusedCell);\n\n    var isDifferentTables = this._hasAllDayClass($cell) !== this._hasAllDayClass($focusedCell);\n\n    return focusedCellGroupIndex !== cellGroupIndex || isDifferentTables ? $focusedCell : $cell;\n  },\n  _getCellsBetween: function ($first, $last, direction) {\n    var isAllDayTable = this._hasAllDayClass($last);\n\n    var $cells = this._getCells(isAllDayTable, direction);\n\n    var firstIndex = $cells.index($first);\n    var lastIndex = $cells.index($last);\n\n    if (firstIndex > lastIndex) {\n      var buffer = firstIndex;\n      firstIndex = lastIndex;\n      lastIndex = buffer;\n    }\n\n    $cells = $cells.slice(firstIndex, lastIndex + 1);\n\n    if (this._getGroupCount() > 1) {\n      var result = [];\n\n      var focusedGroupIndex = this._getGroupIndexByCell($first);\n\n      each($cells, function (_, cell) {\n        var groupIndex = this._getGroupIndexByCell($(cell));\n\n        if (focusedGroupIndex === groupIndex) {\n          result.push(cell);\n        }\n      }.bind(this));\n      $cells = $(result);\n    }\n\n    return $cells;\n  },\n  _hasAllDayClass: function ($cell) {\n    return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS);\n  },\n  _getGroupIndexByCell: function ($cell) {\n    return this._groupedStrategy.getGroupIndexByCell($cell);\n  },\n  _toggleFocusedCellClass: function (isFocused, $element) {\n    var $focusTarget = $element && $element.length ? $element : this._focusTarget();\n    $focusTarget.toggleClass(DATE_TABLE_FOCUSED_CELL_CLASS, isFocused);\n  },\n  _releaseFocusedCell: function ($cell) {\n    $cell = $cell || $(this._focusedCells);\n\n    if (isDefined($cell) && $cell.length) {\n      this._toggleFocusClass(false, $cell);\n\n      this._toggleFocusedCellClass(false, $cell);\n\n      this.setAria(\"label\", void 0, $cell);\n    }\n\n    this.option(\"selectedCellData\", []);\n  },\n  _focusInHandler: function (e) {\n    if ($(e.target).is(this._focusTarget()) && false !== this._isCellClick) {\n      delete this._isCellClick;\n      delete this._contextMenuHandled;\n      this.callBase.apply(this, arguments);\n\n      var $cell = this._getFocusedCell();\n\n      this._setFocusedCell($cell);\n    }\n  },\n  _focusOutHandler: function () {\n    this.callBase.apply(this, arguments);\n\n    if (!this._contextMenuHandled) {\n      this._releaseFocusedCell();\n    }\n  },\n  _focusTarget: function () {\n    return this.$element();\n  },\n  _activeStateUnit: \".\" + DATE_TABLE_CELL_CLASS + \", .\" + ALL_DAY_TABLE_CELL_CLASS,\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      currentDate: new Date(),\n      intervalCount: 1,\n      startDate: null,\n      firstDayOfWeek: void 0,\n      startDayHour: 0,\n      endDayHour: 24,\n      hoursInterval: .5,\n      activeStateEnabled: true,\n      hoverStateEnabled: true,\n      groups: [],\n      showAllDayPanel: true,\n      allDayExpanded: false,\n      onCellClick: null,\n      crossScrollingEnabled: false,\n      dataCellTemplate: null,\n      timeCellTemplate: null,\n      resourceCellTemplate: null,\n      dateCellTemplate: null,\n      allowMultipleCellSelection: true,\n      indicatorTime: new Date(),\n      indicatorUpdateInterval: 5 * toMs(\"minute\"),\n      shadeUntilCurrentTime: true,\n      groupOrientation: \"horizontal\",\n      selectedCellData: [],\n      groupByDate: false\n    });\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"startDayHour\":\n      case \"endDayHour\":\n        this.invoke(\"validateDayHours\");\n\n        this._cleanWorkSpace();\n\n        break;\n\n      case \"dateCellTemplate\":\n      case \"resourceCellTemplate\":\n      case \"dataCellTemplate\":\n      case \"timeCellTemplate\":\n      case \"hoursInterval\":\n      case \"firstDayOfWeek\":\n      case \"currentDate\":\n      case \"startDate\":\n        this._cleanWorkSpace();\n\n        break;\n\n      case \"groups\":\n        this._cleanView();\n\n        this._removeAllDayElements();\n\n        this._initGrouping();\n\n        this.repaint();\n        break;\n\n      case \"groupOrientation\":\n        this._initGroupedStrategy();\n\n        this._createAllDayPanelElements();\n\n        this._removeAllDayElements();\n\n        this._cleanWorkSpace();\n\n        this._toggleGroupByDateClass();\n\n        break;\n\n      case \"showAllDayPanel\":\n        if (this._isVerticalGroupedWorkSpace()) {\n          this._cleanView();\n\n          this._removeAllDayElements();\n\n          this._initGrouping();\n\n          this.repaint();\n        } else {\n          this._toggleAllDayVisibility();\n        }\n\n        break;\n\n      case \"allDayExpanded\":\n        this._changeAllDayVisibility();\n\n        this._attachTablesEvents();\n\n        this.headerPanelOffsetRecalculate();\n\n        this._updateScrollable();\n\n        break;\n\n      case \"onSelectionChanged\":\n        this._createSelectionChangedAction();\n\n        break;\n\n      case \"onCellClick\":\n        this._createCellClickAction();\n\n        break;\n\n      case \"onCellContextMenu\":\n        this._attachContextMenuEvent();\n\n        break;\n\n      case \"intervalCount\":\n        this._cleanWorkSpace();\n\n        this._toggleWorkSpaceCountClass();\n\n        this._toggleFixedScrollableClass();\n\n        break;\n\n      case \"groupByDate\":\n        this._cleanWorkSpace();\n\n        this._toggleGroupByDateClass();\n\n        break;\n\n      case \"crossScrollingEnabled\":\n        this._toggleHorizontalScrollClass();\n\n        this._dateTableScrollable.option(this._dateTableScrollableConfig());\n\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"allowMultipleCellSelection\":\n        break;\n\n      case \"selectedCellData\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _cleanWorkSpace: function () {\n    this._cleanView();\n\n    this._toggleGroupedClass();\n\n    this._toggleWorkSpaceWithOddCells();\n\n    this._renderView();\n  },\n  _init: function () {\n    this._headerSemaphore = new ScrollSemaphore();\n    this._sideBarSemaphore = new ScrollSemaphore();\n    this._dataTableSemaphore = new ScrollSemaphore();\n    this.callBase();\n\n    this._initGrouping();\n\n    this._toggleHorizontalScrollClass();\n\n    this._toggleWorkSpaceCountClass();\n\n    this._toggleGroupByDateClass();\n\n    this._toggleWorkSpaceWithOddCells();\n\n    this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass());\n  },\n  _initGrouping: function () {\n    this._initGroupedStrategy();\n\n    this._toggleGroupingDirectionClass();\n\n    this._toggleGroupByDateClass();\n  },\n  _initGroupedStrategy: function () {\n    var strategyName = this.option(\"groups\").length ? this.option(\"groupOrientation\") : this._getDefaultGroupStrategy();\n    var Strategy = \"vertical\" === strategyName ? VerticalGroupedStrategy : HorizontalGroupedStrategy;\n    this._groupedStrategy = new Strategy(this);\n  },\n  _getDefaultGroupStrategy: function () {\n    return \"horizontal\";\n  },\n  _isVerticalGroupedWorkSpace: function () {\n    return !!this.option(\"groups\").length && \"vertical\" === this.option(\"groupOrientation\");\n  },\n  _isHorizontalGroupedWorkSpace: function () {\n    return !!this.option(\"groups\").length && \"horizontal\" === this.option(\"groupOrientation\");\n  },\n  _toggleHorizontalScrollClass: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option(\"crossScrollingEnabled\"));\n  },\n  _toggleGroupByDateClass: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate());\n  },\n  _toggleWorkSpaceCountClass: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount());\n  },\n  _isWorkSpaceWithCount: function () {\n    return this.option(\"intervalCount\") > 1;\n  },\n  _toggleWorkSpaceWithOddCells: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells());\n  },\n  _isWorkspaceWithOddCells: function () {\n    return .5 === this.option(\"hoursInterval\");\n  },\n  _toggleGroupingDirectionClass: function () {\n    this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace());\n  },\n  _getRealGroupOrientation: function () {\n    return this._isVerticalGroupedWorkSpace() ? \"vertical\" : \"horizontal\";\n  },\n  _getTimePanelClass: function () {\n    return TIME_PANEL_CLASS;\n  },\n  _getDateTableClass: function () {\n    return DATE_TABLE_CLASS;\n  },\n  _getDateTableRowClass: function () {\n    return DATE_TABLE_ROW_CLASS;\n  },\n  _getDateTableCellClass: function (i, j) {\n    var cellClass = DATE_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS + \" \" + VERTICAL_SIZES_CLASS;\n    return this._needApplyLastGroupCellClass() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1, i, j) : cellClass;\n  },\n  _needApplyLastGroupCellClass: function () {\n    return true;\n  },\n  _getGroupRowClass: function () {\n    return GROUP_ROW_CLASS;\n  },\n  _getGroupHeaderClass: function (i) {\n    var cellClass = GROUP_HEADER_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1);\n  },\n  _getGroupHeaderContentClass: function () {\n    return GROUP_HEADER_CONTENT_CLASS;\n  },\n  _initWorkSpaceUnits: function () {\n    this._$headerPanel = $(\"<table>\");\n    this._$thead = $(\"<thead>\").appendTo(this._$headerPanel);\n    this._$fixedContainer = $(\"<div>\").addClass(FIXED_CONTAINER_CLASS);\n    this._$allDayContainer = $(\"<div>\").addClass(ALL_DAY_CONTAINER_CLASS);\n\n    this._initAllDayPanelElements();\n\n    this._createAllDayPanelElements();\n\n    this._$timePanel = $(\"<table>\").addClass(this._getTimePanelClass());\n    this._$dateTable = $(\"<table>\");\n    this._$groupTable = $(\"<div>\").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS);\n  },\n  _initAllDayPanelElements: function () {\n    this._allDayTitles = [];\n    this._allDayTables = [];\n    this._allDayPanels = [];\n  },\n  _createAllDayPanelElements: function () {\n    var groupCount = this._getGroupCount();\n\n    if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {\n      for (var i = 0; i < groupCount; i++) {\n        var $allDayTitle = $(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(messageLocalization.format(\"dxScheduler-allDay\"));\n\n        this._allDayTitles.push($allDayTitle);\n\n        this._$allDayTable = $(\"<table>\");\n\n        this._allDayTables.push(this._$allDayTable);\n\n        this._$allDayPanel = $(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\n\n        this._allDayPanels.push(this._$allDayPanel);\n      }\n    } else {\n      this._$allDayTitle = $(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(messageLocalization.format(\"dxScheduler-allDay\")).appendTo(this.$element());\n      this._$allDayTable = $(\"<table>\");\n      this._$allDayPanel = $(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\n    }\n  },\n  _initDateTableScrollable: function () {\n    var $dateTableScrollable = $(\"<div>\").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);\n    this._dateTableScrollable = this._createComponent($dateTableScrollable, Scrollable, this._dateTableScrollableConfig());\n  },\n  _dateTableScrollableConfig: function () {\n    var config = {\n      useKeyboard: false,\n      bounceEnabled: false,\n      updateManually: true,\n      pushBackValue: 0\n    };\n\n    if (this._needCreateCrossScrolling()) {\n      config = extend(config, this._createCrossScrollingConfig());\n    }\n\n    return config;\n  },\n  _createCrossScrollingConfig: function () {\n    var _this = this;\n\n    var config = {};\n    config.direction = \"both\";\n\n    config.onScroll = function (e) {\n      _this._dataTableSemaphore.take();\n\n      _this._sideBarSemaphore.isFree() && _this._sidebarScrollable && _this._sidebarScrollable.scrollTo({\n        top: e.scrollOffset.top\n      });\n      _this._headerSemaphore.isFree() && _this._headerScrollable && _this._headerScrollable.scrollTo({\n        left: e.scrollOffset.left\n      });\n\n      _this._dataTableSemaphore.release();\n    };\n\n    config.onEnd = function () {\n      _this.notifyObserver(\"updateResizableArea\", {});\n    };\n\n    return config;\n  },\n  _createWorkSpaceElements: function () {\n    if (this.option(\"crossScrollingEnabled\")) {\n      this._createWorkSpaceScrollableElements();\n    } else {\n      this._createWorkSpaceStaticElements();\n    }\n  },\n  _createWorkSpaceStaticElements: function () {\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._dateTableScrollable.$content().append(this._$allDayContainer, this._$groupTable, this._$timePanel, this._$dateTable);\n\n      this.$element().append(this._$fixedContainer, this._$headerPanel, this._dateTableScrollable.$element());\n    } else {\n      this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\n\n      this.$element().append(this._$fixedContainer, this._$headerPanel, this._$allDayContainer, this._$allDayPanel, this._dateTableScrollable.$element());\n    }\n  },\n  _createWorkSpaceScrollableElements: function () {\n    this.$element().append(this._$fixedContainer);\n\n    this._createHeaderScrollable();\n\n    this._createSidebarScrollable();\n\n    this.$element().append(this._dateTableScrollable.$element());\n\n    this._headerScrollable.$content().append(this._$headerPanel);\n\n    this._dateTableScrollable.$content().append(this._$dateTable);\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._dateTableScrollable.$content().prepend(this._$allDayContainer);\n\n      this._sidebarScrollable.$content().append(this._$groupTable, this._$timePanel);\n    } else {\n      this._headerScrollable.$content().append(this._$allDayContainer, this._$allDayPanel);\n    }\n\n    this._sidebarScrollable.$content().append(this._$timePanel);\n  },\n  _createHeaderScrollable: function () {\n    var $headerScrollable = $(\"<div>\").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this.$element());\n    this._headerScrollable = this._createComponent($headerScrollable, Scrollable, this._headerScrollableConfig());\n  },\n  _headerScrollableConfig: function () {\n    var _this2 = this;\n\n    var config = {\n      useKeyboard: false,\n      showScrollbar: false,\n      direction: \"horizontal\",\n      useNative: false,\n      updateManually: true,\n      bounceEnabled: false,\n      pushBackValue: 0,\n      onScroll: function (e) {\n        _this2._headerSemaphore.take();\n\n        _this2._dataTableSemaphore.isFree() && _this2._dateTableScrollable.scrollTo({\n          left: e.scrollOffset.left\n        });\n\n        _this2._headerSemaphore.release();\n      }\n    };\n    return config;\n  },\n  _createSidebarScrollable: function () {\n    var _this3 = this;\n\n    var $timePanelScrollable = $(\"<div>\").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this.$element());\n    this._sidebarScrollable = this._createComponent($timePanelScrollable, Scrollable, {\n      useKeyboard: false,\n      showScrollbar: false,\n      direction: \"vertical\",\n      useNative: false,\n      updateManually: true,\n      bounceEnabled: false,\n      pushBackValue: 0,\n      onScroll: function (e) {\n        _this3._sideBarSemaphore.take();\n\n        _this3._dataTableSemaphore.isFree() && _this3._dateTableScrollable.scrollTo({\n          top: e.scrollOffset.top\n        });\n\n        _this3._sideBarSemaphore.release();\n      }\n    });\n  },\n  _visibilityChanged: function (visible) {\n    if (visible && this._isVerticalGroupedWorkSpace()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n\n    if (visible && this._needCreateCrossScrolling()) {\n      this._setTableSizes();\n    }\n  },\n  _attachTableClasses: function () {\n    this._addTableClass(this._$dateTable, this._getDateTableClass());\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      var groupCount = this._getGroupCount();\n\n      for (var i = 0; i < groupCount; i++) {\n        this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS);\n      }\n    } else {\n      this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS);\n    }\n  },\n  _attachHeaderTableClasses: function () {\n    this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS);\n  },\n  _addTableClass: function ($el, className) {\n    $el && !$el.hasClass(className) && $el.addClass(className);\n  },\n  _setTableSizes: function () {\n    this._attachTableClasses();\n\n    var cellWidth = this.getCellWidth();\n\n    if (cellWidth < this.getCellMinWidth()) {\n      cellWidth = this.getCellMinWidth();\n    }\n\n    var minWidth = this.getWorkSpaceMinWidth();\n\n    var $headerCells = this._$headerPanel.find(\"tr\").last().find(\"th\");\n\n    var width = cellWidth * $headerCells.length;\n\n    if (width < minWidth) {\n      width = minWidth;\n    }\n\n    this._$headerPanel.width(width);\n\n    this._$dateTable.width(width);\n\n    this._$allDayTable && this._$allDayTable.width(width);\n\n    this._attachHeaderTableClasses();\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n  },\n  getWorkSpaceMinWidth: function () {\n    return this._groupedStrategy.getWorkSpaceMinWidth();\n  },\n  _dimensionChanged: function () {\n    if (this.option(\"crossScrollingEnabled\")) {\n      this._setTableSizes();\n    }\n\n    this.headerPanelOffsetRecalculate();\n\n    this._cleanCellDataCache();\n\n    this._cleanAllowedPositions();\n  },\n  _needCreateCrossScrolling: function () {\n    return this.option(\"crossScrollingEnabled\");\n  },\n  _getElementClass: noop,\n  _getRowCount: noop,\n  _getCellCount: noop,\n  _getRowCountWithAllDayRows: function () {\n    var allDayRowsCount = this.option(\"showAllDayPanel\") ? this._getGroupCount() : 0;\n    return this._getRowCount() + allDayRowsCount;\n  },\n  _initMarkup: function () {\n    this._initWorkSpaceUnits();\n\n    this._initDateTableScrollable();\n\n    this._createWorkSpaceElements();\n\n    this.callBase();\n\n    if (!this.option(\"crossScrollingEnabled\")) {\n      this._attachTableClasses();\n\n      this._attachHeaderTableClasses();\n    }\n\n    this._toggleGroupedClass();\n\n    this._toggleFixedScrollableClass();\n\n    this._renderView();\n\n    this._attachEvents();\n\n    this._setFocusOnCellByOption(this.option(\"selectedCellData\"));\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderDateTimeIndication();\n\n    this._setIndicationUpdateInterval();\n  },\n  _toggleGroupedClass: function () {\n    this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0);\n  },\n  _toggleFixedScrollableClass: noop,\n  _renderView: function () {\n    this._setFirstViewDate();\n\n    this._applyCellTemplates(this._renderGroupHeader());\n\n    this._renderDateHeader();\n\n    this._renderTimePanel();\n\n    if (this._isVerticalGroupedWorkSpace()) {\n      var groupCount = this._getGroupCount();\n\n      for (var i = 0; i < groupCount; i++) {\n        this._renderAllDayPanel(i);\n      }\n    }\n\n    this._renderDateTable();\n\n    this._renderAllDayPanel();\n\n    this._updateGroupTableHeight();\n\n    this._shader = new VerticalShader(this);\n  },\n  _updateGroupTableHeight: function () {\n    if (this._isVerticalGroupedWorkSpace() && windowUtils.hasWindow()) {\n      this._setHorizontalGroupHeaderCellsHeight();\n    }\n  },\n  _renderDateTimeIndication: noop,\n  _setIndicationUpdateInterval: noop,\n  _refreshDateTimeIndication: noop,\n  _setFocusOnCellByOption: function (data) {\n    var cells = [];\n\n    this._releaseFocusedCell();\n\n    for (var i = 0; i < data.length; i++) {\n      var groups = data[i].groups;\n      var groupIndex = this.option(\"groups\").length && groups ? this._getGroupIndexByResourceId(groups) : 0;\n      var allDay = !!data[i].allDay;\n      var coordinates = this.getCoordinatesByDate(data[i].startDate, groupIndex, allDay);\n\n      var $cell = this._getCellByCoordinates(coordinates, groupIndex);\n\n      if (isDefined($cell)) {\n        this._toggleFocusClass(true, $cell);\n\n        cells.push($cell.get(0));\n      }\n    }\n\n    this._focusedCells = cells;\n  },\n  _getGroupIndexByResourceId: function (id) {\n    var groups = this.option(\"groups\");\n    var groupKey = Object.keys(id)[0];\n    var groupValue = id[groupKey];\n    var tree = this.invoke(\"createResourcesTree\", groups);\n    var index = 0;\n\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i].name === groupKey && tree[i].value === groupValue) {\n        index = tree[i].leafIndex;\n      }\n    }\n\n    return index;\n  },\n  _setFirstViewDate: function () {\n    var firstDayOfWeek = isDefined(this._firstDayOfWeek()) ? this._firstDayOfWeek() : dateLocalization.firstDayOfWeekIndex();\n    this._firstViewDate = dateUtils.getFirstWeekDate(this._getViewStartByOptions(), firstDayOfWeek);\n\n    this._setStartDayHour(this._firstViewDate);\n  },\n  _getViewStartByOptions: function () {\n    if (!this.option(\"startDate\")) {\n      return this.option(\"currentDate\");\n    } else {\n      var startDate = dateUtils.trimTime(this._getStartViewDate());\n      var currentDate = this.option(\"currentDate\");\n      var diff = startDate.getTime() <= currentDate.getTime() ? 1 : -1;\n      var endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\n\n      while (!this._dateInRange(currentDate, startDate, endDate, diff)) {\n        startDate = endDate;\n        endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\n      }\n\n      return diff > 0 ? startDate : endDate;\n    }\n  },\n  _getHeaderDate: function () {\n    return this.getStartViewDate();\n  },\n  _getStartViewDate: function () {\n    return this.option(\"startDate\");\n  },\n  _dateInRange: function (date, startDate, endDate, diff) {\n    return diff > 0 ? dateUtils.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : dateUtils.dateInRange(date, endDate, startDate, \"date\");\n  },\n  _getIntervalDuration: function () {\n    return toMs(\"day\") * this.option(\"intervalCount\");\n  },\n  _setStartDayHour: function (date) {\n    var startDayHour = this.option(\"startDayHour\");\n\n    if (isDefined(startDayHour)) {\n      date.setHours(startDayHour, startDayHour % 1 * 60, 0, 0);\n    }\n  },\n  _firstDayOfWeek: function () {\n    return this.option(\"firstDayOfWeek\");\n  },\n  _attachEvents: function () {\n    this._createSelectionChangedAction();\n\n    this._attachClickEvent();\n\n    this._attachContextMenuEvent();\n  },\n  _attachClickEvent: function () {\n    var that = this;\n\n    var pointerDownAction = this._createAction(function (e) {\n      that._pointerDownHandler(e.event);\n    });\n\n    this._createCellClickAction();\n\n    var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\n    var $element = this.$element();\n    eventsEngine.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);\n    eventsEngine.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function (e) {\n      if (eventUtils.isMouseEvent(e) && e.which > 1) {\n        e.preventDefault();\n        return;\n      }\n\n      pointerDownAction({\n        event: e\n      });\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function (e) {\n      var $cell = $(e.target);\n\n      that._cellClickAction({\n        event: e,\n        cellElement: getPublicElement($cell),\n        cellData: that.getCellData($cell)\n      });\n    });\n  },\n  _createCellClickAction: function () {\n    var that = this;\n    this._cellClickAction = this._createActionByOption(\"onCellClick\", {\n      afterExecute: function (e) {\n        that._moveToClosestNonStub(e.args[0].event);\n      }\n    });\n  },\n  _createSelectionChangedAction: function () {\n    this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\");\n  },\n  _moveToClosestNonStub: function (e) {\n    var $target = $(e.target);\n\n    if (this._showPopup && this._hasFocusClass($target)) {\n      delete this._showPopup;\n\n      this._showAddAppointmentPopup($target);\n    }\n  },\n  _pointerDownHandler: function (e) {\n    var $target = $(e.target);\n\n    if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {\n      this._isCellClick = false;\n      return;\n    }\n\n    this._isCellClick = true;\n\n    if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\n      this._showPopup = true;\n    } else {\n      this._setFocusedCell($target);\n    }\n  },\n  _showAddAppointmentPopup: function ($cell) {\n    var firstCellData = this.getCellData($cell.first());\n    var lastCellData = this.getCellData($cell.last());\n    var args = {\n      startDate: this.invoke(\"convertDateByTimezoneBack\", firstCellData.startDate) || firstCellData.startDate,\n      endDate: this.invoke(\"convertDateByTimezoneBack\", lastCellData.endDate) || lastCellData.endDate\n    };\n\n    if (isDefined(lastCellData.allDay)) {\n      args.allDay = lastCellData.allDay;\n    }\n\n    extend(args, lastCellData.groups);\n    this.notifyObserver(\"showAddAppointmentPopup\", args);\n  },\n  _attachContextMenuEvent: function () {\n    this._createContextMenuAction();\n\n    var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\n    var $element = this.$element();\n    var eventName = eventUtils.addNamespace(contextMenuEvent.name, this.NAME);\n    eventsEngine.off($element, eventName, cellSelector);\n    eventsEngine.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this));\n  },\n  _contextMenuHandler: function (e) {\n    var $cell = $(e.target);\n\n    this._contextMenuAction({\n      event: e,\n      cellElement: getPublicElement($cell),\n      cellData: this.getCellData($cell)\n    });\n\n    this._contextMenuHandled = true;\n  },\n  _createContextMenuAction: function () {\n    this._contextMenuAction = this._createActionByOption(\"onCellContextMenu\");\n  },\n  _getGroupHeaderContainer: function () {\n    if (this._isVerticalGroupedWorkSpace()) {\n      return this._$groupTable;\n    }\n\n    return this._$thead;\n  },\n  _getDateHeaderContainer: function () {\n    return this._$thead;\n  },\n  _renderGroupHeader: function () {\n    var $container = this._getGroupHeaderContainer();\n\n    var groupCount = this._getGroupCount();\n\n    var cellTemplates = [];\n\n    if (groupCount) {\n      var groupRows = this._makeGroupRows(this.option(\"groups\"), this.option(\"groupByDate\"));\n\n      this._attachGroupCountAttr(groupCount, groupRows);\n\n      $container.append(groupRows.elements);\n      cellTemplates = groupRows.cellTemplates;\n    } else {\n      this._detachGroupCountAttr();\n    }\n\n    return cellTemplates;\n  },\n  _applyCellTemplates: function (templates) {\n    templates.forEach(function (template) {\n      template();\n    });\n  },\n  _detachGroupCountAttr: function () {\n    var groupedAttr = this._groupedStrategy.getGroupCountAttr();\n\n    this.$element().removeAttr(groupedAttr.attr);\n  },\n  _attachGroupCountAttr: function (groupRowCount, groupRows) {\n    var groupedAttr = this._groupedStrategy.getGroupCountAttr(groupRowCount, groupRows);\n\n    this.$element().attr(groupedAttr.attr, groupedAttr.count);\n  },\n  headerPanelOffsetRecalculate: function () {\n    if (!this.option(\"resourceCellTemplate\") && !this.option(\"dateCellTemplate\")) {\n      return;\n    }\n\n    var headerPanelHeight = this.getHeaderPanelHeight();\n    var headerHeight = this.invoke(\"getHeaderHeight\");\n    var allDayPanelHeight = this.supportAllDayRow() && this.option(\"showAllDayPanel\") ? this._groupedStrategy.getAllDayTableHeight() : 0;\n    headerPanelHeight && this._headerScrollable && this._headerScrollable.$element().height(headerPanelHeight + allDayPanelHeight);\n    headerPanelHeight && this._dateTableScrollable.$element().css({\n      paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\n      marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\n    });\n    headerPanelHeight && this._sidebarScrollable && this._sidebarScrollable.$element().css({\n      paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\n      marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\n    });\n    this._$allDayTitle && this._$allDayTitle.css(\"top\", headerHeight + headerPanelHeight + \"px\");\n  },\n  _makeGroupRows: function (groups, groupByDate) {\n    var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\n    return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\n      groupHeaderRowClass: this._getGroupRowClass(),\n      groupRowClass: this._getGroupRowClass(),\n      groupHeaderClass: this._getGroupHeaderClass.bind(this),\n      groupHeaderContentClass: this._getGroupHeaderContentClass()\n    }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getGroupCount(), groupByDate);\n  },\n  _getDateHeaderTemplate: function () {\n    return this.option(\"dateCellTemplate\");\n  },\n  _renderDateHeader: function () {\n    var $container = this._getDateHeaderContainer();\n\n    var $headerRow = $(\"<tr>\").addClass(HEADER_ROW_CLASS);\n\n    var count = this._getCellCount();\n\n    var cellTemplate = this._getDateHeaderTemplate();\n\n    var repeatCount = this._calculateHeaderCellRepeatCount();\n\n    var templateCallbacks = [];\n    var groupByDate = this.isGroupedByDate();\n    var colspan = groupByDate ? this._getGroupCount() : 1;\n    var i;\n    var j;\n\n    if (!groupByDate) {\n      for (j = 0; j < repeatCount; j++) {\n        for (i = 0; i < count; i++) {\n          this._renderDateHeaderTemplate($headerRow, i, j * repeatCount + i, cellTemplate, templateCallbacks);\n        }\n      }\n\n      $container.append($headerRow);\n    } else {\n      for (i = 0; i < count; i++) {\n        var $cell = this._renderDateHeaderTemplate($headerRow, i, i * repeatCount, cellTemplate, templateCallbacks);\n\n        $cell.attr(\"colSpan\", colspan);\n      }\n\n      $container.prepend($headerRow);\n    }\n\n    this._applyCellTemplates(templateCallbacks);\n\n    return $headerRow;\n  },\n  _renderDateHeaderTemplate: function ($container, i, calculatedIndex, cellTemplate, templateCallbacks) {\n    var text = this._getHeaderText(i);\n\n    var $cell = $(\"<th>\").addClass(this._getHeaderPanelCellClass(i)).attr(\"title\", text);\n\n    if (cellTemplate && cellTemplate.render) {\n      templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {\n        model: {\n          text: text,\n          date: this._getDateByIndex(i)\n        },\n        index: calculatedIndex,\n        container: getPublicElement($cell)\n      }));\n    } else {\n      $cell.text(text);\n    }\n\n    $container.append($cell);\n    return $cell;\n  },\n  _getHeaderPanelCellClass: function (i) {\n    var cellClass = HEADER_PANEL_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1);\n  },\n  _calculateHeaderCellRepeatCount: function () {\n    return this._groupedStrategy.calculateHeaderCellRepeatCount();\n  },\n  _renderAllDayPanel: function (index) {\n    var cellCount = this._getCellCount();\n\n    if (!this._isVerticalGroupedWorkSpace()) {\n      cellCount *= this._getGroupCount() || 1;\n    }\n\n    var cellTemplates = this._renderTableBody({\n      container: this._allDayPanels.length ? getPublicElement(this._allDayTables[index]) : getPublicElement(this._$allDayTable),\n      rowCount: 1,\n      cellCount: cellCount,\n      cellClass: this._getAllDayPanelCellClass.bind(this),\n      rowClass: ALL_DAY_TABLE_ROW_CLASS,\n      cellTemplate: this.option(\"dataCellTemplate\"),\n      getCellData: this._getAllDayCellData.bind(this),\n      groupIndex: index\n    }, true);\n\n    this._toggleAllDayVisibility();\n\n    this._applyCellTemplates(cellTemplates);\n  },\n  _getAllDayPanelCellClass: function (i, j) {\n    var cellClass = ALL_DAY_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1);\n  },\n  _getAllDayCellData: function (cell, rowIndex, cellIndex, groupIndex) {\n    var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\n\n    startDate = dateUtils.trimTime(startDate);\n    var data = {\n      startDate: startDate,\n      endDate: new Date(startDate.getTime() + DAY_MS),\n      allDay: true\n    };\n\n    var groups = this._getCellGroups(groupIndex || this._getGroupIndex(rowIndex, cellIndex));\n\n    if (groups.length) {\n      data.groups = {};\n    }\n\n    for (var i = 0; i < groups.length; i++) {\n      data.groups[groups[i].name] = groups[i].id;\n    }\n\n    return {\n      key: CELL_DATA,\n      value: data\n    };\n  },\n  _toggleAllDayVisibility: function () {\n    var showAllDayPanel = this.option(\"showAllDayPanel\");\n\n    this._$allDayPanel.toggle(showAllDayPanel);\n\n    this._$allDayTitle && this._$allDayTitle.toggleClass(ALL_DAY_TITLE_HIDDEN_CLASS, !showAllDayPanel);\n    this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);\n\n    this._changeAllDayVisibility();\n\n    this._updateScrollable();\n  },\n  _changeAllDayVisibility: function () {\n    this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option(\"allDayExpanded\") && this.option(\"showAllDayPanel\"));\n  },\n  _updateScrollable: function () {\n    this._dateTableScrollable.update();\n\n    this._headerScrollable && this._headerScrollable.update();\n    this._sidebarScrollable && this._sidebarScrollable.update();\n  },\n  _renderTimePanel: function () {\n    var _this4 = this;\n\n    var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();\n\n    var startViewDate = this._getDateWithSkippedDST();\n\n    var _getTimeText = function (i) {\n      var index = i % _this4._getRowCount();\n\n      if (index % 2 === 0) {\n        return dateLocalization.format(_this4._getTimeCellDateCore(startViewDate, i), \"shorttime\");\n      }\n\n      return \"\";\n    };\n\n    this._renderTableBody({\n      container: getPublicElement(this._$timePanel),\n      rowCount: this._getTimePanelRowCount() * repeatCount,\n      cellCount: 1,\n      cellClass: this._getTimeCellClass.bind(this),\n      rowClass: TIME_PANEL_ROW_CLASS,\n      cellTemplate: this.option(\"timeCellTemplate\"),\n      getCellText: _getTimeText.bind(this),\n      getCellDate: this._getTimeCellDate.bind(this),\n      groupCount: this._getGroupCount(),\n      allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0\n    });\n  },\n  _getDateWithSkippedDST: function () {\n    var result = new Date(this.getStartViewDate());\n\n    if (timeZoneUtils.isTimezoneChangeInDate(result)) {\n      result = new Date(result.setDate(result.getDate() + 1));\n    }\n\n    return result;\n  },\n  _getTimePanelRowCount: function () {\n    return this._getCellCountInDay();\n  },\n  _getCellCountInDay: function (skipRound) {\n    var result = this._calculateDayDuration() / this.option(\"hoursInterval\");\n    return skipRound ? result : Math.ceil(result);\n  },\n  _calculateDayDuration: function () {\n    return this.option(\"endDayHour\") - this.option(\"startDayHour\");\n  },\n  _getTimeCellClass: function (i) {\n    var cellClass = TIME_PANEL_CELL_CLASS + \" \" + VERTICAL_SIZES_CLASS;\n    return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i);\n  },\n  _getTimeCellDateAdjustedDST: function (i) {\n    var startViewDate = new Date(this.getStartViewDate());\n\n    if (timeZoneUtils.isTimezoneChangeInDate(startViewDate)) {\n      startViewDate = new Date(startViewDate.setDate(startViewDate.getDate() + 1));\n    }\n\n    return this._getTimeCellDateCore(startViewDate, i);\n  },\n  _getTimeCellDate: function (i) {\n    return this._getTimeCellDateCore(this.getStartViewDate(), i);\n  },\n  _getTimeCellDateCore: function (startViewDate, i) {\n    var result = new Date(startViewDate);\n    var timeCellDuration = Math.round(this.getCellDuration());\n\n    var cellCountInDay = this._getCellCountInDay(true);\n\n    result.setMilliseconds(result.getMilliseconds() + timeCellDuration * (i % cellCountInDay));\n    return result;\n  },\n  _renderDateTable: function () {\n    var groupCount = this._getGroupCount();\n\n    this._renderTableBody({\n      container: getPublicElement(this._$dateTable),\n      rowCount: this._getTotalRowCount(groupCount),\n      cellCount: this._getTotalCellCount(groupCount),\n      cellClass: this._getDateTableCellClass.bind(this),\n      rowClass: this._getDateTableRowClass(),\n      cellTemplate: this.option(\"dataCellTemplate\"),\n      getCellData: this._getCellData.bind(this),\n      allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,\n      groupCount: groupCount,\n      groupByDate: this.option(\"groupByDate\")\n    });\n  },\n  _insertAllDayRowsIntoDateTable: function () {\n    return this._groupedStrategy.insertAllDayRowsIntoDateTable();\n  },\n  _getTotalCellCount: function (groupCount) {\n    return this._groupedStrategy.getTotalCellCount(groupCount);\n  },\n  _getTotalRowCount: function () {\n    return this._groupedStrategy.getTotalRowCount();\n  },\n  _getCellData: function (cell, rowIndex, cellIndex) {\n    var data = this._prepareCellData(rowIndex, cellIndex, cell);\n\n    return {\n      key: CELL_DATA,\n      value: data\n    };\n  },\n  _prepareCellData: function (rowIndex, cellIndex) {\n    var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\n\n    var endDate = this.calculateEndDate(startDate);\n    var data = {\n      startDate: startDate,\n      endDate: endDate,\n      allDay: this._getTableAllDay()\n    };\n\n    var groups = this._getCellGroups(this._getGroupIndex(rowIndex, cellIndex));\n\n    if (groups.length) {\n      data.groups = {};\n    }\n\n    for (var i = 0; i < groups.length; i++) {\n      data.groups[groups[i].name] = groups[i].id;\n    }\n\n    return data;\n  },\n  _getGroupIndex: function (rowIndex, cellIndex) {\n    return this._groupedStrategy.getGroupIndex(rowIndex, cellIndex);\n  },\n  _getTableAllDay: function () {\n    return false;\n  },\n  calculateEndDate: function (startDate) {\n    var result = new Date(startDate);\n    result.setMilliseconds(result.getMilliseconds() + Math.round(this._getInterval()));\n    return result;\n  },\n  _getGroupCount: function () {\n    var groups = this.option(\"groups\");\n    var result = 0;\n\n    for (var i = 0, len = groups.length; i < len; i++) {\n      if (!i) {\n        result = groups[i].items.length;\n      } else {\n        result *= groups[i].items.length;\n      }\n    }\n\n    return result;\n  },\n  _getPathToLeaf: function (leafIndex) {\n    var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\n\n    function findLeafByIndex(data, index) {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i].leafIndex === index) {\n          return data[i];\n        } else {\n          var _leaf = findLeafByIndex(data[i].children, index);\n\n          if (_leaf) {\n            return _leaf;\n          }\n        }\n      }\n    }\n\n    function makeBranch(leaf, result) {\n      result = result || [];\n      result.push(leaf.value);\n\n      if (leaf.parent) {\n        makeBranch(leaf.parent, result);\n      }\n\n      return result;\n    }\n\n    var leaf = findLeafByIndex(tree, leafIndex);\n    return makeBranch(leaf).reverse();\n  },\n  _getCellGroups: function (groupIndex) {\n    var result = [];\n\n    if (this._getGroupCount()) {\n      var groups = this.option(\"groups\");\n\n      if (groupIndex < 0) {\n        return;\n      }\n\n      var path = this._getPathToLeaf(groupIndex);\n\n      for (var i = 0; i < groups.length; i++) {\n        result.push({\n          name: groups[i].name,\n          id: path[i]\n        });\n      }\n    }\n\n    return result;\n  },\n  _attachTablesEvents: function () {\n    var _this5 = this;\n\n    var that = this;\n    var isPointerDown = false;\n    var cellHeight;\n    var cellWidth;\n    var $element = this.$element();\n    eventsEngine.off($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXDROP_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);\n    eventsEngine.off($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);\n    eventsEngine.on($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, {\n      itemSizeFunc: function ($element) {\n        if (!cellHeight) {\n          cellHeight = getBoundingRect($element.get(0)).height;\n        }\n\n        if (!cellWidth) {\n          cellWidth = getBoundingRect($element.get(0)).width;\n        }\n\n        return {\n          width: cellWidth,\n          height: cellHeight\n        };\n      },\n      checkDropTarget: function (target, event) {\n        return !_this5._isOutsideScrollable(target, event);\n      }\n    }, function (e) {\n      if (that._$currentTableTarget) {\n        that.removeDroppableCellClass(that._$currentTableTarget);\n      }\n\n      that._$currentTableTarget = $(e.target);\n\n      that._$currentTableTarget.addClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME, function (e) {\n      if (!$element.find($(e.draggingElement)).length) {\n        that.removeDroppableCellClass();\n      }\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXDROP_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      that.removeDroppableCellClass($(e.target));\n      cellHeight = 0;\n      cellWidth = 0;\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      if (eventUtils.isMouseEvent(e) && 1 === e.which) {\n        isPointerDown = true;\n        that.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\n        eventsEngine.off(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\n        eventsEngine.on(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function () {\n          isPointerDown = false;\n          that.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\n        });\n      }\n    });\n    eventsEngine.on($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function (e) {\n      if (isPointerDown && that._dateTableScrollable && !that._dateTableScrollable.option(\"scrollByContent\")) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        that._moveToCell($(e.target), true);\n      }\n    });\n  },\n  _getDateTables: function () {\n    return this._$dateTable.add(this._$allDayTable);\n  },\n  _getDateTable: function () {\n    return this._$dateTable;\n  },\n  _getAllDayTable: function () {\n    return this._$allDayTable;\n  },\n  _getInterval: function () {\n    if (void 0 === this._interval) {\n      this._interval = this.option(\"hoursInterval\") * HOUR_MS;\n    }\n\n    return this._interval;\n  },\n  _getHeaderText: function (headerIndex) {\n    return dateLocalization.format(this._getDateByIndex(headerIndex), this._getFormat());\n  },\n  _getDateByIndex: abstract,\n  _getFormat: abstract,\n  _calculateCellIndex: function (rowIndex, cellIndex) {\n    return this._groupedStrategy.calculateCellIndex(rowIndex, cellIndex);\n  },\n  _renderTableBody: function (options, delayCellTemplateRendering) {\n    var result = [];\n\n    if (!delayCellTemplateRendering) {\n      this._applyCellTemplates(tableCreator.makeTable(options));\n    } else {\n      result = tableCreator.makeTable(options);\n    }\n\n    return result;\n  },\n  _removeAllDayElements: function () {\n    this._$allDayTable && this._$allDayTable.remove();\n    this._$allDayTitle && this._$allDayTitle.remove();\n  },\n  _cleanView: function () {\n    this._cleanCellDataCache();\n\n    this._cleanAllowedPositions();\n\n    this._$thead.empty();\n\n    this._$dateTable.empty();\n\n    this._shader && this._shader.clean();\n\n    this._$timePanel.empty();\n\n    this._$allDayTable && this._$allDayTable.empty();\n\n    this._$groupTable.empty();\n\n    delete this._hiddenInterval;\n    delete this._interval;\n  },\n  _clean: function () {\n    eventsEngine.off(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\n    this.callBase();\n  },\n  getWorkArea: function () {\n    return this._dateTableScrollable.$content();\n  },\n  getScrollable: function () {\n    return this._dateTableScrollable;\n  },\n  getScrollableScrollTop: function () {\n    return this._dateTableScrollable.scrollTop();\n  },\n  getGroupedScrollableScrollTop: function (allDay) {\n    return this._groupedStrategy.getScrollableScrollTop(allDay);\n  },\n  getScrollableScrollLeft: function () {\n    return this._dateTableScrollable.scrollLeft();\n  },\n  getScrollableOuterWidth: function () {\n    return this._dateTableScrollable.scrollWidth();\n  },\n  getScrollableContainer: function () {\n    return this._dateTableScrollable._container();\n  },\n  getHeaderPanelHeight: function () {\n    return this._$headerPanel && this._$headerPanel.outerHeight(true);\n  },\n  getTimePanelWidth: function () {\n    return this._$timePanel && getBoundingRect(this._$timePanel.get(0)).width;\n  },\n  getGroupTableWidth: function () {\n    return this._$groupTable ? this._$groupTable.outerWidth() : 0;\n  },\n  getWorkSpaceLeftOffset: function () {\n    return this._groupedStrategy.getLeftOffset();\n  },\n  getGroupedStrategy: function () {\n    return this._groupedStrategy;\n  },\n  _getCellCoordinatesByIndex: function (index) {\n    var cellIndex = Math.floor(index / this._getRowCount());\n    var rowIndex = index - this._getRowCount() * cellIndex;\n    return {\n      cellIndex: cellIndex,\n      rowIndex: rowIndex\n    };\n  },\n  _getDateByCellIndexes: function (rowIndex, cellIndex, patchedIndexes) {\n    cellIndex = !patchedIndexes ? this._patchCellIndex(cellIndex) : cellIndex;\n    var firstViewDate = this.getStartViewDate();\n    var currentDate = new Date(firstViewDate.getTime() + this._getMillisecondsOffset(rowIndex, cellIndex) + this._getOffsetByCount(cellIndex));\n    currentDate.setTime(currentDate.getTime() + dateUtils.getTimezonesDifference(firstViewDate, currentDate));\n    return currentDate;\n  },\n  _patchCellIndex: function (cellIndex) {\n    if (this.isGroupedByDate()) {\n      cellIndex = Math.floor(cellIndex / this._getGroupCount());\n    }\n\n    return cellIndex;\n  },\n  _getOffsetByCount: function () {\n    return 0;\n  },\n  _getMillisecondsOffset: function (rowIndex, cellIndex) {\n    return this._getInterval() * this._calculateCellIndex(rowIndex, cellIndex) + this._calculateHiddenInterval(rowIndex, cellIndex);\n  },\n  _calculateHiddenInterval: function (rowIndex, cellIndex) {\n    var dayCount = cellIndex % this._getCellCount();\n\n    return dayCount * this._getHiddenInterval();\n  },\n  _getHiddenInterval: function () {\n    if (void 0 === this._hiddenInterval) {\n      this._hiddenInterval = DAY_MS - this.getVisibleDayDuration();\n    }\n\n    return this._hiddenInterval;\n  },\n  _getIntervalBetween: function (currentDate, allDay) {\n    var firstViewDate = this.getStartViewDate();\n    var startDayTime = this.option(\"startDayHour\") * HOUR_MS;\n    var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\n    var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;\n\n    var days = this._getDaysOfInterval(fullInterval, startDayTime);\n\n    var weekendsCount = this._getWeekendsCount(days);\n\n    var result = (days - weekendsCount) * DAY_MS;\n\n    if (!allDay) {\n      result = fullInterval - days * this._getHiddenInterval() - weekendsCount * this.getVisibleDayDuration();\n    }\n\n    return result;\n  },\n  _getWeekendsCount: function () {\n    return 0;\n  },\n  _getDaysOfInterval: function (fullInterval, startDayTime) {\n    return Math.floor((fullInterval + startDayTime) / DAY_MS);\n  },\n  _getGroupIndexes: function (appointmentResources) {\n    var result = [];\n\n    if (appointmentResources && this.option(\"groups\").length) {\n      var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\n      result = this.invoke(\"getResourceTreeLeaves\", tree, appointmentResources);\n    }\n\n    return result;\n  },\n  _updateIndex: function (index) {\n    return index * this._getRowCount();\n  },\n  _getDroppableCell: function () {\n    return this._getDateTables().find(\".\" + DATE_TABLE_DROPPABLE_CELL_CLASS);\n  },\n  _getWorkSpaceWidth: function () {\n    if (this._needCreateCrossScrolling()) {\n      return getBoundingRect(this._$dateTable.get(0)).width;\n    }\n\n    return getBoundingRect(this.$element().get(0)).width - this.getTimePanelWidth();\n  },\n  _getCellPositionByIndex: function (index, groupIndex, inAllDayRow) {\n    var cellCoordinates = this._getCellCoordinatesByIndex(index);\n\n    var $cell = this._getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow);\n\n    var result = this._getCellPosition($cell);\n\n    this.setCellDataCache(cellCoordinates, groupIndex, $cell);\n\n    if (result) {\n      result.rowIndex = cellCoordinates.rowIndex;\n      result.cellIndex = cellCoordinates.cellIndex;\n    }\n\n    return result;\n  },\n  _getCellPosition: function ($cell) {\n    var position = $cell.position();\n\n    if (this.option(\"rtlEnabled\")) {\n      position.left += getBoundingRect($cell.get(0)).width;\n    }\n\n    return position;\n  },\n  _getCellByCoordinates: function (cellCoordinates, groupIndex, inAllDayRow) {\n    var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);\n\n    return this._$dateTable.find(\"tr\").eq(indexes.rowIndex).find(\"td\").eq(indexes.cellIndex);\n  },\n  _getCells: function (allDay, direction) {\n    var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\n\n    if (\"vertical\" === direction) {\n      var result = [];\n\n      for (var i = 1;; i++) {\n        var cells = this.$element().find(\"tr .\".concat(cellClass, \":nth-child(\").concat(i, \")\"));\n\n        if (!cells.length) {\n          break;\n        }\n\n        result = result.concat(cells.toArray());\n      }\n\n      return $(result);\n    } else {\n      return this.$element().find(\".\" + cellClass);\n    }\n  },\n  _setHorizontalGroupHeaderCellsHeight: function () {\n    var height = getBoundingRect(this._$dateTable.get(0)).height;\n\n    this._$groupTable.outerHeight(height);\n  },\n  _getDateTableBorder: function () {\n    return DATE_TABLE_CELL_BORDER;\n  },\n  _getDateTableBorderOffset: function () {\n    return 2 * this._getDateTableBorder();\n  },\n  _getGroupHeaderCellsContent: function () {\n    return this.$element().find(\".\" + GROUP_HEADER_CONTENT_CLASS);\n  },\n  _getGroupHeaderCells: function () {\n    return this.$element().find(\".\" + GROUP_HEADER_CLASS);\n  },\n  _getScrollCoordinates: function (hours, minutes, date) {\n    var currentDate = date || new Date(this.option(\"currentDate\"));\n    var startDayHour = this.option(\"startDayHour\");\n    var endDayHour = this.option(\"endDayHour\");\n\n    if (hours < startDayHour) {\n      hours = startDayHour;\n    }\n\n    if (hours >= endDayHour) {\n      hours = endDayHour - 1;\n    }\n\n    currentDate.setHours(hours, minutes, 0, 0);\n    return this.getCoordinatesByDate(currentDate);\n  },\n  _isOutsideScrollable: function (target, event) {\n    var $dateTableScrollableElement = this._dateTableScrollable.$element();\n\n    var scrollableSize = getBoundingRect($dateTableScrollableElement.get(0));\n    var window = windowUtils.getWindow();\n    var isTargetInAllDayPanel = !$(target).closest($dateTableScrollableElement).length;\n    var isOutsideHorizontalScrollable = event.pageX < scrollableSize.left || event.pageX > scrollableSize.left + scrollableSize.width + (window.scrollX || 0);\n    var isOutsideVerticalScrollable = event.pageY < scrollableSize.top || event.pageY > scrollableSize.top + scrollableSize.height + (window.scrollY || 0);\n\n    if (isTargetInAllDayPanel && !isOutsideHorizontalScrollable) {\n      return false;\n    }\n\n    return isOutsideVerticalScrollable || isOutsideHorizontalScrollable;\n  },\n  setCellDataCache: function (cellCoordinates, groupIndex, $cell) {\n    var cache = this.getCellDataCache();\n    var data = this.getCellData($cell);\n    var key = JSON.stringify({\n      rowIndex: cellCoordinates.rowIndex,\n      cellIndex: cellCoordinates.cellIndex,\n      groupIndex: groupIndex\n    });\n    cache[key] = data;\n  },\n  setCellDataCacheAlias: function (appointment, geometry) {\n    var key = JSON.stringify({\n      rowIndex: appointment.rowIndex,\n      cellIndex: appointment.cellIndex,\n      groupIndex: appointment.groupIndex\n    });\n    var aliasKey = JSON.stringify({\n      top: geometry.top,\n      left: geometry.left\n    });\n    var cache = this.getCellDataCache();\n\n    if (cache[key]) {\n      cache[aliasKey] = cache[key];\n    }\n  },\n  getCellDataCache: function (key) {\n    if (!this._cache) {\n      this._cache = {};\n    }\n\n    return key ? this._cache[key] : this._cache;\n  },\n  _cleanCellDataCache: function () {\n    delete this._cache;\n  },\n  _cleanAllowedPositions: function () {\n    delete this._maxAllowedVerticalPosition;\n    delete this._maxAllowedPosition;\n  },\n  supportAllDayRow: function () {\n    return true;\n  },\n  keepOriginalHours: function () {\n    return false;\n  },\n  getFocusedCellData: function () {\n    var $focusedCells = this._getAllFocusedCells();\n\n    var result = [];\n\n    if ($focusedCells.length > 1) {\n      result = this._getMultipleCellsData($focusedCells);\n    } else {\n      var data = this.getCellData($focusedCells);\n      data && result.push(data);\n    }\n\n    return result;\n  },\n  _getMultipleCellsData: function ($cells) {\n    var data = [];\n\n    for (var i = 0; i < $cells.length; i++) {\n      data.push(dataUtils.data($cells[i], CELL_DATA));\n    }\n\n    return data;\n  },\n  getCellData: function ($cell) {\n    var data = $cell[0] ? dataUtils.data($cell[0], CELL_DATA) : void 0;\n    return extend(true, {}, data);\n  },\n  _getHorizontalMax: function (groupIndex) {\n    groupIndex = this.isGroupedByDate() ? this._getGroupCount() - 1 : groupIndex;\n    return this._groupedStrategy.getHorizontalMax(groupIndex);\n  },\n  getCoordinatesByDate: function (date, groupIndex, inAllDayRow) {\n    groupIndex = groupIndex || 0;\n    var index = this.getCellIndexByDate(date, inAllDayRow);\n\n    var position = this._getCellPositionByIndex(index, groupIndex, inAllDayRow);\n\n    var shift = this.getPositionShift(inAllDayRow ? 0 : this.getTimeShift(date), inAllDayRow);\n\n    var horizontalHMax = this._getHorizontalMax(groupIndex, date);\n\n    if (!position) {\n      throw errors.Error(\"E1039\");\n    }\n\n    var coordinates = {\n      cellPosition: position.left + shift.cellPosition,\n      top: position.top + shift.top,\n      left: position.left + shift.left,\n      rowIndex: position.rowIndex,\n      cellIndex: position.cellIndex,\n      hMax: horizontalHMax,\n      vMax: this.getVerticalMax(groupIndex),\n      groupIndex: groupIndex\n    };\n    return coordinates;\n  },\n  getVerticalMax: function (groupIndex) {\n    return this._groupedStrategy.getVerticalMax(groupIndex);\n  },\n  _getOffsetByAllDayPanel: function (groupIndex) {\n    return this._groupedStrategy._getOffsetByAllDayPanel(groupIndex);\n  },\n  _getGroupTop: function (groupIndex) {\n    return this._groupedStrategy._getGroupTop(groupIndex);\n  },\n  isGroupedByDate: function () {\n    return this.option(\"groupByDate\") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0;\n  },\n  getCellIndexByDate: function (date, inAllDayRow) {\n    var timeInterval = inAllDayRow ? 864e5 : this._getInterval();\n\n    var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow);\n\n    var index = Math.floor(dateTimeStamp / timeInterval);\n\n    if (inAllDayRow) {\n      index = this._updateIndex(index);\n    }\n\n    if (index < 0) {\n      index = 0;\n    }\n\n    return index;\n  },\n  getPositionShift: function (timeShift, isAllDay) {\n    return {\n      top: timeShift * this.getCellHeight(),\n      left: 0,\n      cellPosition: 0\n    };\n  },\n  getTimeShift: function (date) {\n    var currentDayStart = new Date(date);\n    var cellDuration = this.getCellDuration();\n    var currentDayEndHour = new Date(new Date(date).setHours(this.option(\"endDayHour\"), 0, 0));\n\n    if (date.getTime() <= currentDayEndHour.getTime()) {\n      currentDayStart.setHours(this.option(\"startDayHour\"), 0, 0, 0);\n    }\n\n    var currentDateTime = date.getTime();\n    var currentDayStartTime = currentDayStart.getTime();\n\n    var minTime = this._firstViewDate.getTime();\n\n    return currentDateTime > minTime ? (currentDateTime - currentDayStartTime) % cellDuration / cellDuration : 0;\n  },\n  _isSkippedData: function () {\n    return false;\n  },\n  getCoordinatesByDateInGroup: function (date, appointmentResources, inAllDayRow) {\n    var indexes = this._getGroupIndexes(appointmentResources);\n\n    var result = [];\n\n    if (this._isSkippedData(date)) {\n      return result;\n    }\n\n    if (indexes.length) {\n      for (var i = 0; i < indexes.length; i++) {\n        result.push(this.getCoordinatesByDate(date, indexes[i], inAllDayRow));\n      }\n    } else {\n      result.push(this.getCoordinatesByDate(date, 0, inAllDayRow));\n    }\n\n    return result;\n  },\n  getDroppableCellIndex: function () {\n    var $droppableCell = this._getDroppableCell();\n\n    var $row = $droppableCell.parent();\n    var rowIndex = $row.index();\n    return rowIndex * $row.find(\"td\").length + $droppableCell.index();\n  },\n  getDataByDroppableCell: function () {\n    var cellData = this.getCellData(this._getDroppableCell());\n    return {\n      date: cellData.startDate,\n      allDay: cellData.allDay,\n      groups: cellData.groups\n    };\n  },\n  getDateRange: function () {\n    return [this.getStartViewDate(), this.getEndViewDateByEndDayHour()];\n  },\n  getCellWidth: function () {\n    var cell = this._getCells().first().get(0);\n\n    return cell && getBoundingRect(cell).width;\n  },\n  getCellMinWidth: function () {\n    return DATE_TABLE_MIN_CELL_WIDTH;\n  },\n  getRoundedCellWidth: function (groupIndex, startIndex, cellCount) {\n    if (groupIndex < 0) {\n      return 0;\n    }\n\n    var $row = this.$element().find(\".\" + this._getDateTableRowClass()).eq(0);\n    var width = 0;\n    var $cells = $row.find(\".\" + DATE_TABLE_CELL_CLASS);\n    var totalCellCount = this._getCellCount() * groupIndex;\n    cellCount = cellCount || this._getCellCount();\n\n    if (!typeUtils.isDefined(startIndex)) {\n      startIndex = totalCellCount;\n    }\n\n    for (var i = startIndex; i < totalCellCount + cellCount; i++) {\n      width += getBoundingRect($($cells).eq(i).get(0)).width;\n    }\n\n    return width / (totalCellCount + cellCount - startIndex);\n  },\n  getCellHeight: function () {\n    var cell = this._getCells().first().get(0);\n\n    return cell && getBoundingRect(cell).height;\n  },\n  getAllDayHeight: function () {\n    var cell = this._getCells(true).first().get(0);\n\n    return this.option(\"showAllDayPanel\") ? cell && getBoundingRect(cell).height || 0 : 0;\n  },\n  getAllDayOffset: function () {\n    return this._groupedStrategy.getAllDayOffset();\n  },\n  getMaxAllowedPosition: function () {\n    if (!this._maxAllowedPosition) {\n      var isRtl = this.option(\"rtlEnabled\");\n      this._maxAllowedPosition = [];\n\n      this._$dateTable.find(\"tr\").first().find(\"td:nth-child(\" + this._getCellCount() + \"n)\").each(function (_, cell) {\n        var maxPosition = $(cell).position().left;\n\n        if (!isRtl) {\n          maxPosition += getBoundingRect(cell).width;\n        }\n\n        this._maxAllowedPosition.push(Math.round(maxPosition));\n      }.bind(this));\n    }\n\n    return this._maxAllowedPosition;\n  },\n  getMaxAllowedVerticalPosition: function () {\n    if (!this._maxAllowedVerticalPosition) {\n      var that = this;\n      this._maxAllowedVerticalPosition = [];\n\n      var rows = this._getRowCount();\n\n      this._$dateTable.find(\"tr:nth-child(\" + rows + \"n)\").each(function (_, row) {\n        var maxPosition = $(row).position().top + getBoundingRect(row).height;\n\n        that._maxAllowedVerticalPosition.push(Math.round(maxPosition));\n      });\n    }\n\n    return this._maxAllowedVerticalPosition;\n  },\n  getFixedContainer: function () {\n    return this._$fixedContainer;\n  },\n  getAllDayContainer: function () {\n    return this._$allDayContainer;\n  },\n  getCellIndexByCoordinates: function (coordinates, allDay) {\n    var cellCount = this._getTotalCellCount(this._getGroupCount());\n\n    var cellWidth = Math.floor(this._getWorkSpaceWidth() / cellCount);\n    var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();\n    var leftOffset = this._isRTL() || this.option(\"crossScrollingEnabled\") ? 0 : this.getWorkSpaceLeftOffset();\n    var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));\n    var leftIndex = Math.floor((coordinates.left + 5 - leftOffset) / cellWidth);\n\n    if (this._isRTL()) {\n      leftIndex = cellCount - leftIndex - 1;\n    }\n\n    return cellCount * topIndex + leftIndex;\n  },\n  getStartViewDate: function () {\n    return this._firstViewDate;\n  },\n  getEndViewDate: function () {\n    var dateOfLastViewCell = this.getDateOfLastViewCell();\n    var endDateOfLastViewCell = this.calculateEndViewDate(dateOfLastViewCell);\n    return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell);\n  },\n  getEndViewDateByEndDayHour: function () {\n    var dateOfLastViewCell = this.getDateOfLastViewCell();\n    var endTime = dateUtils.dateTimeFromDecimal(this.option(\"endDayHour\"));\n    var endDateOfLastViewCell = new Date(dateOfLastViewCell.setHours(endTime.hours, endTime.minutes));\n    return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell);\n  },\n  calculateEndViewDate: function (dateOfLastViewCell) {\n    return new Date(dateOfLastViewCell.getTime() + this.getCellDuration());\n  },\n  _adjustEndViewDateByDaylightDiff: function (startDate, endDate) {\n    var daylightDiff = timeZoneUtils.getDaylightOffsetInMs(startDate, endDate);\n    var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);\n    return new Date(endDateOfLastViewCell.getTime() - toMs(\"minute\"));\n  },\n  getDateOfLastViewCell: function () {\n    var rowIndex = this._getRowCount() - 1;\n\n    var cellIndex = this._getCellCount();\n\n    if (this.isGroupedByDate()) {\n      cellIndex = cellIndex * this._getGroupCount() - 1;\n    } else {\n      cellIndex -= 1;\n    }\n\n    return this._getDateByCellIndexes(rowIndex, cellIndex, true);\n  },\n  getCellDuration: function () {\n    return 36e5 * this.option(\"hoursInterval\");\n  },\n  getIntervalDuration: function (allDay) {\n    return allDay ? toMs(\"day\") : this.getCellDuration();\n  },\n  getVisibleDayDuration: function () {\n    return this.option(\"hoursInterval\") * this._getCellCountInDay() * HOUR_MS;\n  },\n  getGroupBounds: function (coordinates) {\n    var cellCount = this._getCellCount();\n\n    var $cells = this._getCells();\n\n    var cellWidth = this.getCellWidth();\n\n    var result = this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates);\n\n    if (this._isRTL()) {\n      var startOffset = result.left;\n      result.left = result.right - 2 * cellWidth;\n      result.right = startOffset + 2 * cellWidth;\n    }\n\n    return result;\n  },\n  needRecalculateResizableArea: function () {\n    return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop();\n  },\n  getCellDataByCoordinates: function (coordinates, allDay) {\n    var key = JSON.stringify({\n      top: coordinates.top,\n      left: coordinates.left\n    });\n    var data = this.getCellDataCache(key);\n\n    if (data) {\n      return data;\n    }\n\n    var $cells = this._getCells(allDay);\n\n    var cellIndex = this.getCellIndexByCoordinates(coordinates, allDay);\n    var $cell = $cells.eq(cellIndex);\n    return this.getCellData($cell);\n  },\n  getVisibleBounds: function () {\n    var result = {};\n    var $scrollable = this.getScrollable().$element();\n    var cellHeight = this.getCellHeight();\n    var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;\n    var totalCellCount = scrolledCellCount + $scrollable.height() / cellHeight;\n    result.top = {\n      hours: Math.floor(scrolledCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\n      minutes: scrolledCellCount % 2 ? 30 : 0\n    };\n    result.bottom = {\n      hours: Math.floor(totalCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\n      minutes: Math.floor(totalCellCount) % 2 ? 30 : 0\n    };\n    return result;\n  },\n  updateScrollPosition: function (date) {\n    date = this.invoke(\"convertDateByTimezone\", date);\n    var bounds = this.getVisibleBounds();\n    var startDateHour = date.getHours();\n    var startDateMinutes = date.getMinutes();\n\n    if (this.needUpdateScrollPosition(startDateHour, startDateMinutes, bounds, date)) {\n      this.scrollToTime(startDateHour, startDateMinutes, date);\n    }\n  },\n  needUpdateScrollPosition: function (hours, minutes, bounds) {\n    var isUpdateNeeded = false;\n\n    if (hours < bounds.top.hours || hours > bounds.bottom.hours) {\n      isUpdateNeeded = true;\n    }\n\n    if (hours === bounds.top.hours && minutes < bounds.top.minutes) {\n      isUpdateNeeded = true;\n    }\n\n    if (hours === bounds.bottom.hours && minutes > bounds.top.minutes) {\n      isUpdateNeeded = true;\n    }\n\n    return isUpdateNeeded;\n  },\n  getGroupWidth: function (groupIndex) {\n    var result = this._getCellCount() * this.getCellWidth();\n    var position = this.getMaxAllowedPosition();\n    var currentPosition = position[groupIndex];\n\n    if (position.length && currentPosition) {\n      if (this._isRTL()) {\n        result = currentPosition - position[groupIndex + 1];\n      } else {\n        if (0 === groupIndex) {\n          result = currentPosition;\n        } else {\n          result = currentPosition - position[groupIndex - 1];\n        }\n      }\n    }\n\n    return result;\n  },\n  scrollToTime: function (hours, minutes, date) {\n    var min = this.getStartViewDate();\n    var max = this.getEndViewDate();\n\n    if (date < min || date > max) {\n      errors.log(\"W1008\", date);\n      return;\n    }\n\n    var coordinates = this._getScrollCoordinates(hours, minutes, date);\n\n    var scrollable = this.getScrollable();\n    scrollable.scrollBy({\n      top: coordinates.top - scrollable.scrollTop(),\n      left: 0\n    });\n  },\n  getDistanceBetweenCells: function (startIndex, endIndex) {\n    var result = 0;\n    this.$element().find(\".\" + this._getDateTableRowClass()).first().find(\".\" + DATE_TABLE_CELL_CLASS).each(function (index) {\n      if (index < startIndex || index > endIndex) {\n        return true;\n      }\n\n      result += getBoundingRect(this).width;\n    });\n    return result;\n  },\n  needApplyCollectorOffset: function () {\n    return false;\n  },\n  initDragBehavior: function (scheduler) {\n    if (!this.dragBehavior && scheduler) {\n      this.dragBehavior = new AppointmentDragBehavior(scheduler);\n      this.dragBehavior.addTo(this.getWorkArea());\n      this.dragBehavior.addTo(this.getAllDayContainer());\n      this.dragBehavior.addTo(this._$allDayPanel);\n    }\n  },\n  _isApplyCompactAppointmentOffset: function () {\n    return this._supportCompactDropDownAppointments();\n  },\n  _supportCompactDropDownAppointments: function () {\n    return true;\n  },\n  _formatWeekday: function (date) {\n    return formatWeekday(date);\n  },\n  _formatWeekdayAndDay: function (date) {\n    return formatWeekday(date) + \" \" + dateLocalization.format(date, \"day\");\n  },\n  removeDroppableCellClass: function ($cellElement) {\n    ($cellElement || this._getDroppableCell()).removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS);\n  }\n}).include(publisherMixin);\nmodule.exports = SchedulerWorkSpace;","map":{"version":3,"sources":["/Users/tracyvy/Desktop/calendar/client/node_modules/devextreme/ui/scheduler/workspaces/ui.scheduler.work_space.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","$","require","domAdapter","eventsEngine","dataUtils","dateUtils","typeUtils","windowUtils","getPublicElement","extend","each","getBoundingRect","messageLocalization","dateLocalization","toMs","dateToMilliseconds","Widget","abstract","noop","isDefined","publisherMixin","eventUtils","pointerEvents","errors","clickEvent","contextMenuEvent","dragEvents","Scrollable","HorizontalGroupedStrategy","VerticalGroupedStrategy","tableCreator","VerticalShader","AppointmentDragBehavior","FIXED_CONTAINER_CLASS","timeZoneUtils","COMPONENT_CLASS","GROUPED_WORKSPACE_CLASS","VERTICAL_GROUPED_WORKSPACE_CLASS","WORKSPACE_VERTICAL_GROUP_TABLE_CLASS","WORKSPACE_WITH_BOTH_SCROLLS_CLASS","WORKSPACE_WITH_COUNT_CLASS","WORKSPACE_WITH_GROUP_BY_DATE_CLASS","WORKSPACE_WITH_ODD_CELLS_CLASS","TIME_PANEL_CLASS","TIME_PANEL_CELL_CLASS","TIME_PANEL_ROW_CLASS","ALL_DAY_PANEL_CLASS","ALL_DAY_TABLE_CLASS","ALL_DAY_CONTAINER_CLASS","ALL_DAY_TITLE_CLASS","ALL_DAY_TITLE_HIDDEN_CLASS","ALL_DAY_TABLE_CELL_CLASS","ALL_DAY_TABLE_ROW_CLASS","WORKSPACE_WITH_ALL_DAY_CLASS","WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS","WORKSPACE_WITH_MOUSE_SELECTION_CLASS","HORIZONTAL_SIZES_CLASS","VERTICAL_SIZES_CLASS","HEADER_PANEL_CLASS","HEADER_PANEL_CELL_CLASS","HEADER_ROW_CLASS","GROUP_ROW_CLASS","GROUP_HEADER_CLASS","GROUP_HEADER_CONTENT_CLASS","DATE_TABLE_CLASS","DATE_TABLE_CELL_CLASS","DATE_TABLE_ROW_CLASS","DATE_TABLE_FOCUSED_CELL_CLASS","DATE_TABLE_DROPPABLE_CELL_CLASS","SCHEDULER_HEADER_SCROLLABLE_CLASS","SCHEDULER_SIDEBAR_SCROLLABLE_CLASS","SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS","SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME","addNamespace","down","SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME","enter","SCHEDULER_CELL_DXDROP_EVENT_NAME","drop","SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME","leave","SCHEDULER_CELL_DXCLICK_EVENT_NAME","name","SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME","SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME","up","SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME","move","CELL_DATA","DATE_TABLE_CELL_BORDER","DATE_TABLE_MIN_CELL_WIDTH","DAY_MS","HOUR_MS","SCHEDULER_DRAG_AND_DROP_SELECTOR","concat","ScrollSemaphore","counter","value","formatWeekday","date","getDayNames","getDay","SchedulerWorkSpace","inherit","_supportedKeys","clickHandler","e","preventDefault","stopPropagation","_focusedCells","$itemElement","option","$cellElement","_showPopup","_cellClickAction","event","cellElement","cellData","getCellData","arrowPressHandler","cell","_moveToCell","shiftKey","callBase","space","downArrow","$cell","_getCellFromNextRow","call","upArrow","rightArrow","$rightCell","_getCellFromNextColumn","leftArrow","$leftCell","_isRTL","_getFocusedCell","_$focusedCell","_$dateTable","find","eq","_getAllFocusedCells","direction","$currentCell","cellIndex","index","$row","parent","children","_checkForViewBounds","$item","isMultiSelection","$focusedCell","$nextCell","nextColumnDirection","isDirectionNext","previousColumnDirection","isRTL","groupCount","_getGroupCount","isHorizontalGrouping","_isHorizontalGroupedWorkSpace","isGroupedByDate","totalCellCount","_getTotalCellCount","rowCellCount","_getCellCount","lastIndexInRow","currentIndex","step","isEdgeCell","_isEdgeCell","sign","directionSign","resultingSign","_isGroupEndCell","nextIndex","rowDirection","rightEdgeCellIndex","leftEdgeCellIndex","edgeCellIndex","isNextCellGreaterThanEdge","isNextCellLessThanEdge","isRightEdgeCell","isLeftEdgeCell","cellsInRow","currentCellIndex","result","endCell","startCell","_setFocusedCell","_dateTableScrollable","scrollToElement","_releaseFocusedCell","_correctCellForGroup","orientation","$targetCells","_getCellsBetween","_$prevCell","toArray","get","$focusedCells","_toggleFocusClass","setAria","_toggleFocusedCellClass","selectedCellData","getFocusedCellData","_selectionChangedAction","cellGroupIndex","_getGroupIndexByCell","focusedCellGroupIndex","isDifferentTables","_hasAllDayClass","$first","$last","isAllDayTable","$cells","_getCells","firstIndex","lastIndex","buffer","slice","focusedGroupIndex","_","groupIndex","push","bind","hasClass","_groupedStrategy","getGroupIndexByCell","isFocused","$element","$focusTarget","_focusTarget","toggleClass","_focusInHandler","is","_isCellClick","_contextMenuHandled","apply","arguments","_focusOutHandler","_activeStateUnit","_getDefaultOptions","currentDate","Date","intervalCount","startDate","firstDayOfWeek","startDayHour","endDayHour","hoursInterval","activeStateEnabled","hoverStateEnabled","groups","showAllDayPanel","allDayExpanded","onCellClick","crossScrollingEnabled","dataCellTemplate","timeCellTemplate","resourceCellTemplate","dateCellTemplate","allowMultipleCellSelection","indicatorTime","indicatorUpdateInterval","shadeUntilCurrentTime","groupOrientation","groupByDate","_optionChanged","args","invoke","_cleanWorkSpace","_cleanView","_removeAllDayElements","_initGrouping","repaint","_initGroupedStrategy","_createAllDayPanelElements","_toggleGroupByDateClass","_isVerticalGroupedWorkSpace","_toggleAllDayVisibility","_changeAllDayVisibility","_attachTablesEvents","headerPanelOffsetRecalculate","_updateScrollable","_createSelectionChangedAction","_createCellClickAction","_attachContextMenuEvent","_toggleWorkSpaceCountClass","_toggleFixedScrollableClass","_toggleHorizontalScrollClass","_dateTableScrollableConfig","_dimensionChanged","_toggleGroupedClass","_toggleWorkSpaceWithOddCells","_renderView","_init","_headerSemaphore","_sideBarSemaphore","_dataTableSemaphore","addClass","_getElementClass","_toggleGroupingDirectionClass","strategyName","_getDefaultGroupStrategy","Strategy","_isWorkSpaceWithCount","_isWorkspaceWithOddCells","_getRealGroupOrientation","_getTimePanelClass","_getDateTableClass","_getDateTableRowClass","_getDateTableCellClass","j","cellClass","_needApplyLastGroupCellClass","addAdditionalGroupCellClasses","_getGroupRowClass","_getGroupHeaderClass","_getGroupHeaderContentClass","_initWorkSpaceUnits","_$headerPanel","_$thead","appendTo","_$fixedContainer","_$allDayContainer","_initAllDayPanelElements","_$timePanel","_$groupTable","_allDayTitles","_allDayTables","_allDayPanels","$allDayTitle","text","format","_$allDayTable","_$allDayPanel","append","_$allDayTitle","_initDateTableScrollable","$dateTableScrollable","_createComponent","config","useKeyboard","bounceEnabled","updateManually","pushBackValue","_needCreateCrossScrolling","_createCrossScrollingConfig","_this","onScroll","take","isFree","_sidebarScrollable","scrollTo","top","scrollOffset","_headerScrollable","left","release","onEnd","notifyObserver","_createWorkSpaceElements","_createWorkSpaceScrollableElements","_createWorkSpaceStaticElements","$content","_createHeaderScrollable","_createSidebarScrollable","prepend","$headerScrollable","_headerScrollableConfig","_this2","showScrollbar","useNative","_this3","$timePanelScrollable","_visibilityChanged","visible","_setHorizontalGroupHeaderCellsHeight","_setTableSizes","_attachTableClasses","_addTableClass","_attachHeaderTableClasses","$el","className","cellWidth","getCellWidth","getCellMinWidth","minWidth","getWorkSpaceMinWidth","$headerCells","last","width","_cleanCellDataCache","_cleanAllowedPositions","_getRowCount","_getRowCountWithAllDayRows","allDayRowsCount","_initMarkup","_attachEvents","_setFocusOnCellByOption","_render","_renderDateTimeIndication","_setIndicationUpdateInterval","_setFirstViewDate","_applyCellTemplates","_renderGroupHeader","_renderDateHeader","_renderTimePanel","_renderAllDayPanel","_renderDateTable","_updateGroupTableHeight","_shader","hasWindow","_refreshDateTimeIndication","data","cells","_getGroupIndexByResourceId","allDay","coordinates","getCoordinatesByDate","_getCellByCoordinates","id","groupKey","keys","groupValue","tree","leafIndex","_firstDayOfWeek","firstDayOfWeekIndex","_firstViewDate","getFirstWeekDate","_getViewStartByOptions","_setStartDayHour","trimTime","_getStartViewDate","diff","getTime","endDate","_getIntervalDuration","_dateInRange","_getHeaderDate","getStartViewDate","dateInRange","setHours","_attachClickEvent","that","pointerDownAction","_createAction","_pointerDownHandler","cellSelector","off","on","isMouseEvent","which","_createActionByOption","afterExecute","_moveToClosestNonStub","$target","_hasFocusClass","_showAddAppointmentPopup","firstCellData","first","lastCellData","_createContextMenuAction","eventName","NAME","_contextMenuHandler","_contextMenuAction","_getGroupHeaderContainer","_getDateHeaderContainer","$container","cellTemplates","groupRows","_makeGroupRows","_attachGroupCountAttr","elements","_detachGroupCountAttr","templates","forEach","template","groupedAttr","getGroupCountAttr","removeAttr","attr","groupRowCount","count","headerPanelHeight","getHeaderPanelHeight","headerHeight","allDayPanelHeight","supportAllDayRow","getAllDayTableHeight","height","css","paddingBottom","marginBottom","parseInt","tableCreatorStrategy","VERTICAL","HORIZONTAL","makeGroupedTable","groupHeaderRowClass","groupRowClass","groupHeaderClass","groupHeaderContentClass","_getDateHeaderTemplate","$headerRow","cellTemplate","repeatCount","_calculateHeaderCellRepeatCount","templateCallbacks","colspan","_renderDateHeaderTemplate","calculatedIndex","_getHeaderText","_getHeaderPanelCellClass","render","model","_getDateByIndex","container","calculateHeaderCellRepeatCount","cellCount","_renderTableBody","rowCount","_getAllDayPanelCellClass","rowClass","_getAllDayCellData","rowIndex","_getDateByCellIndexes","_getCellGroups","_getGroupIndex","toggle","update","_this4","calculateTimeCellRepeatCount","startViewDate","_getDateWithSkippedDST","_getTimeText","_getTimeCellDateCore","_getTimePanelRowCount","_getTimeCellClass","getCellText","getCellDate","_getTimeCellDate","allDayElements","_insertAllDayRowsIntoDateTable","isTimezoneChangeInDate","setDate","getDate","_getCellCountInDay","skipRound","_calculateDayDuration","Math","ceil","_getTimeCellDateAdjustedDST","timeCellDuration","round","getCellDuration","cellCountInDay","setMilliseconds","getMilliseconds","_getTotalRowCount","_getCellData","insertAllDayRowsIntoDateTable","getTotalCellCount","getTotalRowCount","_prepareCellData","calculateEndDate","_getTableAllDay","getGroupIndex","_getInterval","len","items","_getPathToLeaf","findLeafByIndex","_leaf","makeBranch","leaf","reverse","path","_this5","isPointerDown","cellHeight","itemSizeFunc","checkDropTarget","_isOutsideScrollable","_$currentTableTarget","removeDroppableCellClass","draggingElement","getDocument","removeClass","_getDateTables","add","_getDateTable","_getAllDayTable","_interval","headerIndex","_getFormat","_calculateCellIndex","calculateCellIndex","options","delayCellTemplateRendering","makeTable","remove","empty","clean","_hiddenInterval","_clean","getWorkArea","getScrollable","getScrollableScrollTop","scrollTop","getGroupedScrollableScrollTop","getScrollableScrollLeft","scrollLeft","getScrollableOuterWidth","scrollWidth","getScrollableContainer","_container","outerHeight","getTimePanelWidth","getGroupTableWidth","outerWidth","getWorkSpaceLeftOffset","getLeftOffset","getGroupedStrategy","_getCellCoordinatesByIndex","floor","patchedIndexes","_patchCellIndex","firstViewDate","_getMillisecondsOffset","_getOffsetByCount","setTime","getTimezonesDifference","_calculateHiddenInterval","dayCount","_getHiddenInterval","getVisibleDayDuration","_getIntervalBetween","startDayTime","timeZoneOffset","fullInterval","days","_getDaysOfInterval","weekendsCount","_getWeekendsCount","_getGroupIndexes","appointmentResources","_updateIndex","_getDroppableCell","_getWorkSpaceWidth","_getCellPositionByIndex","inAllDayRow","cellCoordinates","_getCellPosition","setCellDataCache","position","indexes","prepareCellIndexes","_getDateTableBorder","_getDateTableBorderOffset","_getGroupHeaderCellsContent","_getGroupHeaderCells","_getScrollCoordinates","hours","minutes","$dateTableScrollableElement","scrollableSize","window","getWindow","isTargetInAllDayPanel","closest","isOutsideHorizontalScrollable","pageX","scrollX","isOutsideVerticalScrollable","pageY","scrollY","cache","getCellDataCache","JSON","stringify","setCellDataCacheAlias","appointment","geometry","aliasKey","_cache","_maxAllowedVerticalPosition","_maxAllowedPosition","keepOriginalHours","_getMultipleCellsData","_getHorizontalMax","getHorizontalMax","getCellIndexByDate","shift","getPositionShift","getTimeShift","horizontalHMax","Error","cellPosition","hMax","vMax","getVerticalMax","_getOffsetByAllDayPanel","_getGroupTop","timeInterval","dateTimeStamp","timeShift","isAllDay","getCellHeight","currentDayStart","cellDuration","currentDayEndHour","currentDateTime","currentDayStartTime","minTime","_isSkippedData","getCoordinatesByDateInGroup","getDroppableCellIndex","$droppableCell","getDataByDroppableCell","getDateRange","getEndViewDateByEndDayHour","getRoundedCellWidth","startIndex","getAllDayHeight","getAllDayOffset","getMaxAllowedPosition","isRtl","maxPosition","getMaxAllowedVerticalPosition","rows","row","getFixedContainer","getAllDayContainer","getCellIndexByCoordinates","leftOffset","topIndex","leftIndex","getEndViewDate","dateOfLastViewCell","getDateOfLastViewCell","endDateOfLastViewCell","calculateEndViewDate","_adjustEndViewDateByDaylightDiff","endTime","dateTimeFromDecimal","daylightDiff","getDaylightOffsetInMs","getIntervalDuration","getGroupBounds","getGroupBoundsOffset","startOffset","right","needRecalculateResizableArea","getCellDataByCoordinates","getVisibleBounds","$scrollable","scrolledCellCount","bottom","updateScrollPosition","bounds","startDateHour","getHours","startDateMinutes","getMinutes","needUpdateScrollPosition","scrollToTime","isUpdateNeeded","getGroupWidth","currentPosition","min","max","log","scrollable","scrollBy","getDistanceBetweenCells","endIndex","needApplyCollectorOffset","initDragBehavior","scheduler","dragBehavior","addTo","_isApplyCompactAppointmentOffset","_supportCompactDropDownAppointments","_formatWeekday","_formatWeekdayAndDay","include","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/scheduler/workspaces/ui.scheduler.work_space.js)\r\n * Version: 20.1.6\r\n * Build date: Fri Jul 17 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _classCallCheck(instance, Constructor) {\r\n    if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\")\r\n    }\r\n}\r\n\r\nfunction _defineProperties(target, props) {\r\n    for (var i = 0; i < props.length; i++) {\r\n        var descriptor = props[i];\r\n        descriptor.enumerable = descriptor.enumerable || false;\r\n        descriptor.configurable = true;\r\n        if (\"value\" in descriptor) {\r\n            descriptor.writable = true\r\n        }\r\n        Object.defineProperty(target, descriptor.key, descriptor)\r\n    }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n    if (protoProps) {\r\n        _defineProperties(Constructor.prototype, protoProps)\r\n    }\r\n    if (staticProps) {\r\n        _defineProperties(Constructor, staticProps)\r\n    }\r\n    return Constructor\r\n}\r\nvar $ = require(\"../../../core/renderer\");\r\nvar domAdapter = require(\"../../../core/dom_adapter\");\r\nvar eventsEngine = require(\"../../../events/core/events_engine\");\r\nvar dataUtils = require(\"../../../core/element_data\");\r\nvar dateUtils = require(\"../../../core/utils/date\");\r\nvar typeUtils = require(\"../../../core/utils/type\");\r\nvar windowUtils = require(\"../../../core/utils/window\");\r\nvar getPublicElement = require(\"../../../core/utils/dom\").getPublicElement;\r\nvar extend = require(\"../../../core/utils/extend\").extend;\r\nvar each = require(\"../../../core/utils/iterator\").each;\r\nvar getBoundingRect = require(\"../../../core/utils/position\").getBoundingRect;\r\nvar messageLocalization = require(\"../../../localization/message\");\r\nvar dateLocalization = require(\"../../../localization/date\");\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nvar Widget = require(\"../../widget/ui.widget\");\r\nvar abstract = Widget.abstract;\r\nvar noop = require(\"../../../core/utils/common\").noop;\r\nvar isDefined = require(\"../../../core/utils/type\").isDefined;\r\nvar publisherMixin = require(\"../ui.scheduler.publisher_mixin\");\r\nvar eventUtils = require(\"../../../events/utils\");\r\nvar pointerEvents = require(\"../../../events/pointer\");\r\nvar errors = require(\"../../widget/ui.errors\");\r\nvar clickEvent = require(\"../../../events/click\");\r\nvar contextMenuEvent = require(\"../../../events/contextmenu\");\r\nvar dragEvents = require(\"../../../events/drag\");\r\nvar Scrollable = require(\"../../scroll_view/ui.scrollable\");\r\nvar HorizontalGroupedStrategy = require(\"./ui.scheduler.work_space.grouped.strategy.horizontal\");\r\nvar VerticalGroupedStrategy = require(\"./ui.scheduler.work_space.grouped.strategy.vertical\");\r\nvar tableCreator = require(\"../ui.scheduler.table_creator\");\r\nvar VerticalShader = require(\"../shaders/ui.scheduler.current_time_shader.vertical\");\r\nvar AppointmentDragBehavior = require(\"../appointmentDragBehavior\");\r\nvar FIXED_CONTAINER_CLASS = require(\"../constants\").FIXED_CONTAINER_CLASS;\r\nvar timeZoneUtils = require(\"../utils.timeZone\");\r\nvar COMPONENT_CLASS = \"dx-scheduler-work-space\";\r\nvar GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-grouped\";\r\nvar VERTICAL_GROUPED_WORKSPACE_CLASS = \"dx-scheduler-work-space-vertical-grouped\";\r\nvar WORKSPACE_VERTICAL_GROUP_TABLE_CLASS = \"dx-scheduler-work-space-vertical-group-table\";\r\nvar WORKSPACE_WITH_BOTH_SCROLLS_CLASS = \"dx-scheduler-work-space-both-scrollbar\";\r\nvar WORKSPACE_WITH_COUNT_CLASS = \"dx-scheduler-work-space-count\";\r\nvar WORKSPACE_WITH_GROUP_BY_DATE_CLASS = \"dx-scheduler-work-space-group-by-date\";\r\nvar WORKSPACE_WITH_ODD_CELLS_CLASS = \"dx-scheduler-work-space-odd-cells\";\r\nvar TIME_PANEL_CLASS = \"dx-scheduler-time-panel\";\r\nvar TIME_PANEL_CELL_CLASS = \"dx-scheduler-time-panel-cell\";\r\nvar TIME_PANEL_ROW_CLASS = \"dx-scheduler-time-panel-row\";\r\nvar ALL_DAY_PANEL_CLASS = \"dx-scheduler-all-day-panel\";\r\nvar ALL_DAY_TABLE_CLASS = \"dx-scheduler-all-day-table\";\r\nvar ALL_DAY_CONTAINER_CLASS = \"dx-scheduler-all-day-appointments\";\r\nvar ALL_DAY_TITLE_CLASS = \"dx-scheduler-all-day-title\";\r\nvar ALL_DAY_TITLE_HIDDEN_CLASS = \"dx-scheduler-all-day-title-hidden\";\r\nvar ALL_DAY_TABLE_CELL_CLASS = \"dx-scheduler-all-day-table-cell\";\r\nvar ALL_DAY_TABLE_ROW_CLASS = \"dx-scheduler-all-day-table-row\";\r\nvar WORKSPACE_WITH_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day\";\r\nvar WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS = \"dx-scheduler-work-space-all-day-collapsed\";\r\nvar WORKSPACE_WITH_MOUSE_SELECTION_CLASS = \"dx-scheduler-work-space-mouse-selection\";\r\nvar HORIZONTAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-horizontal\";\r\nvar VERTICAL_SIZES_CLASS = \"dx-scheduler-cell-sizes-vertical\";\r\nvar HEADER_PANEL_CLASS = \"dx-scheduler-header-panel\";\r\nvar HEADER_PANEL_CELL_CLASS = \"dx-scheduler-header-panel-cell\";\r\nvar HEADER_ROW_CLASS = \"dx-scheduler-header-row\";\r\nvar GROUP_ROW_CLASS = \"dx-scheduler-group-row\";\r\nvar GROUP_HEADER_CLASS = \"dx-scheduler-group-header\";\r\nvar GROUP_HEADER_CONTENT_CLASS = \"dx-scheduler-group-header-content\";\r\nvar DATE_TABLE_CLASS = \"dx-scheduler-date-table\";\r\nvar DATE_TABLE_CELL_CLASS = \"dx-scheduler-date-table-cell\";\r\nvar DATE_TABLE_ROW_CLASS = \"dx-scheduler-date-table-row\";\r\nvar DATE_TABLE_FOCUSED_CELL_CLASS = \"dx-scheduler-focused-cell\";\r\nvar DATE_TABLE_DROPPABLE_CELL_CLASS = \"dx-scheduler-date-table-droppable-cell\";\r\nvar SCHEDULER_HEADER_SCROLLABLE_CLASS = \"dx-scheduler-header-scrollable\";\r\nvar SCHEDULER_SIDEBAR_SCROLLABLE_CLASS = \"dx-scheduler-sidebar-scrollable\";\r\nvar SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS = \"dx-scheduler-date-table-scrollable\";\r\nvar SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, \"dxSchedulerWorkSpace\");\r\nvar SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME = eventUtils.addNamespace(dragEvents.enter, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXDROP_EVENT_NAME = eventUtils.addNamespace(dragEvents.drop, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME = eventUtils.addNamespace(dragEvents.leave, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXCLICK_EVENT_NAME = eventUtils.addNamespace(clickEvent.name, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, \"dxSchedulerDateTable\");\r\nvar SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME = eventUtils.addNamespace(pointerEvents.move, \"dxSchedulerDateTable\");\r\nvar CELL_DATA = \"dxCellData\";\r\nvar DATE_TABLE_CELL_BORDER = 1;\r\nvar DATE_TABLE_MIN_CELL_WIDTH = 75;\r\nvar DAY_MS = toMs(\"day\");\r\nvar HOUR_MS = toMs(\"hour\");\r\nvar SCHEDULER_DRAG_AND_DROP_SELECTOR = \".\".concat(DATE_TABLE_CLASS, \" td, .\").concat(ALL_DAY_TABLE_CLASS, \" td\");\r\nvar ScrollSemaphore = function() {\r\n    function ScrollSemaphore() {\r\n        _classCallCheck(this, ScrollSemaphore);\r\n        this.counter = 0\r\n    }\r\n    _createClass(ScrollSemaphore, [{\r\n        key: \"isFree\",\r\n        value: function() {\r\n            return 0 === this.counter\r\n        }\r\n    }, {\r\n        key: \"take\",\r\n        value: function() {\r\n            this.counter++\r\n        }\r\n    }, {\r\n        key: \"release\",\r\n        value: function() {\r\n            this.counter--;\r\n            if (this.counter < 0) {\r\n                this.counter = 0\r\n            }\r\n        }\r\n    }]);\r\n    return ScrollSemaphore\r\n}();\r\nvar formatWeekday = function(date) {\r\n    return dateLocalization.getDayNames(\"abbreviated\")[date.getDay()]\r\n};\r\nvar SchedulerWorkSpace = Widget.inherit({\r\n    _supportedKeys: function() {\r\n        var clickHandler = function(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            if (this._focusedCells && this._focusedCells.length) {\r\n                var $itemElement = $(this.option(\"focusedElement\"));\r\n                var $cellElement = $itemElement.length ? $itemElement : this._focusedCells;\r\n                e.target = this._focusedCells;\r\n                this._showPopup = true;\r\n                this._cellClickAction({\r\n                    event: e,\r\n                    cellElement: $(this._focusedCells),\r\n                    cellData: this.getCellData($cellElement)\r\n                })\r\n            }\r\n        };\r\n        var arrowPressHandler = function(e, cell) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._moveToCell(cell, e.shiftKey)\r\n        };\r\n        return extend(this.callBase(), {\r\n            enter: clickHandler,\r\n            space: clickHandler,\r\n            downArrow: function(e) {\r\n                var $cell = this._getCellFromNextRow(\"next\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $cell)\r\n            },\r\n            upArrow: function(e) {\r\n                var $cell = this._getCellFromNextRow(\"prev\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $cell)\r\n            },\r\n            rightArrow: function(e) {\r\n                var $rightCell = this._getCellFromNextColumn(\"next\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $rightCell)\r\n            },\r\n            leftArrow: function(e) {\r\n                var $leftCell = this._getCellFromNextColumn(\"prev\", e.shiftKey);\r\n                arrowPressHandler.call(this, e, $leftCell)\r\n            }\r\n        })\r\n    },\r\n    _isRTL: function() {\r\n        return this.option(\"rtlEnabled\")\r\n    },\r\n    _getFocusedCell: function() {\r\n        return this._$focusedCell || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0)\r\n    },\r\n    _getAllFocusedCells: function() {\r\n        return this._focusedCells || this._$dateTable.find(\".\" + DATE_TABLE_CELL_CLASS).eq(0)\r\n    },\r\n    _getCellFromNextRow: function(direction) {\r\n        var $currentCell = this._$focusedCell;\r\n        if (isDefined($currentCell)) {\r\n            var cellIndex = $currentCell.index();\r\n            var $row = $currentCell.parent();\r\n            var $cell = $row[direction]().children().eq(cellIndex);\r\n            $cell = this._checkForViewBounds($cell);\r\n            return $cell\r\n        }\r\n    },\r\n    _checkForViewBounds: function($item) {\r\n        if (!$item.length) {\r\n            $item = this._$focusedCell\r\n        }\r\n        return $item\r\n    },\r\n    _getCellFromNextColumn: function(direction, isMultiSelection) {\r\n        var $focusedCell = this._$focusedCell;\r\n        if (!isDefined($focusedCell)) {\r\n            return\r\n        }\r\n        var $nextCell;\r\n        var $row = $focusedCell.parent();\r\n        var nextColumnDirection = direction;\r\n        var isDirectionNext = \"next\" === direction;\r\n        var previousColumnDirection = isDirectionNext ? \"prev\" : \"next\";\r\n        var isRTL = this._isRTL();\r\n        var groupCount = this._getGroupCount();\r\n        var isHorizontalGrouping = this._isHorizontalGroupedWorkSpace();\r\n        var isGroupedByDate = this.isGroupedByDate();\r\n        var totalCellCount = this._getTotalCellCount(groupCount);\r\n        var rowCellCount = isMultiSelection && !isGroupedByDate ? this._getCellCount() : totalCellCount;\r\n        var lastIndexInRow = rowCellCount - 1;\r\n        var currentIndex = $focusedCell.index();\r\n        var step = isGroupedByDate && isMultiSelection ? groupCount : 1;\r\n        var isEdgeCell = this._isEdgeCell(isHorizontalGrouping ? totalCellCount - 1 : lastIndexInRow, currentIndex, step, direction);\r\n        var sign = isRTL ? 1 : -1;\r\n        var directionSign = isDirectionNext ? 1 : -1;\r\n        var resultingSign = sign * directionSign;\r\n        if (isEdgeCell || isMultiSelection && this._isGroupEndCell($focusedCell, direction)) {\r\n            var nextIndex = currentIndex - resultingSign * step + resultingSign * rowCellCount;\r\n            var rowDirection = isRTL ? previousColumnDirection : nextColumnDirection;\r\n            $nextCell = $row[rowDirection]().children().eq(nextIndex);\r\n            $nextCell = this._checkForViewBounds($nextCell)\r\n        } else {\r\n            $nextCell = $row.children().eq(currentIndex - resultingSign * step)\r\n        }\r\n        return $nextCell\r\n    },\r\n    _isEdgeCell: function(lastIndexInRow, cellIndex, step, direction) {\r\n        var isRTL = this._isRTL();\r\n        var isDirectionNext = \"next\" === direction;\r\n        var rightEdgeCellIndex = isRTL ? 0 : lastIndexInRow;\r\n        var leftEdgeCellIndex = isRTL ? lastIndexInRow : 0;\r\n        var edgeCellIndex = isDirectionNext ? rightEdgeCellIndex : leftEdgeCellIndex;\r\n        var isNextCellGreaterThanEdge = cellIndex + step > edgeCellIndex;\r\n        var isNextCellLessThanEdge = cellIndex - step < edgeCellIndex;\r\n        var isRightEdgeCell = isRTL ? isNextCellLessThanEdge : isNextCellGreaterThanEdge;\r\n        var isLeftEdgeCell = isRTL ? isNextCellGreaterThanEdge : isNextCellLessThanEdge;\r\n        return isDirectionNext ? isRightEdgeCell : isLeftEdgeCell\r\n    },\r\n    _isGroupEndCell: function($cell, direction) {\r\n        if (this.isGroupedByDate()) {\r\n            return false\r\n        }\r\n        var isDirectionNext = \"next\" === direction;\r\n        var cellsInRow = this._getCellCount();\r\n        var currentCellIndex = $cell.index();\r\n        var result = currentCellIndex % cellsInRow;\r\n        var endCell = isDirectionNext ? cellsInRow - 1 : 0;\r\n        var startCell = isDirectionNext ? 0 : cellsInRow - 1;\r\n        return this._isRTL() ? result === startCell : result === endCell\r\n    },\r\n    _moveToCell: function($cell, isMultiSelection) {\r\n        isMultiSelection = isMultiSelection && this.option(\"allowMultipleCellSelection\");\r\n        this._setFocusedCell($cell, isMultiSelection);\r\n        this._dateTableScrollable.scrollToElement($cell)\r\n    },\r\n    _setFocusedCell: function($cell, isMultiSelection) {\r\n        if (!isDefined($cell) || !$cell.length) {\r\n            return\r\n        }\r\n        this._releaseFocusedCell();\r\n        this._focusedCells = [];\r\n        if (isMultiSelection) {\r\n            $cell = this._correctCellForGroup($cell);\r\n            var orientation = \"day\" === this.option(\"type\") && (!this.option(\"groups\").length || \"vertical\" === this.option(\"groupOrientation\")) ? \"vertical\" : \"horizontal\";\r\n            var $targetCells = this._getCellsBetween($cell, this._$prevCell, orientation);\r\n            this._focusedCells = $targetCells.toArray()\r\n        } else {\r\n            this._focusedCells = [$cell.get(0)];\r\n            this._$prevCell = $cell\r\n        }\r\n        var $focusedCells = $(this._focusedCells);\r\n        this._toggleFocusClass(true, $focusedCells);\r\n        this.setAria(\"label\", \"Add appointment\", $focusedCells);\r\n        this._toggleFocusedCellClass(true, $cell);\r\n        this._$focusedCell = $cell;\r\n        var selectedCellData = this.getFocusedCellData();\r\n        this.option(\"selectedCellData\", selectedCellData);\r\n        this._selectionChangedAction({\r\n            selectedCellData: selectedCellData\r\n        })\r\n    },\r\n    _correctCellForGroup: function($cell) {\r\n        var $focusedCell = this._$focusedCell;\r\n        var cellGroupIndex = this._getGroupIndexByCell($cell);\r\n        var focusedCellGroupIndex = this._getGroupIndexByCell($focusedCell);\r\n        var isDifferentTables = this._hasAllDayClass($cell) !== this._hasAllDayClass($focusedCell);\r\n        return focusedCellGroupIndex !== cellGroupIndex || isDifferentTables ? $focusedCell : $cell\r\n    },\r\n    _getCellsBetween: function($first, $last, direction) {\r\n        var isAllDayTable = this._hasAllDayClass($last);\r\n        var $cells = this._getCells(isAllDayTable, direction);\r\n        var firstIndex = $cells.index($first);\r\n        var lastIndex = $cells.index($last);\r\n        if (firstIndex > lastIndex) {\r\n            var buffer = firstIndex;\r\n            firstIndex = lastIndex;\r\n            lastIndex = buffer\r\n        }\r\n        $cells = $cells.slice(firstIndex, lastIndex + 1);\r\n        if (this._getGroupCount() > 1) {\r\n            var result = [];\r\n            var focusedGroupIndex = this._getGroupIndexByCell($first);\r\n            each($cells, function(_, cell) {\r\n                var groupIndex = this._getGroupIndexByCell($(cell));\r\n                if (focusedGroupIndex === groupIndex) {\r\n                    result.push(cell)\r\n                }\r\n            }.bind(this));\r\n            $cells = $(result)\r\n        }\r\n        return $cells\r\n    },\r\n    _hasAllDayClass: function($cell) {\r\n        return $cell.hasClass(ALL_DAY_TABLE_CELL_CLASS)\r\n    },\r\n    _getGroupIndexByCell: function($cell) {\r\n        return this._groupedStrategy.getGroupIndexByCell($cell)\r\n    },\r\n    _toggleFocusedCellClass: function(isFocused, $element) {\r\n        var $focusTarget = $element && $element.length ? $element : this._focusTarget();\r\n        $focusTarget.toggleClass(DATE_TABLE_FOCUSED_CELL_CLASS, isFocused)\r\n    },\r\n    _releaseFocusedCell: function($cell) {\r\n        $cell = $cell || $(this._focusedCells);\r\n        if (isDefined($cell) && $cell.length) {\r\n            this._toggleFocusClass(false, $cell);\r\n            this._toggleFocusedCellClass(false, $cell);\r\n            this.setAria(\"label\", void 0, $cell)\r\n        }\r\n        this.option(\"selectedCellData\", [])\r\n    },\r\n    _focusInHandler: function(e) {\r\n        if ($(e.target).is(this._focusTarget()) && false !== this._isCellClick) {\r\n            delete this._isCellClick;\r\n            delete this._contextMenuHandled;\r\n            this.callBase.apply(this, arguments);\r\n            var $cell = this._getFocusedCell();\r\n            this._setFocusedCell($cell)\r\n        }\r\n    },\r\n    _focusOutHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._contextMenuHandled) {\r\n            this._releaseFocusedCell()\r\n        }\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _activeStateUnit: \".\" + DATE_TABLE_CELL_CLASS + \", .\" + ALL_DAY_TABLE_CELL_CLASS,\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            currentDate: new Date,\r\n            intervalCount: 1,\r\n            startDate: null,\r\n            firstDayOfWeek: void 0,\r\n            startDayHour: 0,\r\n            endDayHour: 24,\r\n            hoursInterval: .5,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            groups: [],\r\n            showAllDayPanel: true,\r\n            allDayExpanded: false,\r\n            onCellClick: null,\r\n            crossScrollingEnabled: false,\r\n            dataCellTemplate: null,\r\n            timeCellTemplate: null,\r\n            resourceCellTemplate: null,\r\n            dateCellTemplate: null,\r\n            allowMultipleCellSelection: true,\r\n            indicatorTime: new Date,\r\n            indicatorUpdateInterval: 5 * toMs(\"minute\"),\r\n            shadeUntilCurrentTime: true,\r\n            groupOrientation: \"horizontal\",\r\n            selectedCellData: [],\r\n            groupByDate: false\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"startDayHour\":\r\n            case \"endDayHour\":\r\n                this.invoke(\"validateDayHours\");\r\n                this._cleanWorkSpace();\r\n                break;\r\n            case \"dateCellTemplate\":\r\n            case \"resourceCellTemplate\":\r\n            case \"dataCellTemplate\":\r\n            case \"timeCellTemplate\":\r\n            case \"hoursInterval\":\r\n            case \"firstDayOfWeek\":\r\n            case \"currentDate\":\r\n            case \"startDate\":\r\n                this._cleanWorkSpace();\r\n                break;\r\n            case \"groups\":\r\n                this._cleanView();\r\n                this._removeAllDayElements();\r\n                this._initGrouping();\r\n                this.repaint();\r\n                break;\r\n            case \"groupOrientation\":\r\n                this._initGroupedStrategy();\r\n                this._createAllDayPanelElements();\r\n                this._removeAllDayElements();\r\n                this._cleanWorkSpace();\r\n                this._toggleGroupByDateClass();\r\n                break;\r\n            case \"showAllDayPanel\":\r\n                if (this._isVerticalGroupedWorkSpace()) {\r\n                    this._cleanView();\r\n                    this._removeAllDayElements();\r\n                    this._initGrouping();\r\n                    this.repaint()\r\n                } else {\r\n                    this._toggleAllDayVisibility()\r\n                }\r\n                break;\r\n            case \"allDayExpanded\":\r\n                this._changeAllDayVisibility();\r\n                this._attachTablesEvents();\r\n                this.headerPanelOffsetRecalculate();\r\n                this._updateScrollable();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"onCellClick\":\r\n                this._createCellClickAction();\r\n                break;\r\n            case \"onCellContextMenu\":\r\n                this._attachContextMenuEvent();\r\n                break;\r\n            case \"intervalCount\":\r\n                this._cleanWorkSpace();\r\n                this._toggleWorkSpaceCountClass();\r\n                this._toggleFixedScrollableClass();\r\n                break;\r\n            case \"groupByDate\":\r\n                this._cleanWorkSpace();\r\n                this._toggleGroupByDateClass();\r\n                break;\r\n            case \"crossScrollingEnabled\":\r\n                this._toggleHorizontalScrollClass();\r\n                this._dateTableScrollable.option(this._dateTableScrollableConfig());\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"allowMultipleCellSelection\":\r\n                break;\r\n            case \"selectedCellData\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _cleanWorkSpace: function() {\r\n        this._cleanView();\r\n        this._toggleGroupedClass();\r\n        this._toggleWorkSpaceWithOddCells();\r\n        this._renderView()\r\n    },\r\n    _init: function() {\r\n        this._headerSemaphore = new ScrollSemaphore;\r\n        this._sideBarSemaphore = new ScrollSemaphore;\r\n        this._dataTableSemaphore = new ScrollSemaphore;\r\n        this.callBase();\r\n        this._initGrouping();\r\n        this._toggleHorizontalScrollClass();\r\n        this._toggleWorkSpaceCountClass();\r\n        this._toggleGroupByDateClass();\r\n        this._toggleWorkSpaceWithOddCells();\r\n        this.$element().addClass(COMPONENT_CLASS).addClass(this._getElementClass())\r\n    },\r\n    _initGrouping: function() {\r\n        this._initGroupedStrategy();\r\n        this._toggleGroupingDirectionClass();\r\n        this._toggleGroupByDateClass()\r\n    },\r\n    _initGroupedStrategy: function() {\r\n        var strategyName = this.option(\"groups\").length ? this.option(\"groupOrientation\") : this._getDefaultGroupStrategy();\r\n        var Strategy = \"vertical\" === strategyName ? VerticalGroupedStrategy : HorizontalGroupedStrategy;\r\n        this._groupedStrategy = new Strategy(this)\r\n    },\r\n    _getDefaultGroupStrategy: function() {\r\n        return \"horizontal\"\r\n    },\r\n    _isVerticalGroupedWorkSpace: function() {\r\n        return !!this.option(\"groups\").length && \"vertical\" === this.option(\"groupOrientation\")\r\n    },\r\n    _isHorizontalGroupedWorkSpace: function() {\r\n        return !!this.option(\"groups\").length && \"horizontal\" === this.option(\"groupOrientation\")\r\n    },\r\n    _toggleHorizontalScrollClass: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_BOTH_SCROLLS_CLASS, this.option(\"crossScrollingEnabled\"))\r\n    },\r\n    _toggleGroupByDateClass: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_GROUP_BY_DATE_CLASS, this.isGroupedByDate())\r\n    },\r\n    _toggleWorkSpaceCountClass: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_COUNT_CLASS, this._isWorkSpaceWithCount())\r\n    },\r\n    _isWorkSpaceWithCount: function() {\r\n        return this.option(\"intervalCount\") > 1\r\n    },\r\n    _toggleWorkSpaceWithOddCells: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_ODD_CELLS_CLASS, this._isWorkspaceWithOddCells())\r\n    },\r\n    _isWorkspaceWithOddCells: function() {\r\n        return .5 === this.option(\"hoursInterval\")\r\n    },\r\n    _toggleGroupingDirectionClass: function() {\r\n        this.$element().toggleClass(VERTICAL_GROUPED_WORKSPACE_CLASS, this._isVerticalGroupedWorkSpace())\r\n    },\r\n    _getRealGroupOrientation: function() {\r\n        return this._isVerticalGroupedWorkSpace() ? \"vertical\" : \"horizontal\"\r\n    },\r\n    _getTimePanelClass: function() {\r\n        return TIME_PANEL_CLASS\r\n    },\r\n    _getDateTableClass: function() {\r\n        return DATE_TABLE_CLASS\r\n    },\r\n    _getDateTableRowClass: function() {\r\n        return DATE_TABLE_ROW_CLASS\r\n    },\r\n    _getDateTableCellClass: function(i, j) {\r\n        var cellClass = DATE_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS + \" \" + VERTICAL_SIZES_CLASS;\r\n        return this._needApplyLastGroupCellClass() ? this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1, i, j) : cellClass\r\n    },\r\n    _needApplyLastGroupCellClass: function() {\r\n        return true\r\n    },\r\n    _getGroupRowClass: function() {\r\n        return GROUP_ROW_CLASS\r\n    },\r\n    _getGroupHeaderClass: function(i) {\r\n        var cellClass = GROUP_HEADER_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1)\r\n    },\r\n    _getGroupHeaderContentClass: function() {\r\n        return GROUP_HEADER_CONTENT_CLASS\r\n    },\r\n    _initWorkSpaceUnits: function() {\r\n        this._$headerPanel = $(\"<table>\");\r\n        this._$thead = $(\"<thead>\").appendTo(this._$headerPanel);\r\n        this._$fixedContainer = $(\"<div>\").addClass(FIXED_CONTAINER_CLASS);\r\n        this._$allDayContainer = $(\"<div>\").addClass(ALL_DAY_CONTAINER_CLASS);\r\n        this._initAllDayPanelElements();\r\n        this._createAllDayPanelElements();\r\n        this._$timePanel = $(\"<table>\").addClass(this._getTimePanelClass());\r\n        this._$dateTable = $(\"<table>\");\r\n        this._$groupTable = $(\"<div>\").addClass(WORKSPACE_VERTICAL_GROUP_TABLE_CLASS)\r\n    },\r\n    _initAllDayPanelElements: function() {\r\n        this._allDayTitles = [];\r\n        this._allDayTables = [];\r\n        this._allDayPanels = []\r\n    },\r\n    _createAllDayPanelElements: function() {\r\n        var groupCount = this._getGroupCount();\r\n        if (this._isVerticalGroupedWorkSpace() && 0 !== groupCount) {\r\n            for (var i = 0; i < groupCount; i++) {\r\n                var $allDayTitle = $(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(messageLocalization.format(\"dxScheduler-allDay\"));\r\n                this._allDayTitles.push($allDayTitle);\r\n                this._$allDayTable = $(\"<table>\");\r\n                this._allDayTables.push(this._$allDayTable);\r\n                this._$allDayPanel = $(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable);\r\n                this._allDayPanels.push(this._$allDayPanel)\r\n            }\r\n        } else {\r\n            this._$allDayTitle = $(\"<div>\").addClass(ALL_DAY_TITLE_CLASS).text(messageLocalization.format(\"dxScheduler-allDay\")).appendTo(this.$element());\r\n            this._$allDayTable = $(\"<table>\");\r\n            this._$allDayPanel = $(\"<div>\").addClass(ALL_DAY_PANEL_CLASS).append(this._$allDayTable)\r\n        }\r\n    },\r\n    _initDateTableScrollable: function() {\r\n        var $dateTableScrollable = $(\"<div>\").addClass(SCHEDULER_DATE_TABLE_SCROLLABLE_CLASS);\r\n        this._dateTableScrollable = this._createComponent($dateTableScrollable, Scrollable, this._dateTableScrollableConfig())\r\n    },\r\n    _dateTableScrollableConfig: function() {\r\n        var config = {\r\n            useKeyboard: false,\r\n            bounceEnabled: false,\r\n            updateManually: true,\r\n            pushBackValue: 0\r\n        };\r\n        if (this._needCreateCrossScrolling()) {\r\n            config = extend(config, this._createCrossScrollingConfig())\r\n        }\r\n        return config\r\n    },\r\n    _createCrossScrollingConfig: function() {\r\n        var _this = this;\r\n        var config = {};\r\n        config.direction = \"both\";\r\n        config.onScroll = function(e) {\r\n            _this._dataTableSemaphore.take();\r\n            _this._sideBarSemaphore.isFree() && _this._sidebarScrollable && _this._sidebarScrollable.scrollTo({\r\n                top: e.scrollOffset.top\r\n            });\r\n            _this._headerSemaphore.isFree() && _this._headerScrollable && _this._headerScrollable.scrollTo({\r\n                left: e.scrollOffset.left\r\n            });\r\n            _this._dataTableSemaphore.release()\r\n        };\r\n        config.onEnd = function() {\r\n            _this.notifyObserver(\"updateResizableArea\", {})\r\n        };\r\n        return config\r\n    },\r\n    _createWorkSpaceElements: function() {\r\n        if (this.option(\"crossScrollingEnabled\")) {\r\n            this._createWorkSpaceScrollableElements()\r\n        } else {\r\n            this._createWorkSpaceStaticElements()\r\n        }\r\n    },\r\n    _createWorkSpaceStaticElements: function() {\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._dateTableScrollable.$content().append(this._$allDayContainer, this._$groupTable, this._$timePanel, this._$dateTable);\r\n            this.$element().append(this._$fixedContainer, this._$headerPanel, this._dateTableScrollable.$element())\r\n        } else {\r\n            this._dateTableScrollable.$content().append(this._$timePanel, this._$dateTable);\r\n            this.$element().append(this._$fixedContainer, this._$headerPanel, this._$allDayContainer, this._$allDayPanel, this._dateTableScrollable.$element())\r\n        }\r\n    },\r\n    _createWorkSpaceScrollableElements: function() {\r\n        this.$element().append(this._$fixedContainer);\r\n        this._createHeaderScrollable();\r\n        this._createSidebarScrollable();\r\n        this.$element().append(this._dateTableScrollable.$element());\r\n        this._headerScrollable.$content().append(this._$headerPanel);\r\n        this._dateTableScrollable.$content().append(this._$dateTable);\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._dateTableScrollable.$content().prepend(this._$allDayContainer);\r\n            this._sidebarScrollable.$content().append(this._$groupTable, this._$timePanel)\r\n        } else {\r\n            this._headerScrollable.$content().append(this._$allDayContainer, this._$allDayPanel)\r\n        }\r\n        this._sidebarScrollable.$content().append(this._$timePanel)\r\n    },\r\n    _createHeaderScrollable: function() {\r\n        var $headerScrollable = $(\"<div>\").addClass(SCHEDULER_HEADER_SCROLLABLE_CLASS).appendTo(this.$element());\r\n        this._headerScrollable = this._createComponent($headerScrollable, Scrollable, this._headerScrollableConfig())\r\n    },\r\n    _headerScrollableConfig: function() {\r\n        var _this2 = this;\r\n        var config = {\r\n            useKeyboard: false,\r\n            showScrollbar: false,\r\n            direction: \"horizontal\",\r\n            useNative: false,\r\n            updateManually: true,\r\n            bounceEnabled: false,\r\n            pushBackValue: 0,\r\n            onScroll: function(e) {\r\n                _this2._headerSemaphore.take();\r\n                _this2._dataTableSemaphore.isFree() && _this2._dateTableScrollable.scrollTo({\r\n                    left: e.scrollOffset.left\r\n                });\r\n                _this2._headerSemaphore.release()\r\n            }\r\n        };\r\n        return config\r\n    },\r\n    _createSidebarScrollable: function() {\r\n        var _this3 = this;\r\n        var $timePanelScrollable = $(\"<div>\").addClass(SCHEDULER_SIDEBAR_SCROLLABLE_CLASS).appendTo(this.$element());\r\n        this._sidebarScrollable = this._createComponent($timePanelScrollable, Scrollable, {\r\n            useKeyboard: false,\r\n            showScrollbar: false,\r\n            direction: \"vertical\",\r\n            useNative: false,\r\n            updateManually: true,\r\n            bounceEnabled: false,\r\n            pushBackValue: 0,\r\n            onScroll: function(e) {\r\n                _this3._sideBarSemaphore.take();\r\n                _this3._dataTableSemaphore.isFree() && _this3._dateTableScrollable.scrollTo({\r\n                    top: e.scrollOffset.top\r\n                });\r\n                _this3._sideBarSemaphore.release()\r\n            }\r\n        })\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible && this._isVerticalGroupedWorkSpace()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n        if (visible && this._needCreateCrossScrolling()) {\r\n            this._setTableSizes()\r\n        }\r\n    },\r\n    _attachTableClasses: function() {\r\n        this._addTableClass(this._$dateTable, this._getDateTableClass());\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            var groupCount = this._getGroupCount();\r\n            for (var i = 0; i < groupCount; i++) {\r\n                this._addTableClass(this._allDayTables[i], ALL_DAY_TABLE_CLASS)\r\n            }\r\n        } else {\r\n            this._addTableClass(this._$allDayTable, ALL_DAY_TABLE_CLASS)\r\n        }\r\n    },\r\n    _attachHeaderTableClasses: function() {\r\n        this._addTableClass(this._$headerPanel, HEADER_PANEL_CLASS)\r\n    },\r\n    _addTableClass: function($el, className) {\r\n        $el && !$el.hasClass(className) && $el.addClass(className)\r\n    },\r\n    _setTableSizes: function() {\r\n        this._attachTableClasses();\r\n        var cellWidth = this.getCellWidth();\r\n        if (cellWidth < this.getCellMinWidth()) {\r\n            cellWidth = this.getCellMinWidth()\r\n        }\r\n        var minWidth = this.getWorkSpaceMinWidth();\r\n        var $headerCells = this._$headerPanel.find(\"tr\").last().find(\"th\");\r\n        var width = cellWidth * $headerCells.length;\r\n        if (width < minWidth) {\r\n            width = minWidth\r\n        }\r\n        this._$headerPanel.width(width);\r\n        this._$dateTable.width(width);\r\n        this._$allDayTable && this._$allDayTable.width(width);\r\n        this._attachHeaderTableClasses();\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n    },\r\n    getWorkSpaceMinWidth: function() {\r\n        return this._groupedStrategy.getWorkSpaceMinWidth()\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this.option(\"crossScrollingEnabled\")) {\r\n            this._setTableSizes()\r\n        }\r\n        this.headerPanelOffsetRecalculate();\r\n        this._cleanCellDataCache();\r\n        this._cleanAllowedPositions()\r\n    },\r\n    _needCreateCrossScrolling: function() {\r\n        return this.option(\"crossScrollingEnabled\")\r\n    },\r\n    _getElementClass: noop,\r\n    _getRowCount: noop,\r\n    _getCellCount: noop,\r\n    _getRowCountWithAllDayRows: function() {\r\n        var allDayRowsCount = this.option(\"showAllDayPanel\") ? this._getGroupCount() : 0;\r\n        return this._getRowCount() + allDayRowsCount\r\n    },\r\n    _initMarkup: function() {\r\n        this._initWorkSpaceUnits();\r\n        this._initDateTableScrollable();\r\n        this._createWorkSpaceElements();\r\n        this.callBase();\r\n        if (!this.option(\"crossScrollingEnabled\")) {\r\n            this._attachTableClasses();\r\n            this._attachHeaderTableClasses()\r\n        }\r\n        this._toggleGroupedClass();\r\n        this._toggleFixedScrollableClass();\r\n        this._renderView();\r\n        this._attachEvents();\r\n        this._setFocusOnCellByOption(this.option(\"selectedCellData\"))\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderDateTimeIndication();\r\n        this._setIndicationUpdateInterval()\r\n    },\r\n    _toggleGroupedClass: function() {\r\n        this.$element().toggleClass(GROUPED_WORKSPACE_CLASS, this._getGroupCount() > 0)\r\n    },\r\n    _toggleFixedScrollableClass: noop,\r\n    _renderView: function() {\r\n        this._setFirstViewDate();\r\n        this._applyCellTemplates(this._renderGroupHeader());\r\n        this._renderDateHeader();\r\n        this._renderTimePanel();\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            var groupCount = this._getGroupCount();\r\n            for (var i = 0; i < groupCount; i++) {\r\n                this._renderAllDayPanel(i)\r\n            }\r\n        }\r\n        this._renderDateTable();\r\n        this._renderAllDayPanel();\r\n        this._updateGroupTableHeight();\r\n        this._shader = new VerticalShader(this)\r\n    },\r\n    _updateGroupTableHeight: function() {\r\n        if (this._isVerticalGroupedWorkSpace() && windowUtils.hasWindow()) {\r\n            this._setHorizontalGroupHeaderCellsHeight()\r\n        }\r\n    },\r\n    _renderDateTimeIndication: noop,\r\n    _setIndicationUpdateInterval: noop,\r\n    _refreshDateTimeIndication: noop,\r\n    _setFocusOnCellByOption: function(data) {\r\n        var cells = [];\r\n        this._releaseFocusedCell();\r\n        for (var i = 0; i < data.length; i++) {\r\n            var groups = data[i].groups;\r\n            var groupIndex = this.option(\"groups\").length && groups ? this._getGroupIndexByResourceId(groups) : 0;\r\n            var allDay = !!data[i].allDay;\r\n            var coordinates = this.getCoordinatesByDate(data[i].startDate, groupIndex, allDay);\r\n            var $cell = this._getCellByCoordinates(coordinates, groupIndex);\r\n            if (isDefined($cell)) {\r\n                this._toggleFocusClass(true, $cell);\r\n                cells.push($cell.get(0))\r\n            }\r\n        }\r\n        this._focusedCells = cells\r\n    },\r\n    _getGroupIndexByResourceId: function(id) {\r\n        var groups = this.option(\"groups\");\r\n        var groupKey = Object.keys(id)[0];\r\n        var groupValue = id[groupKey];\r\n        var tree = this.invoke(\"createResourcesTree\", groups);\r\n        var index = 0;\r\n        for (var i = 0; i < tree.length; i++) {\r\n            if (tree[i].name === groupKey && tree[i].value === groupValue) {\r\n                index = tree[i].leafIndex\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    _setFirstViewDate: function() {\r\n        var firstDayOfWeek = isDefined(this._firstDayOfWeek()) ? this._firstDayOfWeek() : dateLocalization.firstDayOfWeekIndex();\r\n        this._firstViewDate = dateUtils.getFirstWeekDate(this._getViewStartByOptions(), firstDayOfWeek);\r\n        this._setStartDayHour(this._firstViewDate)\r\n    },\r\n    _getViewStartByOptions: function() {\r\n        if (!this.option(\"startDate\")) {\r\n            return this.option(\"currentDate\")\r\n        } else {\r\n            var startDate = dateUtils.trimTime(this._getStartViewDate());\r\n            var currentDate = this.option(\"currentDate\");\r\n            var diff = startDate.getTime() <= currentDate.getTime() ? 1 : -1;\r\n            var endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff);\r\n            while (!this._dateInRange(currentDate, startDate, endDate, diff)) {\r\n                startDate = endDate;\r\n                endDate = new Date(startDate.getTime() + this._getIntervalDuration() * diff)\r\n            }\r\n            return diff > 0 ? startDate : endDate\r\n        }\r\n    },\r\n    _getHeaderDate: function() {\r\n        return this.getStartViewDate()\r\n    },\r\n    _getStartViewDate: function() {\r\n        return this.option(\"startDate\")\r\n    },\r\n    _dateInRange: function(date, startDate, endDate, diff) {\r\n        return diff > 0 ? dateUtils.dateInRange(date, startDate, new Date(endDate.getTime() - 1)) : dateUtils.dateInRange(date, endDate, startDate, \"date\")\r\n    },\r\n    _getIntervalDuration: function() {\r\n        return toMs(\"day\") * this.option(\"intervalCount\")\r\n    },\r\n    _setStartDayHour: function(date) {\r\n        var startDayHour = this.option(\"startDayHour\");\r\n        if (isDefined(startDayHour)) {\r\n            date.setHours(startDayHour, startDayHour % 1 * 60, 0, 0)\r\n        }\r\n    },\r\n    _firstDayOfWeek: function() {\r\n        return this.option(\"firstDayOfWeek\")\r\n    },\r\n    _attachEvents: function() {\r\n        this._createSelectionChangedAction();\r\n        this._attachClickEvent();\r\n        this._attachContextMenuEvent()\r\n    },\r\n    _attachClickEvent: function() {\r\n        var that = this;\r\n        var pointerDownAction = this._createAction(function(e) {\r\n            that._pointerDownHandler(e.event)\r\n        });\r\n        this._createCellClickAction();\r\n        var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\r\n        var $element = this.$element();\r\n        eventsEngine.off($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME);\r\n        eventsEngine.on($element, SCHEDULER_WORKSPACE_DXPOINTERDOWN_EVENT_NAME, function(e) {\r\n            if (eventUtils.isMouseEvent(e) && e.which > 1) {\r\n                e.preventDefault();\r\n                return\r\n            }\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXCLICK_EVENT_NAME, cellSelector, function(e) {\r\n            var $cell = $(e.target);\r\n            that._cellClickAction({\r\n                event: e,\r\n                cellElement: getPublicElement($cell),\r\n                cellData: that.getCellData($cell)\r\n            })\r\n        })\r\n    },\r\n    _createCellClickAction: function() {\r\n        var that = this;\r\n        this._cellClickAction = this._createActionByOption(\"onCellClick\", {\r\n            afterExecute: function(e) {\r\n                that._moveToClosestNonStub(e.args[0].event)\r\n            }\r\n        })\r\n    },\r\n    _createSelectionChangedAction: function() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _moveToClosestNonStub: function(e) {\r\n        var $target = $(e.target);\r\n        if (this._showPopup && this._hasFocusClass($target)) {\r\n            delete this._showPopup;\r\n            this._showAddAppointmentPopup($target)\r\n        }\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        var $target = $(e.target);\r\n        if (!$target.hasClass(DATE_TABLE_CELL_CLASS) && !$target.hasClass(ALL_DAY_TABLE_CELL_CLASS)) {\r\n            this._isCellClick = false;\r\n            return\r\n        }\r\n        this._isCellClick = true;\r\n        if ($target.hasClass(DATE_TABLE_FOCUSED_CELL_CLASS)) {\r\n            this._showPopup = true\r\n        } else {\r\n            this._setFocusedCell($target)\r\n        }\r\n    },\r\n    _showAddAppointmentPopup: function($cell) {\r\n        var firstCellData = this.getCellData($cell.first());\r\n        var lastCellData = this.getCellData($cell.last());\r\n        var args = {\r\n            startDate: this.invoke(\"convertDateByTimezoneBack\", firstCellData.startDate) || firstCellData.startDate,\r\n            endDate: this.invoke(\"convertDateByTimezoneBack\", lastCellData.endDate) || lastCellData.endDate\r\n        };\r\n        if (isDefined(lastCellData.allDay)) {\r\n            args.allDay = lastCellData.allDay\r\n        }\r\n        extend(args, lastCellData.groups);\r\n        this.notifyObserver(\"showAddAppointmentPopup\", args)\r\n    },\r\n    _attachContextMenuEvent: function() {\r\n        this._createContextMenuAction();\r\n        var cellSelector = \".\" + DATE_TABLE_CELL_CLASS + \",.\" + ALL_DAY_TABLE_CELL_CLASS;\r\n        var $element = this.$element();\r\n        var eventName = eventUtils.addNamespace(contextMenuEvent.name, this.NAME);\r\n        eventsEngine.off($element, eventName, cellSelector);\r\n        eventsEngine.on($element, eventName, cellSelector, this._contextMenuHandler.bind(this))\r\n    },\r\n    _contextMenuHandler: function(e) {\r\n        var $cell = $(e.target);\r\n        this._contextMenuAction({\r\n            event: e,\r\n            cellElement: getPublicElement($cell),\r\n            cellData: this.getCellData($cell)\r\n        });\r\n        this._contextMenuHandled = true\r\n    },\r\n    _createContextMenuAction: function() {\r\n        this._contextMenuAction = this._createActionByOption(\"onCellContextMenu\")\r\n    },\r\n    _getGroupHeaderContainer: function() {\r\n        if (this._isVerticalGroupedWorkSpace()) {\r\n            return this._$groupTable\r\n        }\r\n        return this._$thead\r\n    },\r\n    _getDateHeaderContainer: function() {\r\n        return this._$thead\r\n    },\r\n    _renderGroupHeader: function() {\r\n        var $container = this._getGroupHeaderContainer();\r\n        var groupCount = this._getGroupCount();\r\n        var cellTemplates = [];\r\n        if (groupCount) {\r\n            var groupRows = this._makeGroupRows(this.option(\"groups\"), this.option(\"groupByDate\"));\r\n            this._attachGroupCountAttr(groupCount, groupRows);\r\n            $container.append(groupRows.elements);\r\n            cellTemplates = groupRows.cellTemplates\r\n        } else {\r\n            this._detachGroupCountAttr()\r\n        }\r\n        return cellTemplates\r\n    },\r\n    _applyCellTemplates: function(templates) {\r\n        templates.forEach(function(template) {\r\n            template()\r\n        })\r\n    },\r\n    _detachGroupCountAttr: function() {\r\n        var groupedAttr = this._groupedStrategy.getGroupCountAttr();\r\n        this.$element().removeAttr(groupedAttr.attr)\r\n    },\r\n    _attachGroupCountAttr: function(groupRowCount, groupRows) {\r\n        var groupedAttr = this._groupedStrategy.getGroupCountAttr(groupRowCount, groupRows);\r\n        this.$element().attr(groupedAttr.attr, groupedAttr.count)\r\n    },\r\n    headerPanelOffsetRecalculate: function() {\r\n        if (!this.option(\"resourceCellTemplate\") && !this.option(\"dateCellTemplate\")) {\r\n            return\r\n        }\r\n        var headerPanelHeight = this.getHeaderPanelHeight();\r\n        var headerHeight = this.invoke(\"getHeaderHeight\");\r\n        var allDayPanelHeight = this.supportAllDayRow() && this.option(\"showAllDayPanel\") ? this._groupedStrategy.getAllDayTableHeight() : 0;\r\n        headerPanelHeight && this._headerScrollable && this._headerScrollable.$element().height(headerPanelHeight + allDayPanelHeight);\r\n        headerPanelHeight && this._dateTableScrollable.$element().css({\r\n            paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\r\n            marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\r\n        });\r\n        headerPanelHeight && this._sidebarScrollable && this._sidebarScrollable.$element().css({\r\n            paddingBottom: allDayPanelHeight + headerPanelHeight + \"px\",\r\n            marginBottom: -1 * (parseInt(headerPanelHeight, 10) + allDayPanelHeight) + \"px\"\r\n        });\r\n        this._$allDayTitle && this._$allDayTitle.css(\"top\", headerHeight + headerPanelHeight + \"px\")\r\n    },\r\n    _makeGroupRows: function(groups, groupByDate) {\r\n        var tableCreatorStrategy = this._isVerticalGroupedWorkSpace() ? tableCreator.VERTICAL : tableCreator.HORIZONTAL;\r\n        return tableCreator.makeGroupedTable(tableCreatorStrategy, groups, {\r\n            groupHeaderRowClass: this._getGroupRowClass(),\r\n            groupRowClass: this._getGroupRowClass(),\r\n            groupHeaderClass: this._getGroupHeaderClass.bind(this),\r\n            groupHeaderContentClass: this._getGroupHeaderContentClass()\r\n        }, this._getCellCount() || 1, this.option(\"resourceCellTemplate\"), this._getGroupCount(), groupByDate)\r\n    },\r\n    _getDateHeaderTemplate: function() {\r\n        return this.option(\"dateCellTemplate\")\r\n    },\r\n    _renderDateHeader: function() {\r\n        var $container = this._getDateHeaderContainer();\r\n        var $headerRow = $(\"<tr>\").addClass(HEADER_ROW_CLASS);\r\n        var count = this._getCellCount();\r\n        var cellTemplate = this._getDateHeaderTemplate();\r\n        var repeatCount = this._calculateHeaderCellRepeatCount();\r\n        var templateCallbacks = [];\r\n        var groupByDate = this.isGroupedByDate();\r\n        var colspan = groupByDate ? this._getGroupCount() : 1;\r\n        var i;\r\n        var j;\r\n        if (!groupByDate) {\r\n            for (j = 0; j < repeatCount; j++) {\r\n                for (i = 0; i < count; i++) {\r\n                    this._renderDateHeaderTemplate($headerRow, i, j * repeatCount + i, cellTemplate, templateCallbacks)\r\n                }\r\n            }\r\n            $container.append($headerRow)\r\n        } else {\r\n            for (i = 0; i < count; i++) {\r\n                var $cell = this._renderDateHeaderTemplate($headerRow, i, i * repeatCount, cellTemplate, templateCallbacks);\r\n                $cell.attr(\"colSpan\", colspan)\r\n            }\r\n            $container.prepend($headerRow)\r\n        }\r\n        this._applyCellTemplates(templateCallbacks);\r\n        return $headerRow\r\n    },\r\n    _renderDateHeaderTemplate: function($container, i, calculatedIndex, cellTemplate, templateCallbacks) {\r\n        var text = this._getHeaderText(i);\r\n        var $cell = $(\"<th>\").addClass(this._getHeaderPanelCellClass(i)).attr(\"title\", text);\r\n        if (cellTemplate && cellTemplate.render) {\r\n            templateCallbacks.push(cellTemplate.render.bind(cellTemplate, {\r\n                model: {\r\n                    text: text,\r\n                    date: this._getDateByIndex(i)\r\n                },\r\n                index: calculatedIndex,\r\n                container: getPublicElement($cell)\r\n            }))\r\n        } else {\r\n            $cell.text(text)\r\n        }\r\n        $container.append($cell);\r\n        return $cell\r\n    },\r\n    _getHeaderPanelCellClass: function(i) {\r\n        var cellClass = HEADER_PANEL_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i + 1)\r\n    },\r\n    _calculateHeaderCellRepeatCount: function() {\r\n        return this._groupedStrategy.calculateHeaderCellRepeatCount()\r\n    },\r\n    _renderAllDayPanel: function(index) {\r\n        var cellCount = this._getCellCount();\r\n        if (!this._isVerticalGroupedWorkSpace()) {\r\n            cellCount *= this._getGroupCount() || 1\r\n        }\r\n        var cellTemplates = this._renderTableBody({\r\n            container: this._allDayPanels.length ? getPublicElement(this._allDayTables[index]) : getPublicElement(this._$allDayTable),\r\n            rowCount: 1,\r\n            cellCount: cellCount,\r\n            cellClass: this._getAllDayPanelCellClass.bind(this),\r\n            rowClass: ALL_DAY_TABLE_ROW_CLASS,\r\n            cellTemplate: this.option(\"dataCellTemplate\"),\r\n            getCellData: this._getAllDayCellData.bind(this),\r\n            groupIndex: index\r\n        }, true);\r\n        this._toggleAllDayVisibility();\r\n        this._applyCellTemplates(cellTemplates)\r\n    },\r\n    _getAllDayPanelCellClass: function(i, j) {\r\n        var cellClass = ALL_DAY_TABLE_CELL_CLASS + \" \" + HORIZONTAL_SIZES_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, j + 1)\r\n    },\r\n    _getAllDayCellData: function(cell, rowIndex, cellIndex, groupIndex) {\r\n        var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\r\n        startDate = dateUtils.trimTime(startDate);\r\n        var data = {\r\n            startDate: startDate,\r\n            endDate: new Date(startDate.getTime() + DAY_MS),\r\n            allDay: true\r\n        };\r\n        var groups = this._getCellGroups(groupIndex || this._getGroupIndex(rowIndex, cellIndex));\r\n        if (groups.length) {\r\n            data.groups = {}\r\n        }\r\n        for (var i = 0; i < groups.length; i++) {\r\n            data.groups[groups[i].name] = groups[i].id\r\n        }\r\n        return {\r\n            key: CELL_DATA,\r\n            value: data\r\n        }\r\n    },\r\n    _toggleAllDayVisibility: function() {\r\n        var showAllDayPanel = this.option(\"showAllDayPanel\");\r\n        this._$allDayPanel.toggle(showAllDayPanel);\r\n        this._$allDayTitle && this._$allDayTitle.toggleClass(ALL_DAY_TITLE_HIDDEN_CLASS, !showAllDayPanel);\r\n        this.$element().toggleClass(WORKSPACE_WITH_ALL_DAY_CLASS, showAllDayPanel);\r\n        this._changeAllDayVisibility();\r\n        this._updateScrollable()\r\n    },\r\n    _changeAllDayVisibility: function() {\r\n        this.$element().toggleClass(WORKSPACE_WITH_COLLAPSED_ALL_DAY_CLASS, !this.option(\"allDayExpanded\") && this.option(\"showAllDayPanel\"))\r\n    },\r\n    _updateScrollable: function() {\r\n        this._dateTableScrollable.update();\r\n        this._headerScrollable && this._headerScrollable.update();\r\n        this._sidebarScrollable && this._sidebarScrollable.update()\r\n    },\r\n    _renderTimePanel: function() {\r\n        var _this4 = this;\r\n        var repeatCount = this._groupedStrategy.calculateTimeCellRepeatCount();\r\n        var startViewDate = this._getDateWithSkippedDST();\r\n        var _getTimeText = function(i) {\r\n            var index = i % _this4._getRowCount();\r\n            if (index % 2 === 0) {\r\n                return dateLocalization.format(_this4._getTimeCellDateCore(startViewDate, i), \"shorttime\")\r\n            }\r\n            return \"\"\r\n        };\r\n        this._renderTableBody({\r\n            container: getPublicElement(this._$timePanel),\r\n            rowCount: this._getTimePanelRowCount() * repeatCount,\r\n            cellCount: 1,\r\n            cellClass: this._getTimeCellClass.bind(this),\r\n            rowClass: TIME_PANEL_ROW_CLASS,\r\n            cellTemplate: this.option(\"timeCellTemplate\"),\r\n            getCellText: _getTimeText.bind(this),\r\n            getCellDate: this._getTimeCellDate.bind(this),\r\n            groupCount: this._getGroupCount(),\r\n            allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayTitles : void 0\r\n        })\r\n    },\r\n    _getDateWithSkippedDST: function() {\r\n        var result = new Date(this.getStartViewDate());\r\n        if (timeZoneUtils.isTimezoneChangeInDate(result)) {\r\n            result = new Date(result.setDate(result.getDate() + 1))\r\n        }\r\n        return result\r\n    },\r\n    _getTimePanelRowCount: function() {\r\n        return this._getCellCountInDay()\r\n    },\r\n    _getCellCountInDay: function(skipRound) {\r\n        var result = this._calculateDayDuration() / this.option(\"hoursInterval\");\r\n        return skipRound ? result : Math.ceil(result)\r\n    },\r\n    _calculateDayDuration: function() {\r\n        return this.option(\"endDayHour\") - this.option(\"startDayHour\")\r\n    },\r\n    _getTimeCellClass: function(i) {\r\n        var cellClass = TIME_PANEL_CELL_CLASS + \" \" + VERTICAL_SIZES_CLASS;\r\n        return this._groupedStrategy.addAdditionalGroupCellClasses(cellClass, i, i)\r\n    },\r\n    _getTimeCellDateAdjustedDST: function(i) {\r\n        var startViewDate = new Date(this.getStartViewDate());\r\n        if (timeZoneUtils.isTimezoneChangeInDate(startViewDate)) {\r\n            startViewDate = new Date(startViewDate.setDate(startViewDate.getDate() + 1))\r\n        }\r\n        return this._getTimeCellDateCore(startViewDate, i)\r\n    },\r\n    _getTimeCellDate: function(i) {\r\n        return this._getTimeCellDateCore(this.getStartViewDate(), i)\r\n    },\r\n    _getTimeCellDateCore: function(startViewDate, i) {\r\n        var result = new Date(startViewDate);\r\n        var timeCellDuration = Math.round(this.getCellDuration());\r\n        var cellCountInDay = this._getCellCountInDay(true);\r\n        result.setMilliseconds(result.getMilliseconds() + timeCellDuration * (i % cellCountInDay));\r\n        return result\r\n    },\r\n    _renderDateTable: function() {\r\n        var groupCount = this._getGroupCount();\r\n        this._renderTableBody({\r\n            container: getPublicElement(this._$dateTable),\r\n            rowCount: this._getTotalRowCount(groupCount),\r\n            cellCount: this._getTotalCellCount(groupCount),\r\n            cellClass: this._getDateTableCellClass.bind(this),\r\n            rowClass: this._getDateTableRowClass(),\r\n            cellTemplate: this.option(\"dataCellTemplate\"),\r\n            getCellData: this._getCellData.bind(this),\r\n            allDayElements: this._insertAllDayRowsIntoDateTable() ? this._allDayPanels : void 0,\r\n            groupCount: groupCount,\r\n            groupByDate: this.option(\"groupByDate\")\r\n        })\r\n    },\r\n    _insertAllDayRowsIntoDateTable: function() {\r\n        return this._groupedStrategy.insertAllDayRowsIntoDateTable()\r\n    },\r\n    _getTotalCellCount: function(groupCount) {\r\n        return this._groupedStrategy.getTotalCellCount(groupCount)\r\n    },\r\n    _getTotalRowCount: function() {\r\n        return this._groupedStrategy.getTotalRowCount()\r\n    },\r\n    _getCellData: function(cell, rowIndex, cellIndex) {\r\n        var data = this._prepareCellData(rowIndex, cellIndex, cell);\r\n        return {\r\n            key: CELL_DATA,\r\n            value: data\r\n        }\r\n    },\r\n    _prepareCellData: function(rowIndex, cellIndex) {\r\n        var startDate = this._getDateByCellIndexes(rowIndex, cellIndex);\r\n        var endDate = this.calculateEndDate(startDate);\r\n        var data = {\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            allDay: this._getTableAllDay()\r\n        };\r\n        var groups = this._getCellGroups(this._getGroupIndex(rowIndex, cellIndex));\r\n        if (groups.length) {\r\n            data.groups = {}\r\n        }\r\n        for (var i = 0; i < groups.length; i++) {\r\n            data.groups[groups[i].name] = groups[i].id\r\n        }\r\n        return data\r\n    },\r\n    _getGroupIndex: function(rowIndex, cellIndex) {\r\n        return this._groupedStrategy.getGroupIndex(rowIndex, cellIndex)\r\n    },\r\n    _getTableAllDay: function() {\r\n        return false\r\n    },\r\n    calculateEndDate: function(startDate) {\r\n        var result = new Date(startDate);\r\n        result.setMilliseconds(result.getMilliseconds() + Math.round(this._getInterval()));\r\n        return result\r\n    },\r\n    _getGroupCount: function() {\r\n        var groups = this.option(\"groups\");\r\n        var result = 0;\r\n        for (var i = 0, len = groups.length; i < len; i++) {\r\n            if (!i) {\r\n                result = groups[i].items.length\r\n            } else {\r\n                result *= groups[i].items.length\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _getPathToLeaf: function(leafIndex) {\r\n        var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\r\n\r\n        function findLeafByIndex(data, index) {\r\n            for (var i = 0; i < data.length; i++) {\r\n                if (data[i].leafIndex === index) {\r\n                    return data[i]\r\n                } else {\r\n                    var _leaf = findLeafByIndex(data[i].children, index);\r\n                    if (_leaf) {\r\n                        return _leaf\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function makeBranch(leaf, result) {\r\n            result = result || [];\r\n            result.push(leaf.value);\r\n            if (leaf.parent) {\r\n                makeBranch(leaf.parent, result)\r\n            }\r\n            return result\r\n        }\r\n        var leaf = findLeafByIndex(tree, leafIndex);\r\n        return makeBranch(leaf).reverse()\r\n    },\r\n    _getCellGroups: function(groupIndex) {\r\n        var result = [];\r\n        if (this._getGroupCount()) {\r\n            var groups = this.option(\"groups\");\r\n            if (groupIndex < 0) {\r\n                return\r\n            }\r\n            var path = this._getPathToLeaf(groupIndex);\r\n            for (var i = 0; i < groups.length; i++) {\r\n                result.push({\r\n                    name: groups[i].name,\r\n                    id: path[i]\r\n                })\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _attachTablesEvents: function() {\r\n        var _this5 = this;\r\n        var that = this;\r\n        var isPointerDown = false;\r\n        var cellHeight;\r\n        var cellWidth;\r\n        var $element = this.$element();\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXDROP_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME);\r\n        eventsEngine.off($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME);\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXDRAGENTER_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, {\r\n            itemSizeFunc: function($element) {\r\n                if (!cellHeight) {\r\n                    cellHeight = getBoundingRect($element.get(0)).height\r\n                }\r\n                if (!cellWidth) {\r\n                    cellWidth = getBoundingRect($element.get(0)).width\r\n                }\r\n                return {\r\n                    width: cellWidth,\r\n                    height: cellHeight\r\n                }\r\n            },\r\n            checkDropTarget: function(target, event) {\r\n                return !_this5._isOutsideScrollable(target, event)\r\n            }\r\n        }, function(e) {\r\n            if (that._$currentTableTarget) {\r\n                that.removeDroppableCellClass(that._$currentTableTarget)\r\n            }\r\n            that._$currentTableTarget = $(e.target);\r\n            that._$currentTableTarget.addClass(DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXDRAGLEAVE_EVENT_NAME, function(e) {\r\n            if (!$element.find($(e.draggingElement)).length) {\r\n                that.removeDroppableCellClass()\r\n            }\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXDROP_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            that.removeDroppableCellClass($(e.target));\r\n            cellHeight = 0;\r\n            cellWidth = 0\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXPOINTERDOWN_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            if (eventUtils.isMouseEvent(e) && 1 === e.which) {\r\n                isPointerDown = true;\r\n                that.$element().addClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS);\r\n                eventsEngine.off(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\r\n                eventsEngine.on(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME, function() {\r\n                    isPointerDown = false;\r\n                    that.$element().removeClass(WORKSPACE_WITH_MOUSE_SELECTION_CLASS)\r\n                })\r\n            }\r\n        });\r\n        eventsEngine.on($element, SCHEDULER_CELL_DXPOINTERMOVE_EVENT_NAME, SCHEDULER_DRAG_AND_DROP_SELECTOR, function(e) {\r\n            if (isPointerDown && that._dateTableScrollable && !that._dateTableScrollable.option(\"scrollByContent\")) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                that._moveToCell($(e.target), true)\r\n            }\r\n        })\r\n    },\r\n    _getDateTables: function() {\r\n        return this._$dateTable.add(this._$allDayTable)\r\n    },\r\n    _getDateTable: function() {\r\n        return this._$dateTable\r\n    },\r\n    _getAllDayTable: function() {\r\n        return this._$allDayTable\r\n    },\r\n    _getInterval: function() {\r\n        if (void 0 === this._interval) {\r\n            this._interval = this.option(\"hoursInterval\") * HOUR_MS\r\n        }\r\n        return this._interval\r\n    },\r\n    _getHeaderText: function(headerIndex) {\r\n        return dateLocalization.format(this._getDateByIndex(headerIndex), this._getFormat())\r\n    },\r\n    _getDateByIndex: abstract,\r\n    _getFormat: abstract,\r\n    _calculateCellIndex: function(rowIndex, cellIndex) {\r\n        return this._groupedStrategy.calculateCellIndex(rowIndex, cellIndex)\r\n    },\r\n    _renderTableBody: function(options, delayCellTemplateRendering) {\r\n        var result = [];\r\n        if (!delayCellTemplateRendering) {\r\n            this._applyCellTemplates(tableCreator.makeTable(options))\r\n        } else {\r\n            result = tableCreator.makeTable(options)\r\n        }\r\n        return result\r\n    },\r\n    _removeAllDayElements: function() {\r\n        this._$allDayTable && this._$allDayTable.remove();\r\n        this._$allDayTitle && this._$allDayTitle.remove()\r\n    },\r\n    _cleanView: function() {\r\n        this._cleanCellDataCache();\r\n        this._cleanAllowedPositions();\r\n        this._$thead.empty();\r\n        this._$dateTable.empty();\r\n        this._shader && this._shader.clean();\r\n        this._$timePanel.empty();\r\n        this._$allDayTable && this._$allDayTable.empty();\r\n        this._$groupTable.empty();\r\n        delete this._hiddenInterval;\r\n        delete this._interval\r\n    },\r\n    _clean: function() {\r\n        eventsEngine.off(domAdapter.getDocument(), SCHEDULER_CELL_DXPOINTERUP_EVENT_NAME);\r\n        this.callBase()\r\n    },\r\n    getWorkArea: function() {\r\n        return this._dateTableScrollable.$content()\r\n    },\r\n    getScrollable: function() {\r\n        return this._dateTableScrollable\r\n    },\r\n    getScrollableScrollTop: function() {\r\n        return this._dateTableScrollable.scrollTop()\r\n    },\r\n    getGroupedScrollableScrollTop: function(allDay) {\r\n        return this._groupedStrategy.getScrollableScrollTop(allDay)\r\n    },\r\n    getScrollableScrollLeft: function() {\r\n        return this._dateTableScrollable.scrollLeft()\r\n    },\r\n    getScrollableOuterWidth: function() {\r\n        return this._dateTableScrollable.scrollWidth()\r\n    },\r\n    getScrollableContainer: function() {\r\n        return this._dateTableScrollable._container()\r\n    },\r\n    getHeaderPanelHeight: function() {\r\n        return this._$headerPanel && this._$headerPanel.outerHeight(true)\r\n    },\r\n    getTimePanelWidth: function() {\r\n        return this._$timePanel && getBoundingRect(this._$timePanel.get(0)).width\r\n    },\r\n    getGroupTableWidth: function() {\r\n        return this._$groupTable ? this._$groupTable.outerWidth() : 0\r\n    },\r\n    getWorkSpaceLeftOffset: function() {\r\n        return this._groupedStrategy.getLeftOffset()\r\n    },\r\n    getGroupedStrategy: function() {\r\n        return this._groupedStrategy\r\n    },\r\n    _getCellCoordinatesByIndex: function(index) {\r\n        var cellIndex = Math.floor(index / this._getRowCount());\r\n        var rowIndex = index - this._getRowCount() * cellIndex;\r\n        return {\r\n            cellIndex: cellIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    _getDateByCellIndexes: function(rowIndex, cellIndex, patchedIndexes) {\r\n        cellIndex = !patchedIndexes ? this._patchCellIndex(cellIndex) : cellIndex;\r\n        var firstViewDate = this.getStartViewDate();\r\n        var currentDate = new Date(firstViewDate.getTime() + this._getMillisecondsOffset(rowIndex, cellIndex) + this._getOffsetByCount(cellIndex));\r\n        currentDate.setTime(currentDate.getTime() + dateUtils.getTimezonesDifference(firstViewDate, currentDate));\r\n        return currentDate\r\n    },\r\n    _patchCellIndex: function(cellIndex) {\r\n        if (this.isGroupedByDate()) {\r\n            cellIndex = Math.floor(cellIndex / this._getGroupCount())\r\n        }\r\n        return cellIndex\r\n    },\r\n    _getOffsetByCount: function() {\r\n        return 0\r\n    },\r\n    _getMillisecondsOffset: function(rowIndex, cellIndex) {\r\n        return this._getInterval() * this._calculateCellIndex(rowIndex, cellIndex) + this._calculateHiddenInterval(rowIndex, cellIndex)\r\n    },\r\n    _calculateHiddenInterval: function(rowIndex, cellIndex) {\r\n        var dayCount = cellIndex % this._getCellCount();\r\n        return dayCount * this._getHiddenInterval()\r\n    },\r\n    _getHiddenInterval: function() {\r\n        if (void 0 === this._hiddenInterval) {\r\n            this._hiddenInterval = DAY_MS - this.getVisibleDayDuration()\r\n        }\r\n        return this._hiddenInterval\r\n    },\r\n    _getIntervalBetween: function(currentDate, allDay) {\r\n        var firstViewDate = this.getStartViewDate();\r\n        var startDayTime = this.option(\"startDayHour\") * HOUR_MS;\r\n        var timeZoneOffset = dateUtils.getTimezonesDifference(firstViewDate, currentDate);\r\n        var fullInterval = currentDate.getTime() - firstViewDate.getTime() - timeZoneOffset;\r\n        var days = this._getDaysOfInterval(fullInterval, startDayTime);\r\n        var weekendsCount = this._getWeekendsCount(days);\r\n        var result = (days - weekendsCount) * DAY_MS;\r\n        if (!allDay) {\r\n            result = fullInterval - days * this._getHiddenInterval() - weekendsCount * this.getVisibleDayDuration()\r\n        }\r\n        return result\r\n    },\r\n    _getWeekendsCount: function() {\r\n        return 0\r\n    },\r\n    _getDaysOfInterval: function(fullInterval, startDayTime) {\r\n        return Math.floor((fullInterval + startDayTime) / DAY_MS)\r\n    },\r\n    _getGroupIndexes: function(appointmentResources) {\r\n        var result = [];\r\n        if (appointmentResources && this.option(\"groups\").length) {\r\n            var tree = this.invoke(\"createResourcesTree\", this.option(\"groups\"));\r\n            result = this.invoke(\"getResourceTreeLeaves\", tree, appointmentResources)\r\n        }\r\n        return result\r\n    },\r\n    _updateIndex: function(index) {\r\n        return index * this._getRowCount()\r\n    },\r\n    _getDroppableCell: function() {\r\n        return this._getDateTables().find(\".\" + DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n    },\r\n    _getWorkSpaceWidth: function() {\r\n        if (this._needCreateCrossScrolling()) {\r\n            return getBoundingRect(this._$dateTable.get(0)).width\r\n        }\r\n        return getBoundingRect(this.$element().get(0)).width - this.getTimePanelWidth()\r\n    },\r\n    _getCellPositionByIndex: function(index, groupIndex, inAllDayRow) {\r\n        var cellCoordinates = this._getCellCoordinatesByIndex(index);\r\n        var $cell = this._getCellByCoordinates(cellCoordinates, groupIndex, inAllDayRow);\r\n        var result = this._getCellPosition($cell);\r\n        this.setCellDataCache(cellCoordinates, groupIndex, $cell);\r\n        if (result) {\r\n            result.rowIndex = cellCoordinates.rowIndex;\r\n            result.cellIndex = cellCoordinates.cellIndex\r\n        }\r\n        return result\r\n    },\r\n    _getCellPosition: function($cell) {\r\n        var position = $cell.position();\r\n        if (this.option(\"rtlEnabled\")) {\r\n            position.left += getBoundingRect($cell.get(0)).width\r\n        }\r\n        return position\r\n    },\r\n    _getCellByCoordinates: function(cellCoordinates, groupIndex, inAllDayRow) {\r\n        var indexes = this._groupedStrategy.prepareCellIndexes(cellCoordinates, groupIndex, inAllDayRow);\r\n        return this._$dateTable.find(\"tr\").eq(indexes.rowIndex).find(\"td\").eq(indexes.cellIndex)\r\n    },\r\n    _getCells: function(allDay, direction) {\r\n        var cellClass = allDay ? ALL_DAY_TABLE_CELL_CLASS : DATE_TABLE_CELL_CLASS;\r\n        if (\"vertical\" === direction) {\r\n            var result = [];\r\n            for (var i = 1;; i++) {\r\n                var cells = this.$element().find(\"tr .\".concat(cellClass, \":nth-child(\").concat(i, \")\"));\r\n                if (!cells.length) {\r\n                    break\r\n                }\r\n                result = result.concat(cells.toArray())\r\n            }\r\n            return $(result)\r\n        } else {\r\n            return this.$element().find(\".\" + cellClass)\r\n        }\r\n    },\r\n    _setHorizontalGroupHeaderCellsHeight: function() {\r\n        var height = getBoundingRect(this._$dateTable.get(0)).height;\r\n        this._$groupTable.outerHeight(height)\r\n    },\r\n    _getDateTableBorder: function() {\r\n        return DATE_TABLE_CELL_BORDER\r\n    },\r\n    _getDateTableBorderOffset: function() {\r\n        return 2 * this._getDateTableBorder()\r\n    },\r\n    _getGroupHeaderCellsContent: function() {\r\n        return this.$element().find(\".\" + GROUP_HEADER_CONTENT_CLASS)\r\n    },\r\n    _getGroupHeaderCells: function() {\r\n        return this.$element().find(\".\" + GROUP_HEADER_CLASS)\r\n    },\r\n    _getScrollCoordinates: function(hours, minutes, date) {\r\n        var currentDate = date || new Date(this.option(\"currentDate\"));\r\n        var startDayHour = this.option(\"startDayHour\");\r\n        var endDayHour = this.option(\"endDayHour\");\r\n        if (hours < startDayHour) {\r\n            hours = startDayHour\r\n        }\r\n        if (hours >= endDayHour) {\r\n            hours = endDayHour - 1\r\n        }\r\n        currentDate.setHours(hours, minutes, 0, 0);\r\n        return this.getCoordinatesByDate(currentDate)\r\n    },\r\n    _isOutsideScrollable: function(target, event) {\r\n        var $dateTableScrollableElement = this._dateTableScrollable.$element();\r\n        var scrollableSize = getBoundingRect($dateTableScrollableElement.get(0));\r\n        var window = windowUtils.getWindow();\r\n        var isTargetInAllDayPanel = !$(target).closest($dateTableScrollableElement).length;\r\n        var isOutsideHorizontalScrollable = event.pageX < scrollableSize.left || event.pageX > scrollableSize.left + scrollableSize.width + (window.scrollX || 0);\r\n        var isOutsideVerticalScrollable = event.pageY < scrollableSize.top || event.pageY > scrollableSize.top + scrollableSize.height + (window.scrollY || 0);\r\n        if (isTargetInAllDayPanel && !isOutsideHorizontalScrollable) {\r\n            return false\r\n        }\r\n        return isOutsideVerticalScrollable || isOutsideHorizontalScrollable\r\n    },\r\n    setCellDataCache: function(cellCoordinates, groupIndex, $cell) {\r\n        var cache = this.getCellDataCache();\r\n        var data = this.getCellData($cell);\r\n        var key = JSON.stringify({\r\n            rowIndex: cellCoordinates.rowIndex,\r\n            cellIndex: cellCoordinates.cellIndex,\r\n            groupIndex: groupIndex\r\n        });\r\n        cache[key] = data\r\n    },\r\n    setCellDataCacheAlias: function(appointment, geometry) {\r\n        var key = JSON.stringify({\r\n            rowIndex: appointment.rowIndex,\r\n            cellIndex: appointment.cellIndex,\r\n            groupIndex: appointment.groupIndex\r\n        });\r\n        var aliasKey = JSON.stringify({\r\n            top: geometry.top,\r\n            left: geometry.left\r\n        });\r\n        var cache = this.getCellDataCache();\r\n        if (cache[key]) {\r\n            cache[aliasKey] = cache[key]\r\n        }\r\n    },\r\n    getCellDataCache: function(key) {\r\n        if (!this._cache) {\r\n            this._cache = {}\r\n        }\r\n        return key ? this._cache[key] : this._cache\r\n    },\r\n    _cleanCellDataCache: function() {\r\n        delete this._cache\r\n    },\r\n    _cleanAllowedPositions: function() {\r\n        delete this._maxAllowedVerticalPosition;\r\n        delete this._maxAllowedPosition\r\n    },\r\n    supportAllDayRow: function() {\r\n        return true\r\n    },\r\n    keepOriginalHours: function() {\r\n        return false\r\n    },\r\n    getFocusedCellData: function() {\r\n        var $focusedCells = this._getAllFocusedCells();\r\n        var result = [];\r\n        if ($focusedCells.length > 1) {\r\n            result = this._getMultipleCellsData($focusedCells)\r\n        } else {\r\n            var data = this.getCellData($focusedCells);\r\n            data && result.push(data)\r\n        }\r\n        return result\r\n    },\r\n    _getMultipleCellsData: function($cells) {\r\n        var data = [];\r\n        for (var i = 0; i < $cells.length; i++) {\r\n            data.push(dataUtils.data($cells[i], CELL_DATA))\r\n        }\r\n        return data\r\n    },\r\n    getCellData: function($cell) {\r\n        var data = $cell[0] ? dataUtils.data($cell[0], CELL_DATA) : void 0;\r\n        return extend(true, {}, data)\r\n    },\r\n    _getHorizontalMax: function(groupIndex) {\r\n        groupIndex = this.isGroupedByDate() ? this._getGroupCount() - 1 : groupIndex;\r\n        return this._groupedStrategy.getHorizontalMax(groupIndex)\r\n    },\r\n    getCoordinatesByDate: function(date, groupIndex, inAllDayRow) {\r\n        groupIndex = groupIndex || 0;\r\n        var index = this.getCellIndexByDate(date, inAllDayRow);\r\n        var position = this._getCellPositionByIndex(index, groupIndex, inAllDayRow);\r\n        var shift = this.getPositionShift(inAllDayRow ? 0 : this.getTimeShift(date), inAllDayRow);\r\n        var horizontalHMax = this._getHorizontalMax(groupIndex, date);\r\n        if (!position) {\r\n            throw errors.Error(\"E1039\")\r\n        }\r\n        var coordinates = {\r\n            cellPosition: position.left + shift.cellPosition,\r\n            top: position.top + shift.top,\r\n            left: position.left + shift.left,\r\n            rowIndex: position.rowIndex,\r\n            cellIndex: position.cellIndex,\r\n            hMax: horizontalHMax,\r\n            vMax: this.getVerticalMax(groupIndex),\r\n            groupIndex: groupIndex\r\n        };\r\n        return coordinates\r\n    },\r\n    getVerticalMax: function(groupIndex) {\r\n        return this._groupedStrategy.getVerticalMax(groupIndex)\r\n    },\r\n    _getOffsetByAllDayPanel: function(groupIndex) {\r\n        return this._groupedStrategy._getOffsetByAllDayPanel(groupIndex)\r\n    },\r\n    _getGroupTop: function(groupIndex) {\r\n        return this._groupedStrategy._getGroupTop(groupIndex)\r\n    },\r\n    isGroupedByDate: function() {\r\n        return this.option(\"groupByDate\") && this._isHorizontalGroupedWorkSpace() && this._getGroupCount() > 0\r\n    },\r\n    getCellIndexByDate: function(date, inAllDayRow) {\r\n        var timeInterval = inAllDayRow ? 864e5 : this._getInterval();\r\n        var dateTimeStamp = this._getIntervalBetween(date, inAllDayRow);\r\n        var index = Math.floor(dateTimeStamp / timeInterval);\r\n        if (inAllDayRow) {\r\n            index = this._updateIndex(index)\r\n        }\r\n        if (index < 0) {\r\n            index = 0\r\n        }\r\n        return index\r\n    },\r\n    getPositionShift: function(timeShift, isAllDay) {\r\n        return {\r\n            top: timeShift * this.getCellHeight(),\r\n            left: 0,\r\n            cellPosition: 0\r\n        }\r\n    },\r\n    getTimeShift: function(date) {\r\n        var currentDayStart = new Date(date);\r\n        var cellDuration = this.getCellDuration();\r\n        var currentDayEndHour = new Date(new Date(date).setHours(this.option(\"endDayHour\"), 0, 0));\r\n        if (date.getTime() <= currentDayEndHour.getTime()) {\r\n            currentDayStart.setHours(this.option(\"startDayHour\"), 0, 0, 0)\r\n        }\r\n        var currentDateTime = date.getTime();\r\n        var currentDayStartTime = currentDayStart.getTime();\r\n        var minTime = this._firstViewDate.getTime();\r\n        return currentDateTime > minTime ? (currentDateTime - currentDayStartTime) % cellDuration / cellDuration : 0\r\n    },\r\n    _isSkippedData: function() {\r\n        return false\r\n    },\r\n    getCoordinatesByDateInGroup: function(date, appointmentResources, inAllDayRow) {\r\n        var indexes = this._getGroupIndexes(appointmentResources);\r\n        var result = [];\r\n        if (this._isSkippedData(date)) {\r\n            return result\r\n        }\r\n        if (indexes.length) {\r\n            for (var i = 0; i < indexes.length; i++) {\r\n                result.push(this.getCoordinatesByDate(date, indexes[i], inAllDayRow))\r\n            }\r\n        } else {\r\n            result.push(this.getCoordinatesByDate(date, 0, inAllDayRow))\r\n        }\r\n        return result\r\n    },\r\n    getDroppableCellIndex: function() {\r\n        var $droppableCell = this._getDroppableCell();\r\n        var $row = $droppableCell.parent();\r\n        var rowIndex = $row.index();\r\n        return rowIndex * $row.find(\"td\").length + $droppableCell.index()\r\n    },\r\n    getDataByDroppableCell: function() {\r\n        var cellData = this.getCellData(this._getDroppableCell());\r\n        return {\r\n            date: cellData.startDate,\r\n            allDay: cellData.allDay,\r\n            groups: cellData.groups\r\n        }\r\n    },\r\n    getDateRange: function() {\r\n        return [this.getStartViewDate(), this.getEndViewDateByEndDayHour()]\r\n    },\r\n    getCellWidth: function() {\r\n        var cell = this._getCells().first().get(0);\r\n        return cell && getBoundingRect(cell).width\r\n    },\r\n    getCellMinWidth: function() {\r\n        return DATE_TABLE_MIN_CELL_WIDTH\r\n    },\r\n    getRoundedCellWidth: function(groupIndex, startIndex, cellCount) {\r\n        if (groupIndex < 0) {\r\n            return 0\r\n        }\r\n        var $row = this.$element().find(\".\" + this._getDateTableRowClass()).eq(0);\r\n        var width = 0;\r\n        var $cells = $row.find(\".\" + DATE_TABLE_CELL_CLASS);\r\n        var totalCellCount = this._getCellCount() * groupIndex;\r\n        cellCount = cellCount || this._getCellCount();\r\n        if (!typeUtils.isDefined(startIndex)) {\r\n            startIndex = totalCellCount\r\n        }\r\n        for (var i = startIndex; i < totalCellCount + cellCount; i++) {\r\n            width += getBoundingRect($($cells).eq(i).get(0)).width\r\n        }\r\n        return width / (totalCellCount + cellCount - startIndex)\r\n    },\r\n    getCellHeight: function() {\r\n        var cell = this._getCells().first().get(0);\r\n        return cell && getBoundingRect(cell).height\r\n    },\r\n    getAllDayHeight: function() {\r\n        var cell = this._getCells(true).first().get(0);\r\n        return this.option(\"showAllDayPanel\") ? cell && getBoundingRect(cell).height || 0 : 0\r\n    },\r\n    getAllDayOffset: function() {\r\n        return this._groupedStrategy.getAllDayOffset()\r\n    },\r\n    getMaxAllowedPosition: function() {\r\n        if (!this._maxAllowedPosition) {\r\n            var isRtl = this.option(\"rtlEnabled\");\r\n            this._maxAllowedPosition = [];\r\n            this._$dateTable.find(\"tr\").first().find(\"td:nth-child(\" + this._getCellCount() + \"n)\").each(function(_, cell) {\r\n                var maxPosition = $(cell).position().left;\r\n                if (!isRtl) {\r\n                    maxPosition += getBoundingRect(cell).width\r\n                }\r\n                this._maxAllowedPosition.push(Math.round(maxPosition))\r\n            }.bind(this))\r\n        }\r\n        return this._maxAllowedPosition\r\n    },\r\n    getMaxAllowedVerticalPosition: function() {\r\n        if (!this._maxAllowedVerticalPosition) {\r\n            var that = this;\r\n            this._maxAllowedVerticalPosition = [];\r\n            var rows = this._getRowCount();\r\n            this._$dateTable.find(\"tr:nth-child(\" + rows + \"n)\").each(function(_, row) {\r\n                var maxPosition = $(row).position().top + getBoundingRect(row).height;\r\n                that._maxAllowedVerticalPosition.push(Math.round(maxPosition))\r\n            })\r\n        }\r\n        return this._maxAllowedVerticalPosition\r\n    },\r\n    getFixedContainer: function() {\r\n        return this._$fixedContainer\r\n    },\r\n    getAllDayContainer: function() {\r\n        return this._$allDayContainer\r\n    },\r\n    getCellIndexByCoordinates: function(coordinates, allDay) {\r\n        var cellCount = this._getTotalCellCount(this._getGroupCount());\r\n        var cellWidth = Math.floor(this._getWorkSpaceWidth() / cellCount);\r\n        var cellHeight = allDay ? this.getAllDayHeight() : this.getCellHeight();\r\n        var leftOffset = this._isRTL() || this.option(\"crossScrollingEnabled\") ? 0 : this.getWorkSpaceLeftOffset();\r\n        var topIndex = Math.floor(Math.floor(coordinates.top) / Math.floor(cellHeight));\r\n        var leftIndex = Math.floor((coordinates.left + 5 - leftOffset) / cellWidth);\r\n        if (this._isRTL()) {\r\n            leftIndex = cellCount - leftIndex - 1\r\n        }\r\n        return cellCount * topIndex + leftIndex\r\n    },\r\n    getStartViewDate: function() {\r\n        return this._firstViewDate\r\n    },\r\n    getEndViewDate: function() {\r\n        var dateOfLastViewCell = this.getDateOfLastViewCell();\r\n        var endDateOfLastViewCell = this.calculateEndViewDate(dateOfLastViewCell);\r\n        return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell)\r\n    },\r\n    getEndViewDateByEndDayHour: function() {\r\n        var dateOfLastViewCell = this.getDateOfLastViewCell();\r\n        var endTime = dateUtils.dateTimeFromDecimal(this.option(\"endDayHour\"));\r\n        var endDateOfLastViewCell = new Date(dateOfLastViewCell.setHours(endTime.hours, endTime.minutes));\r\n        return this._adjustEndViewDateByDaylightDiff(dateOfLastViewCell, endDateOfLastViewCell)\r\n    },\r\n    calculateEndViewDate: function(dateOfLastViewCell) {\r\n        return new Date(dateOfLastViewCell.getTime() + this.getCellDuration())\r\n    },\r\n    _adjustEndViewDateByDaylightDiff: function(startDate, endDate) {\r\n        var daylightDiff = timeZoneUtils.getDaylightOffsetInMs(startDate, endDate);\r\n        var endDateOfLastViewCell = new Date(endDate.getTime() - daylightDiff);\r\n        return new Date(endDateOfLastViewCell.getTime() - toMs(\"minute\"))\r\n    },\r\n    getDateOfLastViewCell: function() {\r\n        var rowIndex = this._getRowCount() - 1;\r\n        var cellIndex = this._getCellCount();\r\n        if (this.isGroupedByDate()) {\r\n            cellIndex = cellIndex * this._getGroupCount() - 1\r\n        } else {\r\n            cellIndex -= 1\r\n        }\r\n        return this._getDateByCellIndexes(rowIndex, cellIndex, true)\r\n    },\r\n    getCellDuration: function() {\r\n        return 36e5 * this.option(\"hoursInterval\")\r\n    },\r\n    getIntervalDuration: function(allDay) {\r\n        return allDay ? toMs(\"day\") : this.getCellDuration()\r\n    },\r\n    getVisibleDayDuration: function() {\r\n        return this.option(\"hoursInterval\") * this._getCellCountInDay() * HOUR_MS\r\n    },\r\n    getGroupBounds: function(coordinates) {\r\n        var cellCount = this._getCellCount();\r\n        var $cells = this._getCells();\r\n        var cellWidth = this.getCellWidth();\r\n        var result = this._groupedStrategy.getGroupBoundsOffset(cellCount, $cells, cellWidth, coordinates);\r\n        if (this._isRTL()) {\r\n            var startOffset = result.left;\r\n            result.left = result.right - 2 * cellWidth;\r\n            result.right = startOffset + 2 * cellWidth\r\n        }\r\n        return result\r\n    },\r\n    needRecalculateResizableArea: function() {\r\n        return this._isVerticalGroupedWorkSpace() && 0 !== this.getScrollable().scrollTop()\r\n    },\r\n    getCellDataByCoordinates: function(coordinates, allDay) {\r\n        var key = JSON.stringify({\r\n            top: coordinates.top,\r\n            left: coordinates.left\r\n        });\r\n        var data = this.getCellDataCache(key);\r\n        if (data) {\r\n            return data\r\n        }\r\n        var $cells = this._getCells(allDay);\r\n        var cellIndex = this.getCellIndexByCoordinates(coordinates, allDay);\r\n        var $cell = $cells.eq(cellIndex);\r\n        return this.getCellData($cell)\r\n    },\r\n    getVisibleBounds: function() {\r\n        var result = {};\r\n        var $scrollable = this.getScrollable().$element();\r\n        var cellHeight = this.getCellHeight();\r\n        var scrolledCellCount = this.getScrollableScrollTop() / cellHeight;\r\n        var totalCellCount = scrolledCellCount + $scrollable.height() / cellHeight;\r\n        result.top = {\r\n            hours: Math.floor(scrolledCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\r\n            minutes: scrolledCellCount % 2 ? 30 : 0\r\n        };\r\n        result.bottom = {\r\n            hours: Math.floor(totalCellCount * this.option(\"hoursInterval\")) + this.option(\"startDayHour\"),\r\n            minutes: Math.floor(totalCellCount) % 2 ? 30 : 0\r\n        };\r\n        return result\r\n    },\r\n    updateScrollPosition: function(date) {\r\n        date = this.invoke(\"convertDateByTimezone\", date);\r\n        var bounds = this.getVisibleBounds();\r\n        var startDateHour = date.getHours();\r\n        var startDateMinutes = date.getMinutes();\r\n        if (this.needUpdateScrollPosition(startDateHour, startDateMinutes, bounds, date)) {\r\n            this.scrollToTime(startDateHour, startDateMinutes, date)\r\n        }\r\n    },\r\n    needUpdateScrollPosition: function(hours, minutes, bounds) {\r\n        var isUpdateNeeded = false;\r\n        if (hours < bounds.top.hours || hours > bounds.bottom.hours) {\r\n            isUpdateNeeded = true\r\n        }\r\n        if (hours === bounds.top.hours && minutes < bounds.top.minutes) {\r\n            isUpdateNeeded = true\r\n        }\r\n        if (hours === bounds.bottom.hours && minutes > bounds.top.minutes) {\r\n            isUpdateNeeded = true\r\n        }\r\n        return isUpdateNeeded\r\n    },\r\n    getGroupWidth: function(groupIndex) {\r\n        var result = this._getCellCount() * this.getCellWidth();\r\n        var position = this.getMaxAllowedPosition();\r\n        var currentPosition = position[groupIndex];\r\n        if (position.length && currentPosition) {\r\n            if (this._isRTL()) {\r\n                result = currentPosition - position[groupIndex + 1]\r\n            } else {\r\n                if (0 === groupIndex) {\r\n                    result = currentPosition\r\n                } else {\r\n                    result = currentPosition - position[groupIndex - 1]\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    scrollToTime: function(hours, minutes, date) {\r\n        var min = this.getStartViewDate();\r\n        var max = this.getEndViewDate();\r\n        if (date < min || date > max) {\r\n            errors.log(\"W1008\", date);\r\n            return\r\n        }\r\n        var coordinates = this._getScrollCoordinates(hours, minutes, date);\r\n        var scrollable = this.getScrollable();\r\n        scrollable.scrollBy({\r\n            top: coordinates.top - scrollable.scrollTop(),\r\n            left: 0\r\n        })\r\n    },\r\n    getDistanceBetweenCells: function(startIndex, endIndex) {\r\n        var result = 0;\r\n        this.$element().find(\".\" + this._getDateTableRowClass()).first().find(\".\" + DATE_TABLE_CELL_CLASS).each(function(index) {\r\n            if (index < startIndex || index > endIndex) {\r\n                return true\r\n            }\r\n            result += getBoundingRect(this).width\r\n        });\r\n        return result\r\n    },\r\n    needApplyCollectorOffset: function() {\r\n        return false\r\n    },\r\n    initDragBehavior: function(scheduler) {\r\n        if (!this.dragBehavior && scheduler) {\r\n            this.dragBehavior = new AppointmentDragBehavior(scheduler);\r\n            this.dragBehavior.addTo(this.getWorkArea());\r\n            this.dragBehavior.addTo(this.getAllDayContainer());\r\n            this.dragBehavior.addTo(this._$allDayPanel)\r\n        }\r\n    },\r\n    _isApplyCompactAppointmentOffset: function() {\r\n        return this._supportCompactDropDownAppointments()\r\n    },\r\n    _supportCompactDropDownAppointments: function() {\r\n        return true\r\n    },\r\n    _formatWeekday: function(date) {\r\n        return formatWeekday(date)\r\n    },\r\n    _formatWeekdayAndDay: function(date) {\r\n        return formatWeekday(date) + \" \" + dateLocalization.format(date, \"day\")\r\n    },\r\n    removeDroppableCellClass: function($cellElement) {\r\n        ($cellElement || this._getDroppableCell()).removeClass(DATE_TABLE_DROPPABLE_CELL_CLASS)\r\n    }\r\n}).include(publisherMixin);\r\nmodule.exports = SchedulerWorkSpace;\r\n"]},"metadata":{},"sourceType":"script"}